

















































class_presets_global_controller: [ value, 2 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/256842130)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-128790432)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-1373283432)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-1030143144)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
ERROR: Message 'apply_action' not understood.
RECEIVER:
   nil
ARGS:

PROTECTED CALL STACK:
	Meta_MethodError:new	0xc3cd5a0
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = nil
	Meta_DoesNotUnderstandError:new	0xc3ce6e0
		arg this = DoesNotUnderstandError
		arg receiver = nil
		arg selector = apply_action
		arg args = [  ]
	Object:doesNotUnderstand	0xa6058a0
		arg this = nil
		arg selector = apply_action
		arg args = nil
	a FunctionDef	0x1f099670
		sourceCode = "{ arg self, curve_idx, load=false;
		var curve = self.menu_items[curve_idx];
		var apply_action, cancel_action;
		var was_custom = false;
		var osc_pos_ctrl;
		if(curve == \\custom) {
			apply_action = { arg pathlist;
				self.model.pathlist = pathlist;
				pathlist.debug(\"class_pparam_wavetable_controller: set_curve: custom: pathlist\");
				self.buffer_array.do(_.free);
				self.buffer_array = Buffer.allocConsecutive(pathlist.size, s, 2048);
				self.buffer_array.do { arg buf, idx;
					s...etc..."
		arg self = ( 'refresh': a Function, 'buffer': Buffer(13, 1024, 1, 44100, /tmp/-714231281), 'model': ( 'uname': osc1_wt, 'buffer_range': 0, 'transmit': wavetable, 'name': Wt, 
  'val': 3, 'pathlist': List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-3...etc...
		arg curve_idx = 3
		arg load = true
		var curve = custom
		var apply_action = a Function
		var cancel_action = a Function
		var was_custom = false
		var osc_pos_ctrl = nil
	a FunctionDef	0x1f0654d0
		sourceCode = "<an open Function>"
		arg key = osc1_wt
	a FunctionDef	0xb9b12a0
		sourceCode = "<an open Function>"
		arg item = osc1_wt
	ArrayedCollection:do	0xb943fe0
		arg this = [ modulator2_curve1, nil, nil, modulator3_env_attack, nil, nil, modulator3_ampmod, modulator1_kind, modulator3_steps2, osc1_wt_pos, nil, nil, osc2_amp, modosc_pitch, modulator2_glidefade, eq, env1_sustain_time, nil, nil, nil, nil, macro8_control, osc1_intensity, nil, nil, nil, nil, nil, nil, osc2_intensity, nil, fx1_kind, env2_sustain_time, routing_feedback, modulator2_steps2, modulator2_perfcurve2, macro5_control, nil, pan, nil, nil, nil, nil, nil, nil, nil, modulator2_steps_amp, amp_mod, nil, modulator1_r...etc...
		arg function = a Function
		var i = 381
	Set:do	0xb9b1060
		arg this = Set[ modulator2_curve1, modulator3_env_attack, modulator3_ampmod, modulator1_kind, modulator3_steps2, osc1_wt_pos, osc2_amp, modosc_pitch, modulator2_glidefade, eq, env1_sustain_time, macro8_control, osc1_intensity, osc2_intensity, fx1_kind, env2_sustain_time, routing_feedback, modulator2_steps2, modulator2_perfcurve2, macro5_control, pan, modulator2_steps_amp, amp_mod, modulator1_rate, master, insert2, filter2_arg2, macro6_control, modulator3_amp, modulator4_kind, insert1_arg1, modosc_filterfm, osc2_wt_pos...etc...
		arg function = a Function
		var i = 190
	a FunctionDef	0x1f070530
		sourceCode = "{ arg self, name, val, update=true;
		var final_val, mod;
		[name, val].debug(\"class_presets_global_controller\");
		switch(name,
			\\value, { 
				self.model.val = val;
				self.model.val_uname = self.menu_items[val];
				self.load_preset_by_uname(self.model.val_uname);
			}
		);
		if(update) {
			self.changed(\\set_property, name, val);
		}
	}"
		arg self = ( 'load_preset_by_uname': a Function, 'main_controller': a Function, 'preset_dict': Dictionary[ (plop -> ( 'uname': plop, 'name': plop, 'data': Dictionary[ (modulator2_curve1 -> ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 )), (osc2_fader -> ( 'norm_val': 0.5, 'name': Filter output, 'transmit': bus, 'val': 0.5, 
  'spec': a ControlSpec(0, 1, 'linear', 0, 0.5, ""), 'kind': knob, 'numslot': 0, 'uname': osc2_fader )), (modulator4_glidefad...etc...
		arg name = value
		arg val = 2
		arg update = false
		var final_val = nil
		var mod = nil
	JSCView:doAction	0xbf68920
		arg this = a JSCPopUpMenu
	a FunctionDef	0xb44a860
		sourceCode = "<an open Function>"
	a FunctionDef	0xbba1aa0
		sourceCode = "<an open Function>"
	Function:prTry	0xb44c7a0
		arg this = a Function
		var result = nil
		var thread = a Thread
		var next = nil
		var wasInProtectedFunc = false
	
CALL STACK:
	DoesNotUnderstandError:reportError   0x13799850
		arg this = <instance of DoesNotUnderstandError>
	< closed FunctionDef >   0xf84cdd0
		arg error = <instance of DoesNotUnderstandError>
	Integer:forBy   0x1c193810
		arg this = 0
		arg endval = 0
		arg stepval = 2
		arg function = <instance of Function>
		var i = 0
		var j = 0
	SequenceableCollection:pairsDo   0x1d5ab3d0
		arg this = [*2]
		arg function = <instance of Function>
	Scheduler:seconds_   0xa61840b0
		arg this = <instance of Scheduler>
		arg newSeconds = 1353039877.1955
	Meta_AppClock:tick   0xa6158370
		arg this = <instance of Meta_AppClock>
		var saveClock = <instance of Meta_SystemClock>
	Process:tick   0x1d5d1cd0
		arg this = <instance of Main>
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#apply_action]
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0.5, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.5 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.20483276434243, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.20483276434243 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.18079287, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.18079287 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.17991234920919, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.17991234920919 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.16666666697711, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.16666666697711 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.15419829357415, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.15419829357415 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
action!!
class_presets_global_controller: save_current_preset_as_uname: aaaa
Instance of String {    (0x1bca2970, gc=CC, fmt=07, flg=00, set=03)
  indexed slots [4]
      0 : a
      1 : a
      2 : a
      3 : a
}
   Symbol 'no_preset'
Instance of String {    (0x14a950b0, gc=CC, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : z
      2 : a
      3 : z
}
Instance of String {    (0x121da130, gc=CC, fmt=07, flg=10, set=03)
  indexed slots [3]
      0 : o
      1 : l
      2 : o
}
Instance of String {    (0x147d1010, gc=CC, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : p
      1 : l
      2 : o
      3 : p
}
class_popup_view: set_property: [ menu_items, nil ]
items, uname, index: [ [ no_preset, aaaa, azaz, olo, plop ], aaaa, 1 ]
class_popup_view: set_property: [ value, 1 ]
class_presets_global_controller: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0.37522197235376, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.37522197235376 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]










































class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-433082211)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/1999992187)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/1982686425)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
ERROR: Message 'apply_action' not understood.
RECEIVER:
   nil
ARGS:

PROTECTED CALL STACK:
	Meta_MethodError:new	0xc3cd5a0
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = nil
	Meta_DoesNotUnderstandError:new	0xc3ce6e0
		arg this = DoesNotUnderstandError
		arg receiver = nil
		arg selector = apply_action
		arg args = [  ]
	Object:doesNotUnderstand	0xa6058a0
		arg this = nil
		arg selector = apply_action
		arg args = nil
	a FunctionDef	0x1f099670
		sourceCode = "{ arg self, curve_idx, load=false;
		var curve = self.menu_items[curve_idx];
		var apply_action, cancel_action;
		var was_custom = false;
		var osc_pos_ctrl;
		if(curve == \\custom) {
			apply_action = { arg pathlist;
				self.model.pathlist = pathlist;
				pathlist.debug(\"class_pparam_wavetable_controller: set_curve: custom: pathlist\");
				self.buffer_array.do(_.free);
				self.buffer_array = Buffer.allocConsecutive(pathlist.size, s, 2048);
				self.buffer_array.do { arg buf, idx;
					s...etc..."
		arg self = ( 'refresh': a Function, 'buffer': Buffer(13, 1024, 1, 44100, /tmp/-714231281), 'model': ( 'uname': osc1_wt, 'buffer_range': 0, 'transmit': wavetable, 'name': Wt, 
  'val': 3, 'pathlist': List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-3...etc...
		arg curve_idx = 3
		arg load = true
		var curve = custom
		var apply_action = a Function
		var cancel_action = a Function
		var was_custom = false
		var osc_pos_ctrl = nil
	a FunctionDef	0x1f0654d0
		sourceCode = "<an open Function>"
		arg key = osc1_wt
	a FunctionDef	0xb9b12a0
		sourceCode = "<an open Function>"
		arg item = osc1_wt
	ArrayedCollection:do	0xb943fe0
		arg this = [ modulator2_curve1, nil, nil, modulator3_env_attack, nil, nil, modulator3_ampmod, modulator1_kind, modulator3_steps2, osc1_wt_pos, nil, nil, osc2_amp, modosc_pitch, modulator2_glidefade, eq, env1_sustain_time, nil, nil, nil, nil, macro8_control, osc1_intensity, nil, nil, nil, nil, nil, nil, osc2_intensity, nil, fx1_kind, env2_sustain_time, routing_feedback, modulator2_steps2, modulator2_perfcurve2, macro5_control, nil, pan, nil, nil, nil, nil, nil, nil, nil, modulator2_steps_amp, amp_mod, nil, modulator1_r...etc...
		arg function = a Function
		var i = 381
	Set:do	0xb9b1060
		arg this = Set[ modulator2_curve1, modulator3_env_attack, modulator3_ampmod, modulator1_kind, modulator3_steps2, osc1_wt_pos, osc2_amp, modosc_pitch, modulator2_glidefade, eq, env1_sustain_time, macro8_control, osc1_intensity, osc2_intensity, fx1_kind, env2_sustain_time, routing_feedback, modulator2_steps2, modulator2_perfcurve2, macro5_control, pan, modulator2_steps_amp, amp_mod, modulator1_rate, master, insert2, filter2_arg2, macro6_control, modulator3_amp, modulator4_kind, insert1_arg1, modosc_filterfm, osc2_wt_pos...etc...
		arg function = a Function
		var i = 190
	a FunctionDef	0x1f070530
		sourceCode = "{ arg self, name, val, update=true;
		var final_val, mod;
		[name, val].debug(\"class_presets_global_controller\");
		switch(name,
			\\value, { 
				self.model.val = val;
				self.model.val_uname = self.menu_items[val];
				self.load_preset_by_uname(self.model.val_uname);
			}
		);
		if(update) {
			self.changed(\\set_property, name, val);
		}
	}"
		arg self = ( 'load_preset_by_uname': a Function, 'main_controller': a Function, 'preset_dict': Dictionary[ (plop -> ( 'uname': plop, 'name': plop, 'data': Dictionary[ (modulator2_curve1 -> ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 )), (osc2_fader -> ( 'norm_val': 0.5, 'name': Filter output, 'transmit': bus, 'val': 0.5, 
  'spec': a ControlSpec(0, 1, 'linear', 0, 0.5, ""), 'kind': knob, 'numslot': 0, 'uname': osc2_fader )), (modulator4_glidefad...etc...
		arg name = value
		arg val = 1
		arg update = false
		var final_val = nil
		var mod = nil
	JSCView:doAction	0xbf68920
		arg this = a JSCPopUpMenu
	a FunctionDef	0xb44a860
		sourceCode = "<an open Function>"
	a FunctionDef	0xbba1aa0
		sourceCode = "<an open Function>"
	Function:prTry	0xb44c7a0
		arg this = a Function
		var result = nil
		var thread = a Thread
		var next = nil
		var wasInProtectedFunc = false
	
CALL STACK:
	DoesNotUnderstandError:reportError   0x13611e10
		arg this = <instance of DoesNotUnderstandError>
	< closed FunctionDef >   0x136141b0
		arg error = <instance of DoesNotUnderstandError>
	Integer:forBy   0x1bf6a770
		arg this = 0
		arg endval = 0
		arg stepval = 2
		arg function = <instance of Function>
		var i = 0
		var j = 0
	SequenceableCollection:pairsDo   0x19f14ff0
		arg this = [*2]
		arg function = <instance of Function>
	Scheduler:seconds_   0x19f141b0
		arg this = <instance of Scheduler>
		arg newSeconds = 1353039913.4269
	Meta_AppClock:tick   0x19f18c70
		arg this = <instance of Meta_AppClock>
		var saveClock = <instance of Meta_SystemClock>
	Process:tick   0x19f1ad50
		arg this = <instance of Main>
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#apply_action]
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
done

loading synth.sc
loading ui.sc
loading control.sc
buf, client: [ [ Buffer(0, 1024, 1, 44100, nil), passive ], osc2_wt ]
to free: Buffer(0, 1024, 1, 44100, nil)
buf, client: [ [ Buffer(2, 512, 1, 44100, nil), passive ], modulator3_curve2 ]
to free: Buffer(2, 512, 1, 44100, nil)
buf, client: [ [ Buffer(4, 2048, 1, 44100, nil), passive ], modulator3_perfcurve2 ]
to free: Buffer(4, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(7, 2048, 1, 44100, nil), passive ], modulator1_perfcurve1 ]
to free: Buffer(7, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(12, 2048, 1, 44100, nil), passive ], modulator4_perfcurve2 ]
to free: Buffer(12, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(3, 2048, 1, 44100, nil), passive ], modulator3_perfcurve1 ]
to free: Buffer(3, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(8, 2048, 1, 44100, nil), passive ], modulator1_perfcurve2 ]
to free: Buffer(8, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(13, 1024, 1, 44100, /tmp/-714231281), passive ], osc1_wt ]
to free: Buffer(13, 1024, 1, 44100, /tmp/-714231281)
buf, client: [ [ Buffer(17, 2048, 1, 44100, nil), passive ], modulator2_perfcurve1 ]
to free: Buffer(17, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(11, 2048, 1, 44100, nil), passive ], modulator4_perfcurve1 ]
to free: Buffer(11, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(18, 2048, 1, 44100, nil), passive ], modulator2_perfcurve2 ]
to free: Buffer(18, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(10, 512, 1, 44100, /tmp/-772289522), passive ], modulator4_curve2 ]
to free: Buffer(10, 512, 1, 44100, /tmp/-772289522)
buf, client: [ [ Buffer(16, 512, 1, 44100, nil), passive ], modulator2_curve2 ]
to free: Buffer(16, 512, 1, 44100, nil)
buf, client: [ [ Buffer(15, 512, 1, 44100, nil), passive ], modulator2_curve1 ]
to free: Buffer(15, 512, 1, 44100, nil)
buf, client: [ [ Buffer(1, 512, 1, 44100, nil), passive ], modulator3_curve1 ]
to free: Buffer(1, 512, 1, 44100, nil)
buf, client: [ [ Buffer(5, 512, 1, 44100, nil), passive ], modulator1_curve1 ]
to free: Buffer(5, 512, 1, 44100, nil)
buf, client: [ [ Buffer(9, 512, 1, 44100, /tmp/-1495230458), passive ], modulator4_curve1 ]
to free: Buffer(9, 512, 1, 44100, /tmp/-1495230458)
buf, client: [ [ Buffer(6, 512, 1, 44100, nil), passive ], modulator1_curve2 ]
to free: Buffer(6, 512, 1, 44100, nil)
buf, client: [ [ Buffer(14, 1024, 1, 44100, nil), passive ], osc3_wt ]
to free: Buffer(14, 1024, 1, 44100, nil)
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
class_pparam_kind_controller: ( 'bank': noise, 'uname': noise_kind, 'kind': kind, 'name': Noise )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': white, 'specs': [ freq ], 'name': White noise, 'args': [ Cutoff ] ), ( 'uname': pink, 'specs': [ freq ], 'name': Pink noise, 'args': [ Cutoff ] ), ( 'uname': brown, 'specs': [ freq ], 'name': Brown noise, 'args': [ Cutoff ] ) ]
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert2_arg1, insert2_arg2 ], 'name': insert kind, 'uname': insert2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator3_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx2_arg1, fx2_arg2, fx2_arg3, fx2_arg4 ], 'name': fx kind, 'uname': fx2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
class_pparam_kind_controller: ( 'name': Mod routing matrix, 'uname': modosc_matrix, 'kind': matrix )
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator1_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper , 'uname': stepper ) ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
class_pparam_kind_controller: ( 'name': Global presets, 'uname': presets_global, 'kind': preset )
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx1_arg1, fx1_arg2, fx1_arg3, fx1_arg4 ], 'name': fx kind, 'uname': fx1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator4_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert1_arg1, insert1_arg2 ], 'name': insert kind, 'uname': insert1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter2_arg1, filter2_arg2, filter2_arg3 ], 'name': filter kind, 'uname': filter2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
modulation_manager.set_external_value: [ [ macro, 0 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 2 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 4 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 7 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator2_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
class_pparam_kind_controller: ( 'name': Ins1, 'uname': routing_insert1, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert1, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Ins2, 'uname': routing_insert2, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert2, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Feedback, 'uname': routing_feedback, 'bank': routing_feedback, 'kind': kind, 
  'routing_name': feedback, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': After pan, 'uname': after_pan ) ]
class_pparam_kind_controller: ( 'name': Bypass source, 'uname': routing_bypass_osc, 'bank': routing_bypass_osc, 'kind': kind, 
  'routing_name': bypass_osc, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': No bypass, 'uname': off ), ( 'name': Osc 1, 'uname': osc1 ), ( 'name': Osc 2, 'uname': osc2 ), ( 'name': Osc 3, 'uname': osc3 ) ]
class_pparam_kind_controller: ( 'name': Bypass destination, 'uname': routing_bypass_dest, 'bank': routing_bypass_dest, 'kind': kind, 
  'routing_name': bypass_dest, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before Fx 1, 'uname': before_fx1 ), ( 'name': Before Fx 2, 'uname': before_fx2 ), ( 'name': Before Eq, 'uname': before_eq ) ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter1_arg1, filter1_arg2, filter1_arg3 ], 'name': filter kind, 'uname': filter1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
hehehe1
hehehe1.1
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc1_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_pitch, 2 ]
pknob: set_controller: osc1_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc1_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_wt_pos, 3 ]
pknob: set_controller: osc1_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_intensity, 3 ]
pknob: set_controller: osc1_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_amp, 2 ]
pknob: set_controller: osc1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc2_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_pitch, 2 ]
pknob: set_controller: osc2_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc2_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_wt_pos, 3 ]
pknob: set_controller: osc2_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_intensity, 3 ]
pknob: set_controller: osc2_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_amp, 2 ]
pknob: set_controller: osc2_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc3_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_pitch, 2 ]
pknob: set_controller: osc3_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc3_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_wt_pos, 3 ]
pknob: set_controller: osc3_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_intensity, 3 ]
pknob: set_controller: osc3_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_amp, 2 ]
pknob: set_controller: osc3_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
SQUOIIII ce bordel0: a JSCHLayoutView
SQUOIIII ce bordel1: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_pitch, 2 ]
pknob: set_controller: modosc_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel2: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_ring, 2 ]
pknob: set_controller: modosc_ring
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel3: a JSCHLayoutView
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
SQUOIIII ce bordel
SQUOIIII ce bordel4: a JSCHLayoutView
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
hehehe1.3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ White noise, Pink noise, Brown noise ]
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: noise_color
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_color, 2 ]
pknob: set_controller: noise_color
REFRESH++
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: noise_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_amp, 2 ]
pknob: set_controller: noise_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.4
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: feedback_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ feedback_amp, 2 ]
pknob: set_controller: feedback_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe2
hehehe2.1
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_parseq
REFRESH++
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe2.2
hehehe3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg1, 3 ]
pknob: set_controller: filter1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg2, 3 ]
pknob: set_controller: filter1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg3, 2 ]
pknob: set_controller: filter1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg1, 3 ]
pknob: set_controller: filter2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg2, 3 ]
pknob: set_controller: filter2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg3, 2 ]
pknob: set_controller: filter2_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe4
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_mix
REFRESH++
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.1 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ pan, 2 ]
pknob: set_controller: pan
REFRESH++
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5.1
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.1 ]
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 440 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
hehehe5.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ amp, 0 ]
pknob: set_controller: amp
REFRESH++
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.1 ]
hehehe6
class_masterfx_view: make_frame: 0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_masterfx_view: make_frame: 1
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_masterfx_view: make_frame: 5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg1, 2 ]
pknob: set_controller: fx1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg2, 2 ]
pknob: set_controller: fx1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg3, 2 ]
pknob: set_controller: fx1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg4, 2 ]
pknob: set_controller: fx1_arg4
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_center_frame_view.new: 0
class_center_frame_view.new: 1
class_center_frame_view.new: 2
class_center_frame_view.new: 3
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_vel
REFRESH++
REFRESH++
pknob set_property: [ label, Vel ]
pknob set_property: [ value, 0.5 ]
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_ktr
REFRESH++
REFRESH++
pknob set_property: [ label, KTR ]
pknob set_property: [ value, 0.5 ]
new class_dadsr_env_view: 0
class_dadsr_env_view: makectrl: get_val: [ delay_time, 0 ]
class_dadsr_env_view: makectrl: get_val: [ attack_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ attack_level, 1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_level, 0.8 ]
class_dadsr_env_view: makectrl: get_val: [ release_time, 0.1 ]
end new class_dadsr_env_view: 0
class_env_edit_view: making env knob: [ delay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Delay, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0.0001, 1, 'exp', 0, 0.3, " secs"), 'kind': knob, 'numslot': 1, 'uname': env1_delay_time )), (bus -> Bus(control, 515, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_delay_time, 1 ]
pknob: set_controller: env1_delay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
pknob set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ attack_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Attack Time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_time )), (bus -> Bus(control, 516, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_time, 1 ]
pknob: set_controller: env1_attack_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
pknob set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ attack_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Attack level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_level )), (bus -> Bus(control, 517, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_level, 1 ]
pknob: set_controller: env1_attack_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
pknob set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ decay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Decay time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_time )), (bus -> Bus(control, 518, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_time, 1 ]
pknob: set_controller: env1_decay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
pknob set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ decay_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.89442719099992, 'name': Decay level, 'transmit': bus, 'val': 0.8, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_level )), (bus -> Bus(control, 519, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_level, 1 ]
pknob: set_controller: env1_decay_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
pknob set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
pknob set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Sustain loop, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_time )), (bus -> Bus(control, 520, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_time, 1 ]
pknob: set_controller: env1_sustain_time
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain loop ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Sustain level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_level )), (bus -> Bus(control, 521, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_level, 1 ]
pknob: set_controller: env1_sustain_level
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain level ]
pknob set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ release_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Release, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_release_time )), (bus -> Bus(control, 522, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_release_time, 1 ]
pknob: set_controller: env1_release_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_center_frame_view.new: fin
hehehe7
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg1, 2 ]
pknob: set_controller: insert1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg2, 2 ]
pknob: set_controller: insert1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg1, 2 ]
pknob: set_controller: insert2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg2, 2 ]
pknob: set_controller: insert2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
MACRO
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
hehehe8
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), 
  ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c216', 'modulator4_env_attack': 'c482', 'modulator4_glidefade': 'c478', 
  'modulator3_glidefade': 'c487', 'modulator3_ampmod': 'c486', 'fx1_arg2': 'c386', 'env4_decay_time': 'c290', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c415', 'modulator4_ampmod': 'c477', 'osc2_amp': 'c410', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c313', 
  'env2_vel': 'c470', 'modulator2_glidefade': 'c506', 'env3_release_time': 'c384', 'fx2_arg1': 'c474', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c445', 'filter2_arg3': 'c208', 'filter1_arg1': 'c523', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c21', 'env1_delay_time': 'c515', 'env3_delay_time': 'c443', 'modulator4_curve1': 9, 'env3_sustain_level': 'c383', 
  'pan': 'c256', 'env4_release_time': 'c434', 'osc2_pitch': 'c458', 'modulator2_env_attack': 'c510', 'noise_fader': 'c193', 
  'env4_sustain_level': 'c278', 'env1_ktr': 'c514', 'filter1_arg3': 'c525', 'macro4_control': 'c225', 'env3_decay_level': 'c381', 
  'noise_amp': 'c32', 'env2_release_time': 'c350', 'macro6_control': 'c227', 'modosc_ring': 'c454', 'osc3_intensity': 'c500', 
  'env3_vel': 'c441', 'modosc_filterfm': 'c393', 'env4_decay_level': 'c28', 'env4_vel': 'c250', 'osc3_amp': 'c501', 
  'filter_parseq': 'c230', 'feedback_fader': 'c492', 'modulator2_rate': 'c503', 'fx1_arg3': 'c489', 'modulator4_rate': 'c493', 
  'env3_attack_time': 'c444', 'filter1_amp': 'c526', 'modulator2_env_decay': 'c511', 'env1_release_time': 'c522', 'fx1_arg1': 'c385', 
  'osc3_wt_pos': 'c499', 'env2_delay_time': 'c422', 'modulator3_curve1': 1, 'env1_attack_level': 'c517', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c475', 'modulator2_amp': 'c504', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c198', 
  'modulator3_env_attack': 'c417', 'gate': 1, 'env1_decay_time': 'c518', 'modulator2_curve2': 16, 'env2_ktr': 'c104', 
  'modosc_pitch': 'c453', 'bypass_mod': 'c202', 'env4_attack_level': 'c338', 'env1_sustain_time': 'c520', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c294', 'macro1_control': 'c210', 'env2_decay_level': 'c398', 'env2_sustain_time': 'c245', 'fx1_arg4': 'c490', 
  'env3_ktr': 'c442', 'env1_vel': 'c513', 'feedback_amp': 'c491', 'macro5_control': 'c226', 'eq_lowshelf': 'c394', 
  'amp_mod': 'c326', 'modulator1_rate': 'c427', 'env2_decay_time': 'c378', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c382', 'noise_color': 'c274', 'modosc_position': 'c283', 'env1_attack_time': 'c516', 'env1_sustain_level': 'c521', 
  'eq_highshelf': 'c426', 'modulator3_amp': 'c265', 'modulator1_ampmod': 'c439', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c505', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c154', 'macro3_control': 'c212', 'eq_freq': 'c403', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c450', 'env4_ktr': 'c152', 'env2_attack_level': 'c261', 'env1_decay_level': 'c519', 
  'env4_sustain_time': 'c362', 'env3_decay_time': 'c446', 'env4_delay_time': 'c269', 'modulator1_amp': 'c438', 'fx2_arg3': 'c414', 
  'modosc_phase': 'c282', 'osc3_pitch': 'c498', 'modulator3_curve2': 2, 'filter1_arg2': 'c524', 'amp': 'c512', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c306', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c374', 'modulator1_curve1': 5, 'modulator4_amp': 'c494', 'modulator1_glidefade': 'c462', 
  'eq_boost': 'c402', 'modulator3_env_decay': 'c418', 'osc3_fader': 'c502', 'macro2_control': 'c211', 'osc1_wt': 13, 
  'osc1_pitch': 'c232' )
********************************************************************done
********************************************************************done
done
done
done
done
done
done
done
done
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
soul2
done
done
done
done
done
SwingOSC : server connected.

loading synth.sc
loading ui.sc
loading control.sc
a JSCWindow: JSCWindow-remove : this view was already removed.
buf, client: [ [ Buffer(2, 512, 1, 44100, nil), passive ], modulator3_curve2 ]
to free: Buffer(2, 512, 1, 44100, nil)
buf, client: [ [ Buffer(3, 2048, 1, 44100, nil), passive ], modulator3_perfcurve1 ]
to free: Buffer(3, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(13, 1024, 1, 44100, /tmp/1912011669), passive ], osc1_wt ]
to free: Buffer(13, 1024, 1, 44100, /tmp/1912011669)
buf, client: [ [ Buffer(16, 512, 1, 44100, /tmp/795953560), passive ], modulator2_curve2 ]
to free: Buffer(16, 512, 1, 44100, /tmp/795953560)
buf, client: [ [ Buffer(14, 1024, 1, 44100, /tmp/1356432800), passive ], osc3_wt ]
to free: Buffer(14, 1024, 1, 44100, /tmp/1356432800)
buf, client: [ [ Buffer(15, 512, 1, 44100, /tmp/1531816585), passive ], modulator2_curve1 ]
to free: Buffer(15, 512, 1, 44100, /tmp/1531816585)
buf, client: [ [ Buffer(4, 2048, 1, 44100, nil), passive ], modulator3_perfcurve2 ]
to free: Buffer(4, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(5, 512, 1, 44100, nil), passive ], modulator1_curve1 ]
to free: Buffer(5, 512, 1, 44100, nil)
buf, client: [ [ Buffer(18, 2048, 1, 44100, /tmp/-566509393), passive ], modulator2_perfcurve2 ]
to free: Buffer(18, 2048, 1, 44100, /tmp/-566509393)
buf, client: [ [ Buffer(7, 2048, 1, 44100, nil), passive ], modulator1_perfcurve1 ]
to free: Buffer(7, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(12, 2048, 1, 44100, nil), passive ], modulator4_perfcurve2 ]
to free: Buffer(12, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(9, 512, 1, 44100, nil), passive ], modulator4_curve1 ]
to free: Buffer(9, 512, 1, 44100, nil)
buf, client: [ [ Buffer(17, 2048, 1, 44100, /tmp/-470382729), passive ], modulator2_perfcurve1 ]
to free: Buffer(17, 2048, 1, 44100, /tmp/-470382729)
buf, client: [ [ Buffer(8, 2048, 1, 44100, nil), passive ], modulator1_perfcurve2 ]
to free: Buffer(8, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(6, 512, 1, 44100, nil), passive ], modulator1_curve2 ]
to free: Buffer(6, 512, 1, 44100, nil)
buf, client: [ [ Buffer(11, 2048, 1, 44100, nil), passive ], modulator4_perfcurve1 ]
to free: Buffer(11, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(1, 512, 1, 44100, nil), passive ], modulator3_curve1 ]
to free: Buffer(1, 512, 1, 44100, nil)
buf, client: [ [ Buffer(10, 512, 1, 44100, nil), passive ], modulator4_curve2 ]
to free: Buffer(10, 512, 1, 44100, nil)
buf, client: [ [ Buffer(0, 1024, 1, 44100, nil), passive ], osc2_wt ]
to free: Buffer(0, 1024, 1, 44100, nil)
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
class_pparam_kind_controller: ( 'bank': noise, 'uname': noise_kind, 'kind': kind, 'name': Noise )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': white, 'specs': [ freq ], 'name': White noise, 'args': [ Cutoff ] ), ( 'uname': pink, 'specs': [ freq ], 'name': Pink noise, 'args': [ Cutoff ] ), ( 'uname': brown, 'specs': [ freq ], 'name': Brown noise, 'args': [ Cutoff ] ) ]
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert2_arg1, insert2_arg2 ], 'name': insert kind, 'uname': insert2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator3_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx2_arg1, fx2_arg2, fx2_arg3, fx2_arg4 ], 'name': fx kind, 'uname': fx2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
class_pparam_kind_controller: ( 'name': Mod routing matrix, 'uname': modosc_matrix, 'kind': matrix )
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator1_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
class_pparam_kind_controller: ( 'name': Global presets, 'uname': presets_global, 'kind': preset )
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx1_arg1, fx1_arg2, fx1_arg3, fx1_arg4 ], 'name': fx kind, 'uname': fx1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator4_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert1_arg1, insert1_arg2 ], 'name': insert kind, 'uname': insert1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter2_arg1, filter2_arg2, filter2_arg3 ], 'name': filter kind, 'uname': filter2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
modulation_manager.set_external_value: [ [ macro, 0 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 2 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 4 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 7 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator2_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
class_pparam_kind_controller: ( 'name': Ins1, 'uname': routing_insert1, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert1, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Ins2, 'uname': routing_insert2, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert2, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Feedback, 'uname': routing_feedback, 'bank': routing_feedback, 'kind': kind, 
  'routing_name': feedback, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': After pan, 'uname': after_pan ) ]
class_pparam_kind_controller: ( 'name': Bypass source, 'uname': routing_bypass_osc, 'bank': routing_bypass_osc, 'kind': kind, 
  'routing_name': bypass_osc, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': No bypass, 'uname': off ), ( 'name': Osc 1, 'uname': osc1 ), ( 'name': Osc 2, 'uname': osc2 ), ( 'name': Osc 3, 'uname': osc3 ) ]
class_pparam_kind_controller: ( 'name': Bypass destination, 'uname': routing_bypass_dest, 'bank': routing_bypass_dest, 'kind': kind, 
  'routing_name': bypass_dest, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before Fx 1, 'uname': before_fx1 ), ( 'name': Before Fx 2, 'uname': before_fx2 ), ( 'name': Before Eq, 'uname': before_eq ) ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter1_arg1, filter1_arg2, filter1_arg3 ], 'name': filter kind, 'uname': filter1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
hehehe1
hehehe1.1
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc1_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_pitch, 2 ]
pknob: set_controller: osc1_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc1_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_wt_pos, 3 ]
pknob: set_controller: osc1_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_intensity, 3 ]
pknob: set_controller: osc1_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_amp, 2 ]
pknob: set_controller: osc1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc2_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_pitch, 2 ]
pknob: set_controller: osc2_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc2_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_wt_pos, 3 ]
pknob: set_controller: osc2_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_intensity, 3 ]
pknob: set_controller: osc2_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_amp, 2 ]
pknob: set_controller: osc2_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc3_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_pitch, 2 ]
pknob: set_controller: osc3_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc3_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_wt_pos, 3 ]
pknob: set_controller: osc3_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_intensity, 3 ]
pknob: set_controller: osc3_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_amp, 2 ]
pknob: set_controller: osc3_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
SQUOIIII ce bordel0: a JSCHLayoutView
SQUOIIII ce bordel1: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_pitch, 2 ]
pknob: set_controller: modosc_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel2: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_ring, 2 ]
pknob: set_controller: modosc_ring
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel3: a JSCHLayoutView
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
SQUOIIII ce bordel
SQUOIIII ce bordel4: a JSCHLayoutView
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe1.3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ White noise, Pink noise, Brown noise ]
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: noise_color
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_color, 2 ]
pknob: set_controller: noise_color
REFRESH++
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: noise_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_amp, 2 ]
pknob: set_controller: noise_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.4
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: feedback_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ feedback_amp, 2 ]
pknob: set_controller: feedback_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe2
hehehe2.1
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_parseq
REFRESH++
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe2.2
hehehe3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg1, 3 ]
pknob: set_controller: filter1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg2, 3 ]
pknob: set_controller: filter1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg3, 2 ]
pknob: set_controller: filter1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg1, 3 ]
pknob: set_controller: filter2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg2, 3 ]
pknob: set_controller: filter2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg3, 2 ]
pknob: set_controller: filter2_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe4
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_mix
REFRESH++
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.1 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ pan, 2 ]
pknob: set_controller: pan
REFRESH++
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5.1
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.1 ]
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 440 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
hehehe5.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ amp, 0 ]
pknob: set_controller: amp
REFRESH++
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.1 ]
hehehe6
class_masterfx_view: make_frame: 0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_masterfx_view: make_frame: 1
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_masterfx_view: make_frame: 5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg1, 2 ]
pknob: set_controller: fx1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg2, 2 ]
pknob: set_controller: fx1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg3, 2 ]
pknob: set_controller: fx1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg4, 2 ]
pknob: set_controller: fx1_arg4
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_center_frame_view.new: 0
class_center_frame_view.new: 1
class_center_frame_view.new: 2
class_center_frame_view.new: 3
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_vel
REFRESH++
REFRESH++
pknob set_property: [ label, Vel ]
pknob set_property: [ value, 0.5 ]
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_ktr
REFRESH++
REFRESH++
pknob set_property: [ label, KTR ]
pknob set_property: [ value, 0.5 ]
new class_dadsr_env_view: 0
class_dadsr_env_view: makectrl: get_val: [ delay_time, 0 ]
class_dadsr_env_view: makectrl: get_val: [ attack_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ attack_level, 1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_level, 0.8 ]
class_dadsr_env_view: makectrl: get_val: [ release_time, 0.1 ]
end new class_dadsr_env_view: 0
class_env_edit_view: making env knob: [ delay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Delay, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0.0001, 1, 'exp', 0, 0.3, " secs"), 'kind': knob, 'numslot': 1, 'uname': env1_delay_time )), (bus -> Bus(control, 527, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_delay_time, 1 ]
pknob: set_controller: env1_delay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
pknob set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ attack_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Attack Time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_time )), (bus -> Bus(control, 528, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_time, 1 ]
pknob: set_controller: env1_attack_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
pknob set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ attack_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Attack level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_level )), (bus -> Bus(control, 529, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_level, 1 ]
pknob: set_controller: env1_attack_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
pknob set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ decay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Decay time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_time )), (bus -> Bus(control, 530, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_time, 1 ]
pknob: set_controller: env1_decay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ decay_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.89442719099992, 'name': Decay level, 'transmit': bus, 'val': 0.8, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_level )), (bus -> Bus(control, 531, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_level, 1 ]
pknob: set_controller: env1_decay_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
pknob set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Sustain loop, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_time )), (bus -> Bus(control, 532, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_time, 1 ]
pknob: set_controller: env1_sustain_time
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain loop ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Sustain level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_level )), (bus -> Bus(control, 533, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_level, 1 ]
pknob: set_controller: env1_sustain_level
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain level ]
pknob set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ release_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Release, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_release_time )), (bus -> Bus(control, 534, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_release_time, 1 ]
pknob: set_controller: env1_release_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
pknob set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_center_frame_view.new: fin
hehehe7
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg1, 2 ]
pknob: set_controller: insert1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg2, 2 ]
pknob: set_controller: insert1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg1, 2 ]
pknob: set_controller: insert2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg2, 2 ]
pknob: set_controller: insert2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
MACRO
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
hehehe8
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), 
  ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c306', 'modulator4_env_attack': 'c386', 'modulator4_glidefade': 'c382', 
  'modulator3_glidefade': 'c198', 'modulator3_ampmod': 'c32', 'fx1_arg2': 'c506', 'env4_decay_time': 'c290', 'insert1_arg2': 'c229', 
  'fx2_arg4': 'c427', 'modulator4_ampmod': 'c381', 'osc2_amp': 'c28', 'osc1_wt_pos': 'c209', 'env2_attack_time': 'c470', 
  'env2_vel': 'c193', 'modulator2_glidefade': 'c518', 'env3_release_time': 'c504', 'fx2_arg1': 'c402', 'macro8_control': 'c205', 
  'osc1_intensity': 'c210', 'env3_attack_level': 'c445', 'filter2_arg3': 'c232', 'filter1_arg1': 'c535', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c398', 'env1_delay_time': 'c527', 'env3_delay_time': 'c443', 'modulator4_curve1': 9, 'env3_sustain_level': 'c503', 
  'pan': 'c250', 'env4_release_time': 'c462', 'osc2_pitch': 'c104', 'modulator2_env_attack': 'c522', 'noise_fader': 'c458', 
  'env4_sustain_level': 'c278', 'env1_ktr': 'c526', 'filter1_arg3': 'c537', 'macro4_control': 'c201', 'env3_decay_level': 'c501', 
  'noise_amp': 'c410', 'env2_release_time': 'c265', 'macro6_control': 'c203', 'modosc_ring': 'c415', 'osc3_intensity': 'c512', 
  'env3_vel': 'c441', 'modosc_filterfm': 'c438', 'env4_decay_level': 'c245', 'env4_vel': 'c294', 'osc3_amp': 'c513', 
  'filter_parseq': 'c206', 'feedback_fader': 'c492', 'modulator2_rate': 'c515', 'fx1_arg3': 'c489', 'modulator4_rate': 'c493', 
  'env3_attack_time': 'c444', 'filter1_amp': 'c538', 'modulator2_env_decay': 'c523', 'env1_release_time': 'c534', 'fx1_arg1': 'c505', 
  'osc3_wt_pos': 'c511', 'env2_delay_time': 'c362', 'modulator3_curve1': 1, 'env1_attack_level': 'c529', 'osc1_fader': 'c212', 
  'fx2_arg2': 'c403', 'modulator2_amp': 'c516', 'filter2_amp': 'c233', 'osc3_wt': 14, 'env4_attack_time': 'c21', 
  'modulator3_env_attack': 'c417', 'gate': 1, 'env1_decay_time': 'c530', 'modulator2_curve2': 16, 'env2_ktr': 'c422', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c226', 'env4_attack_level': 'c152', 'env1_sustain_time': 'c532', 'filter2_arg1': 'c230', 
  'insert2_arg2': 'c154', 'macro1_control': 'c234', 'env2_decay_level': 'c326', 'env2_sustain_time': 'c313', 'fx1_arg4': 'c490', 
  'env3_ktr': 'c442', 'env1_vel': 'c525', 'feedback_amp': 'c491', 'macro5_control': 'c202', 'eq_lowshelf': 'c439', 
  'amp_mod': 'c256', 'modulator1_rate': 'c454', 'env2_decay_time': 'c434', 'modulator4_curve2': 10, 'filter2_arg2': 'c231', 
  'env3_sustain_time': 'c502', 'noise_color': 'c378', 'modosc_position': 'c283', 'env1_attack_time': 'c528', 'env1_sustain_level': 'c533', 
  'eq_highshelf': 'c453', 'modulator3_amp': 'c261', 'modulator1_ampmod': 'c487', 'osc1_amp': 'c211', 'modulator2_ampmod': 'c517', 
  'insert1_arg1': 'c228', 'osc2_wt_pos': 'c216', 'macro3_control': 'c236', 'eq_freq': 'c478', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c450', 'env4_ktr': 'c269', 'env2_attack_level': 'c374', 'env1_decay_level': 'c531', 
  'env4_sustain_time': 'c274', 'env3_decay_time': 'c446', 'env4_delay_time': 'c350', 'modulator1_amp': 'c486', 'fx2_arg3': 'c426', 
  'modosc_phase': 'c282', 'osc3_pitch': 'c510', 'modulator3_curve2': 2, 'filter1_arg2': 'c536', 'amp': 'c524', 
  'modulator4_env_decay': 'c225', 'bypass_amp': 'c227', 'macro7_control': 'c204', 'modulator3_rate': 'c482', 'filter_mix': 'c207', 
  'osc2_wt': 0, 'env2_sustain_level': 'c338', 'modulator1_curve1': 5, 'modulator4_amp': 'c494', 'modulator1_glidefade': 'c393', 
  'eq_boost': 'c477', 'modulator3_env_decay': 'c418', 'osc3_fader': 'c514', 'macro2_control': 'c235', 'osc1_wt': 13, 
  'osc1_pitch': 'c208' )
********************************************************************done
********************************************************************done
done
done
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
soul2
done
done
done
done
done
done
done
done
done
done
done
 soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
soul2
-----------controller.get_menu_items_names: [ no_preset, aaaa, azaz, olo, plop ]
class_popup_view: set_property: [ value, 0 ]
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, /tmp/-1181967536)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, /tmp/1025340562)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, /tmp/-817769255)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, /tmp/-818369512)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, /tmp/298016397)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: nil
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 209, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
ERROR: Message 'bufnum' not understood.
RECEIVER:
   nil
ARGS:

PROTECTED CALL STACK:
	Meta_MethodError:new	0xc3cd5a0
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = nil
	Meta_DoesNotUnderstandError:new	0xc3ce6e0
		arg this = DoesNotUnderstandError
		arg receiver = nil
		arg selector = bufnum
		arg args = [  ]
	Object:doesNotUnderstand	0xa6058a0
		arg this = nil
		arg selector = bufnum
		arg args = nil
	a FunctionDef	0x12bcef10
		sourceCode = "<an open Function>"
		arg key = osc1_wt
		arg val = ( 'refresh': a Function, 'buffer': Buffer(13, 1024, 1, 44100, /tmp/1829737869), 'model': ( 'uname': osc1_wt, 'buffer_range': -1, 'transmit': wavetable, 'name': Wt, 
  'val': 3, 'kind': wavetable, 'val_uname': custom, 'indexes': 1 ), 'set_property': a Function, 
  'save_data': a Function, 'new': a Function, 'get_menu_items_names': a Function, 'load_data': a Function, 'buffer_array': [  ], 
  'set_curve': a Function, 'get_buffer': a Function, 'curvebank': ( 'triangle1': a Function, 'square1': a Function, 'lin...etc...
		var uname = nil
		var ctrl = nil
		var kind = nil
	Dictionary:keysValuesArrayDo	0xb9c4da0
		arg this = Dictionary[ (modulator2_curve1 -> ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'buffer': Buffer(15, 512, 1, 44100, /tmp/-1369991621), 
  'get_buffer': a Function, 'get_menu_items_names': a Function, 'main_controller': a Function, 'save_data': a Function, 'model': ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 ), 
  'set_curve': a Function, 'new': a Function, 'get_curvebank': a Function, 'load_data': a Funct...etc...
		arg argArray = [ modulator2_curve1, ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'buffer': Buffer(15, 512, 1, 44100, /tmp/-1369991621), 
  'get_buffer': a Function, 'get_menu_items_names': a Function, 'main_controller': a Function, 'save_data': a Function, 'model': ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 ), 
  'set_curve': a Function, 'new': a Function, 'get_curvebank': a Function, 'load_data': a Function ), osc2_f...etc...
		arg function = a Function
		var i = 508
		var j = 92
		var key = nil
		var val = nil
		var arraySize = nil
	Dictionary:keysValuesDo	0xb9bdae0
		arg this = Dictionary[ (modulator2_curve1 -> ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'buffer': Buffer(15, 512, 1, 44100, /tmp/-1369991621), 
  'get_buffer': a Function, 'get_menu_items_names': a Function, 'main_controller': a Function, 'save_data': a Function, 'model': ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 ), 
  'set_curve': a Function, 'new': a Function, 'get_curvebank': a Function, 'load_data': a Funct...etc...
		arg function = a Function
	a FunctionDef	0x12bd5650
		sourceCode = "{ arg self;
		var args = ();
		var synthdef;

		args[\\routing] = ();
		args[\\kinds] = ();
		args[\\enabled] = ();
		args[\\steps] = Array.newClear(4);

		self.data.keysValuesDo { arg key, val;
			var uname, ctrl;
			var kind;
			//val.model.uname.debug(\"build_synthdef: uname\");
			switch(val.model.transmit,
				\\bus, {
					args[val.model.uname] = val.get_bus.asMap;
					//args[val.model.uname] = val.get_bus;
				},
				\\curve, {
					//val.debug(\"class_passive_controller: build_synth...etc..."
		arg self = ( 'fx_feedback_bus': Bus(control, 539, 1, localhost), 'synthdef_ns_args': [ ( 'filter2': true, 'fx1': true, 'fx2': true, 'bypass': true, 
  'filter1': true, 'osc2': true, 'eq': true, 'osc1': true, 'master': true, 
  'insert2': true, 'noise': true, 'modosc': true, 'insert1': true, 'osc3': true, 
  'feedback': true, 'master_pan': true ), ( 'fx1': reverb, 'osc3_wt': 0, 'fx2': reverb, 'filter1': lpf, 
  'modulator2': lfo, 'modulator4': lfo, 'osc2_wt': 0, 'insert2': freqshift, 'noise': white, 
  'insert1': freqs...etc...
		var args = ( 'modulator2_curve1': 15, 'osc2_fader': c306, 'osc3_wt': 14, 'modulator4_glidefade': c382, 
  'env4_attack_time': c21, 'fx1_arg2': c506, 'env4_decay_time': c290, 'insert1_arg2': c229, 'fx2_arg4': c427, 
  'modulator2_curve2': 16, 'osc2_amp': c28, 'modosc_pitch': c414, 'enabled': ( 'osc1': true, 'master': true, 'noise': true, 'modosc': true, 
  'insert1': true, 'osc3': true, 'feedback': true ), 'env2_vel': c193, 
  'bypass_mod': c226, 'env4_attack_level': c152, 'env1_sustain_time': c532, 'fx2_arg1': c402, '...etc...
		var synthdef = nil
	a FunctionDef	0x1f130d70
		sourceCode = "{ arg self, uname;
		// TODO
		uname.debug(\"class_passive_controller: update_arg\");
		self.build_synthdef;
		self.rebuild_synthdef = true;
	
	}"
		arg self = ( 'fx_feedback_bus': Bus(control, 539, 1, localhost), 'synthdef_ns_args': [ ( 'filter2': true, 'fx1': true, 'fx2': true, 'bypass': true, 
  'filter1': true, 'osc2': true, 'eq': true, 'osc1': true, 'master': true, 
  'insert2': true, 'noise': true, 'modosc': true, 'insert1': true, 'osc3': true, 
  'feedback': true, 'master_pan': true ), ( 'fx1': reverb, 'osc3_wt': 0, 'fx2': reverb, 'filter1': lpf, 
  'modulator2': lfo, 'modulator4': lfo, 'osc2_wt': 0, 'insert2': freqshift, 'noise': white, 
  'insert1': freqs...etc...
		arg uname = osc1_wt
	a FunctionDef	0xeac5830
		sourceCode = "{ arg self, curve_idx, load=false;
		var curve = self.menu_items[curve_idx];
		var apply_action, cancel_action;
		var was_custom = false;
		var osc_pos_ctrl;
		if(curve == \\custom) {
			apply_action = { arg pathlist;
				self.model.pathlist = pathlist;
				pathlist.debug(\"class_pparam_wavetable_controller: set_curve: custom: pathlist\");
				self.buffer_array.do(_.free);
				self.buffer_array = Buffer.allocConsecutive(pathlist.size, s, 2048);
				self.buffer_array.do { arg buf, idx;
					s...etc..."
		arg self = ( 'refresh': a Function, 'buffer': Buffer(13, 1024, 1, 44100, /tmp/1829737869), 'model': ( 'uname': osc1_wt, 'buffer_range': -1, 'transmit': wavetable, 'name': Wt, 
  'val': 3, 'kind': wavetable, 'val_uname': custom, 'indexes': 1 ), 'set_property': a Function, 
  'save_data': a Function, 'new': a Function, 'get_menu_items_names': a Function, 'load_data': a Function, 'buffer_array': [  ], 
  'set_curve': a Function, 'get_buffer': a Function, 'curvebank': ( 'triangle1': a Function, 'square1': a Function, 'lin...etc...
		arg curve_idx = 3
		arg load = true
		var curve = custom
		var apply_action = a Function
		var cancel_action = a Function
		var was_custom = false
		var osc_pos_ctrl = ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'get_bus': a Function, 
  'main_controller': a Function, 'save_data': a Function, 'model': ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, -1.001, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos ), 'bus': Bus(control, 209, 1, localhost), 'new': a Function, 
  'update_val': a Function, 'get_norm_val': a Function, 'set_val': a Function, 'load_data': a Function )
	a FunctionDef	0xa5881e30
		sourceCode = "<an open Function>"
		arg key = osc1_wt
	a FunctionDef	0xb9b12a0
		sourceCode = "<an open Function>"
		arg item = osc1_wt
	ArrayedCollection:do	0xb943fe0
		arg this = [ modulator2_curve1, nil, nil, modulator3_env_attack, nil, nil, modulator3_ampmod, modulator1_kind, modulator3_steps2, osc1_wt_pos, nil, nil, osc2_amp, modosc_pitch, modulator2_glidefade, eq, env1_sustain_time, nil, nil, nil, nil, macro8_control, osc1_intensity, nil, nil, nil, nil, nil, nil, osc2_intensity, nil, fx1_kind, env2_sustain_time, routing_feedback, modulator2_steps2, modulator2_perfcurve2, macro5_control, nil, pan, nil, nil, nil, nil, nil, nil, nil, modulator2_steps_amp, amp_mod, nil, modulator1_r...etc...
		arg function = a Function
		var i = 381
	Set:do	0xb9b1060
		arg this = Set[ modulator2_curve1, modulator3_env_attack, modulator3_ampmod, modulator1_kind, modulator3_steps2, osc1_wt_pos, osc2_amp, modosc_pitch, modulator2_glidefade, eq, env1_sustain_time, macro8_control, osc1_intensity, osc2_intensity, fx1_kind, env2_sustain_time, routing_feedback, modulator2_steps2, modulator2_perfcurve2, macro5_control, pan, modulator2_steps_amp, amp_mod, modulator1_rate, master, insert2, filter2_arg2, macro6_control, modulator3_amp, modulator4_kind, insert1_arg1, modosc_filterfm, osc2_wt_pos...etc...
		arg function = a Function
		var i = 190
	a FunctionDef	0x12890d10
		sourceCode = "{ arg self, name, val, update=true;
		var final_val, mod;
		[name, val].debug(\"class_presets_global_controller\");
		switch(name,
			\\value, { 
				self.model.val = val;
				self.model.val_uname = self.menu_items[val];
				self.load_preset_by_uname(self.model.val_uname);
			}
		);
		if(update) {
			self.changed(\\set_property, name, val);
		}
	}"
		arg self = ( 'load_preset_by_uname': a Function, 'main_controller': a Function, 'preset_dict': Dictionary[ (plop -> ( 'uname': plop, 'name': plop, 'data': Dictionary[ (modulator2_curve1 -> ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 )), (osc2_fader -> ( 'norm_val': 0.5, 'name': Filter output, 'transmit': bus, 'val': 0.5, 
  'spec': a ControlSpec(0, 1, 'linear', 0, 0.5, ""), 'kind': knob, 'numslot': 0, 'uname': osc2_fader )), (modulator4_glidefad...etc...
		arg name = value
		arg val = 1
		arg update = false
		var final_val = nil
		var mod = nil
	JSCView:doAction	0xbf68920
		arg this = a JSCPopUpMenu
	a FunctionDef	0xb44a860
		sourceCode = "<an open Function>"
	a FunctionDef	0xbba1aa0
		sourceCode = "<an open Function>"
	Function:prTry	0xb44c7a0
		arg this = a Function
		var result = nil
		var thread = a Thread
		var next = nil
		var wasInProtectedFunc = false
	
CALL STACK:
	DoesNotUnderstandError:reportError   0x12d7d950
		arg this = <instance of DoesNotUnderstandError>
	< closed FunctionDef >   0x120cd010
		arg error = <instance of DoesNotUnderstandError>
	Integer:forBy   0x13ed2fb0
		arg this = 0
		arg endval = 0
		arg stepval = 2
		arg function = <instance of Function>
		var i = 0
		var j = 0
	SequenceableCollection:pairsDo   0x1398ebb0
		arg this = [*2]
		arg function = <instance of Function>
	Scheduler:seconds_   0x139ca430
		arg this = <instance of Scheduler>
		arg newSeconds = 1353040031.0488
	Meta_AppClock:tick   0x13983170
		arg this = <instance of Meta_AppClock>
		var saveClock = <instance of Meta_SystemClock>
	Process:tick   0x139872f0
		arg this = <instance of Main>
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#bufnum]
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
done
done













class_presets_global_controller: [ value, 0 ]


































class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-1209124296)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-967392439)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1175194528)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: nil
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, -1.001, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 209, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
ERROR: Message 'bufnum' not understood.
RECEIVER:
   nil
ARGS:

PROTECTED CALL STACK:
	Meta_MethodError:new	0xc3cd5a0
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = nil
	Meta_DoesNotUnderstandError:new	0xc3ce6e0
		arg this = DoesNotUnderstandError
		arg receiver = nil
		arg selector = bufnum
		arg args = [  ]
	Object:doesNotUnderstand	0xa6058a0
		arg this = nil
		arg selector = bufnum
		arg args = nil
	a FunctionDef	0x12bcef10
		sourceCode = "<an open Function>"
		arg key = osc1_wt
		arg val = ( 'refresh': a Function, 'buffer': Buffer(13, 1024, 1, 44100, /tmp/1829737869), 'model': ( 'uname': osc1_wt, 'buffer_range': -1, 'transmit': wavetable, 'name': Wt, 
  'val': 3, 'kind': wavetable, 'val_uname': custom, 'indexes': 1 ), 'set_property': a Function, 
  'save_data': a Function, 'new': a Function, 'get_menu_items_names': a Function, 'load_data': a Function, 'buffer_array': [  ], 
  'set_curve': a Function, 'get_buffer': a Function, 'curvebank': ( 'triangle1': a Function, 'square1': a Function, 'lin...etc...
		var uname = nil
		var ctrl = nil
		var kind = nil
	Dictionary:keysValuesArrayDo	0xb9c4da0
		arg this = Dictionary[ (modulator2_curve1 -> ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'buffer': Buffer(15, 512, 1, 44100, /tmp/807042072), 
  'get_buffer': a Function, 'get_menu_items_names': a Function, 'main_controller': a Function, 'save_data': a Function, 'model': ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 ), 
  'set_curve': a Function, 'new': a Function, 'get_curvebank': a Function, 'load_data': a Functio...etc...
		arg argArray = [ modulator2_curve1, ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'buffer': Buffer(15, 512, 1, 44100, /tmp/807042072), 
  'get_buffer': a Function, 'get_menu_items_names': a Function, 'main_controller': a Function, 'save_data': a Function, 'model': ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 ), 
  'set_curve': a Function, 'new': a Function, 'get_curvebank': a Function, 'load_data': a Function ), osc2_fad...etc...
		arg function = a Function
		var i = 508
		var j = 92
		var key = nil
		var val = nil
		var arraySize = nil
	Dictionary:keysValuesDo	0xb9bdae0
		arg this = Dictionary[ (modulator2_curve1 -> ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'buffer': Buffer(15, 512, 1, 44100, /tmp/807042072), 
  'get_buffer': a Function, 'get_menu_items_names': a Function, 'main_controller': a Function, 'save_data': a Function, 'model': ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 ), 
  'set_curve': a Function, 'new': a Function, 'get_curvebank': a Function, 'load_data': a Functio...etc...
		arg function = a Function
	a FunctionDef	0x12bd5650
		sourceCode = "{ arg self;
		var args = ();
		var synthdef;

		args[\\routing] = ();
		args[\\kinds] = ();
		args[\\enabled] = ();
		args[\\steps] = Array.newClear(4);

		self.data.keysValuesDo { arg key, val;
			var uname, ctrl;
			var kind;
			//val.model.uname.debug(\"build_synthdef: uname\");
			switch(val.model.transmit,
				\\bus, {
					args[val.model.uname] = val.get_bus.asMap;
					//args[val.model.uname] = val.get_bus;
				},
				\\curve, {
					//val.debug(\"class_passive_controller: build_synth...etc..."
		arg self = ( 'fx_feedback_bus': Bus(control, 539, 1, localhost), 'synthdef_ns_args': [ ( 'filter2': true, 'fx1': true, 'fx2': true, 'bypass': true, 
  'filter1': true, 'osc2': true, 'eq': true, 'osc1': true, 'master': true, 
  'insert2': true, 'noise': true, 'modosc': true, 'insert1': true, 'osc3': true, 
  'feedback': true, 'master_pan': true ), ( 'fx1': reverb, 'osc3_wt': 0, 'fx2': reverb, 'filter1': lpf, 
  'modulator2': lfo, 'modulator4': lfo, 'osc2_wt': 0, 'insert2': freqshift, 'noise': white, 
  'insert1': freqs...etc...
		var args = ( 'modulator2_curve1': 15, 'osc2_fader': c306, 'osc3_wt': 14, 'modulator4_glidefade': c382, 
  'env4_attack_time': c21, 'fx1_arg2': c506, 'env4_decay_time': c290, 'insert1_arg2': c229, 'fx2_arg4': c427, 
  'modulator2_curve2': 16, 'osc2_amp': c28, 'modosc_pitch': c414, 'enabled': ( 'osc1': true, 'master': true, 'noise': true, 'modosc': true, 
  'insert1': true, 'osc3': true, 'feedback': true ), 'env2_vel': c193, 
  'bypass_mod': c226, 'env4_attack_level': c152, 'env1_sustain_time': c532, 'fx2_arg1': c402, '...etc...
		var synthdef = nil
	a FunctionDef	0x1f130d70
		sourceCode = "{ arg self, uname;
		// TODO
		uname.debug(\"class_passive_controller: update_arg\");
		self.build_synthdef;
		self.rebuild_synthdef = true;
	
	}"
		arg self = ( 'fx_feedback_bus': Bus(control, 539, 1, localhost), 'synthdef_ns_args': [ ( 'filter2': true, 'fx1': true, 'fx2': true, 'bypass': true, 
  'filter1': true, 'osc2': true, 'eq': true, 'osc1': true, 'master': true, 
  'insert2': true, 'noise': true, 'modosc': true, 'insert1': true, 'osc3': true, 
  'feedback': true, 'master_pan': true ), ( 'fx1': reverb, 'osc3_wt': 0, 'fx2': reverb, 'filter1': lpf, 
  'modulator2': lfo, 'modulator4': lfo, 'osc2_wt': 0, 'insert2': freqshift, 'noise': white, 
  'insert1': freqs...etc...
		arg uname = osc1_wt
	a FunctionDef	0xeac5830
		sourceCode = "{ arg self, curve_idx, load=false;
		var curve = self.menu_items[curve_idx];
		var apply_action, cancel_action;
		var was_custom = false;
		var osc_pos_ctrl;
		if(curve == \\custom) {
			apply_action = { arg pathlist;
				self.model.pathlist = pathlist;
				pathlist.debug(\"class_pparam_wavetable_controller: set_curve: custom: pathlist\");
				self.buffer_array.do(_.free);
				self.buffer_array = Buffer.allocConsecutive(pathlist.size, s, 2048);
				self.buffer_array.do { arg buf, idx;
					s...etc..."
		arg self = ( 'refresh': a Function, 'buffer': Buffer(13, 1024, 1, 44100, /tmp/1829737869), 'model': ( 'uname': osc1_wt, 'buffer_range': -1, 'transmit': wavetable, 'name': Wt, 
  'val': 3, 'kind': wavetable, 'val_uname': custom, 'indexes': 1 ), 'set_property': a Function, 
  'save_data': a Function, 'new': a Function, 'get_menu_items_names': a Function, 'load_data': a Function, 'buffer_array': [  ], 
  'set_curve': a Function, 'get_buffer': a Function, 'curvebank': ( 'triangle1': a Function, 'square1': a Function, 'lin...etc...
		arg curve_idx = 3
		arg load = true
		var curve = custom
		var apply_action = a Function
		var cancel_action = a Function
		var was_custom = false
		var osc_pos_ctrl = ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'get_bus': a Function, 
  'main_controller': a Function, 'save_data': a Function, 'model': ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, -1.001, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos ), 'bus': Bus(control, 209, 1, localhost), 'new': a Function, 
  'update_val': a Function, 'get_norm_val': a Function, 'set_val': a Function, 'load_data': a Function )
	a FunctionDef	0xa5881e30
		sourceCode = "<an open Function>"
		arg key = osc1_wt
	a FunctionDef	0xb9b12a0
		sourceCode = "<an open Function>"
		arg item = osc1_wt
	ArrayedCollection:do	0xb943fe0
		arg this = [ modulator2_curve1, nil, nil, modulator3_env_attack, nil, nil, modulator3_ampmod, modulator1_kind, modulator3_steps2, osc1_wt_pos, nil, nil, osc2_amp, modosc_pitch, modulator2_glidefade, eq, env1_sustain_time, nil, nil, nil, nil, macro8_control, osc1_intensity, nil, nil, nil, nil, nil, nil, osc2_intensity, nil, fx1_kind, env2_sustain_time, routing_feedback, modulator2_steps2, modulator2_perfcurve2, macro5_control, nil, pan, nil, nil, nil, nil, nil, nil, nil, modulator2_steps_amp, amp_mod, nil, modulator1_r...etc...
		arg function = a Function
		var i = 381
	Set:do	0xb9b1060
		arg this = Set[ modulator2_curve1, modulator3_env_attack, modulator3_ampmod, modulator1_kind, modulator3_steps2, osc1_wt_pos, osc2_amp, modosc_pitch, modulator2_glidefade, eq, env1_sustain_time, macro8_control, osc1_intensity, osc2_intensity, fx1_kind, env2_sustain_time, routing_feedback, modulator2_steps2, modulator2_perfcurve2, macro5_control, pan, modulator2_steps_amp, amp_mod, modulator1_rate, master, insert2, filter2_arg2, macro6_control, modulator3_amp, modulator4_kind, insert1_arg1, modosc_filterfm, osc2_wt_pos...etc...
		arg function = a Function
		var i = 190
	a FunctionDef	0x12890d10
		sourceCode = "{ arg self, name, val, update=true;
		var final_val, mod;
		[name, val].debug(\"class_presets_global_controller\");
		switch(name,
			\\value, { 
				self.model.val = val;
				self.model.val_uname = self.menu_items[val];
				self.load_preset_by_uname(self.model.val_uname);
			}
		);
		if(update) {
			self.changed(\\set_property, name, val);
		}
	}"
		arg self = ( 'load_preset_by_uname': a Function, 'main_controller': a Function, 'preset_dict': Dictionary[ (plop -> ( 'uname': plop, 'name': plop, 'data': Dictionary[ (modulator2_curve1 -> ( 'name': Curve1, 'uname': modulator2_curve1, 'indexes': [ 1, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 )), (osc2_fader -> ( 'norm_val': 0.5, 'name': Filter output, 'transmit': bus, 'val': 0.5, 
  'spec': a ControlSpec(0, 1, 'linear', 0, 0.5, ""), 'kind': knob, 'numslot': 0, 'uname': osc2_fader )), (modulator4_glidefad...etc...
		arg name = value
		arg val = 1
		arg update = false
		var final_val = nil
		var mod = nil
	JSCView:doAction	0xbf68920
		arg this = a JSCPopUpMenu
	a FunctionDef	0xb44a860
		sourceCode = "<an open Function>"
	a FunctionDef	0xbba1aa0
		sourceCode = "<an open Function>"
	Function:prTry	0xb44c7a0
		arg this = a Function
		var result = nil
		var thread = a Thread
		var next = nil
		var wasInProtectedFunc = false
	
CALL STACK:
	DoesNotUnderstandError:reportError   0x1361b290
		arg this = <instance of DoesNotUnderstandError>
	< closed FunctionDef >   0x136dacf0
		arg error = <instance of DoesNotUnderstandError>
	Integer:forBy   0x17e5a530
		arg this = 0
		arg endval = 0
		arg stepval = 2
		arg function = <instance of Function>
		var i = 0
		var j = 0
	SequenceableCollection:pairsDo   0x1a41dad0
		arg this = [*2]
		arg function = <instance of Function>
	Scheduler:seconds_   0x1a41ca90
		arg this = <instance of Scheduler>
		arg newSeconds = 1353040045.1285
	Meta_AppClock:tick   0x1a41e130
		arg this = <instance of Meta_AppClock>
		var saveClock = <instance of Meta_SystemClock>
	Process:tick   0x1a41ea70
		arg this = <instance of Main>
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#bufnum]
done
done
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done

loading synth.sc
loading ui.sc
loading control.sc
buf, client: [ [ Buffer(0, 1024, 1, 44100, nil), passive ], osc2_wt ]
to free: Buffer(0, 1024, 1, 44100, nil)
buf, client: [ [ Buffer(18, 2048, 1, 44100, nil), passive ], modulator2_perfcurve2 ]
to free: Buffer(18, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(11, 2048, 1, 44100, nil), passive ], modulator4_perfcurve1 ]
to free: Buffer(11, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(15, 512, 1, 44100, nil), passive ], modulator2_curve1 ]
to free: Buffer(15, 512, 1, 44100, nil)
buf, client: [ [ Buffer(8, 2048, 1, 44100, nil), passive ], modulator1_perfcurve2 ]
to free: Buffer(8, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(10, 512, 1, 44100, nil), passive ], modulator4_curve2 ]
to free: Buffer(10, 512, 1, 44100, nil)
buf, client: [ [ Buffer(3, 2048, 1, 44100, nil), passive ], modulator3_perfcurve1 ]
to free: Buffer(3, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(9, 512, 1, 44100, /tmp/281307598), passive ], modulator4_curve1 ]
to free: Buffer(9, 512, 1, 44100, /tmp/281307598)
buf, client: [ [ Buffer(13, 1024, 1, 44100, /tmp/1829737869), passive ], osc1_wt ]
to free: Buffer(13, 1024, 1, 44100, /tmp/1829737869)
buf, client: [ [ Buffer(12, 2048, 1, 44100, nil), passive ], modulator4_perfcurve2 ]
to free: Buffer(12, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(2, 512, 1, 44100, nil), passive ], modulator3_curve2 ]
to free: Buffer(2, 512, 1, 44100, nil)
buf, client: [ [ Buffer(7, 2048, 1, 44100, nil), passive ], modulator1_perfcurve1 ]
to free: Buffer(7, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(16, 512, 1, 44100, nil), passive ], modulator2_curve2 ]
to free: Buffer(16, 512, 1, 44100, nil)
buf, client: [ [ Buffer(5, 512, 1, 44100, nil), passive ], modulator1_curve1 ]
to free: Buffer(5, 512, 1, 44100, nil)
buf, client: [ [ Buffer(17, 2048, 1, 44100, nil), passive ], modulator2_perfcurve1 ]
to free: Buffer(17, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(1, 512, 1, 44100, nil), passive ], modulator3_curve1 ]
to free: Buffer(1, 512, 1, 44100, nil)
buf, client: [ [ Buffer(14, 1024, 1, 44100, nil), passive ], osc3_wt ]
to free: Buffer(14, 1024, 1, 44100, nil)
buf, client: [ [ Buffer(4, 2048, 1, 44100, nil), passive ], modulator3_perfcurve2 ]
to free: Buffer(4, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(6, 512, 1, 44100, nil), passive ], modulator1_curve2 ]
to free: Buffer(6, 512, 1, 44100, nil)
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
class_pparam_kind_controller: ( 'bank': noise, 'uname': noise_kind, 'kind': kind, 'name': Noise )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': white, 'specs': [ freq ], 'name': White noise, 'args': [ Cutoff ] ), ( 'uname': pink, 'specs': [ freq ], 'name': Pink noise, 'args': [ Cutoff ] ), ( 'uname': brown, 'specs': [ freq ], 'name': Brown noise, 'args': [ Cutoff ] ) ]
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert2_arg1, insert2_arg2 ], 'name': insert kind, 'uname': insert2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator3_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx2_arg1, fx2_arg2, fx2_arg3, fx2_arg4 ], 'name': fx kind, 'uname': fx2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
class_pparam_kind_controller: ( 'name': Mod routing matrix, 'uname': modosc_matrix, 'kind': matrix )
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator1_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val : modulator1_amp
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
class_pparam_kind_controller: ( 'name': Global presets, 'uname': presets_global, 'kind': preset )
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx1_arg1, fx1_arg2, fx1_arg3, fx1_arg4 ], 'name': fx kind, 'uname': fx1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator4_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert1_arg1, insert1_arg2 ], 'name': insert kind, 'uname': insert1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter2_arg1, filter2_arg2, filter2_arg3 ], 'name': filter kind, 'uname': filter2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
modulation_manager.set_external_value: [ [ macro, 0 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 2 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 4 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 7 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator2_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
class_pparam_kind_controller: ( 'name': Ins1, 'uname': routing_insert1, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert1, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Ins2, 'uname': routing_insert2, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert2, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Feedback, 'uname': routing_feedback, 'bank': routing_feedback, 'kind': kind, 
  'routing_name': feedback, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': After pan, 'uname': after_pan ) ]
class_pparam_kind_controller: ( 'name': Bypass source, 'uname': routing_bypass_osc, 'bank': routing_bypass_osc, 'kind': kind, 
  'routing_name': bypass_osc, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': No bypass, 'uname': off ), ( 'name': Osc 1, 'uname': osc1 ), ( 'name': Osc 2, 'uname': osc2 ), ( 'name': Osc 3, 'uname': osc3 ) ]
class_pparam_kind_controller: ( 'name': Bypass destination, 'uname': routing_bypass_dest, 'bank': routing_bypass_dest, 'kind': kind, 
  'routing_name': bypass_dest, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before Fx 1, 'uname': before_fx1 ), ( 'name': Before Fx 2, 'uname': before_fx2 ), ( 'name': Before Eq, 'uname': before_eq ) ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter1_arg1, filter1_arg2, filter1_arg3 ], 'name': filter kind, 'uname': filter1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
hehehe1
hehehe1.1
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc1_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_pitch, 2 ]
pknob: set_controller: osc1_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc1_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_wt_pos, 3 ]
pknob: set_controller: osc1_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_intensity, 3 ]
pknob: set_controller: osc1_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_amp, 2 ]
pknob: set_controller: osc1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc2_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_pitch, 2 ]
pknob: set_controller: osc2_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc2_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_wt_pos, 3 ]
pknob: set_controller: osc2_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_intensity, 3 ]
pknob: set_controller: osc2_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_amp, 2 ]
pknob: set_controller: osc2_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc3_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_pitch, 2 ]
pknob: set_controller: osc3_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc3_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_wt_pos, 3 ]
pknob: set_controller: osc3_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_intensity, 3 ]
pknob: set_controller: osc3_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_amp, 2 ]
pknob: set_controller: osc3_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
SQUOIIII ce bordel0: a JSCHLayoutView
SQUOIIII ce bordel1: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_pitch, 2 ]
pknob: set_controller: modosc_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel2: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_ring, 2 ]
pknob: set_controller: modosc_ring
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel3: a JSCHLayoutView
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
SQUOIIII ce bordel
SQUOIIII ce bordel4: a JSCHLayoutView
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
hehehe1.3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ White noise, Pink noise, Brown noise ]
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: noise_color
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_color, 2 ]
pknob: set_controller: noise_color
REFRESH++
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: noise_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_amp, 2 ]
pknob: set_controller: noise_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.4
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: feedback_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ feedback_amp, 2 ]
pknob: set_controller: feedback_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe2
hehehe2.1
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_parseq
REFRESH++
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe2.2
hehehe3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg1, 3 ]
pknob: set_controller: filter1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg2, 3 ]
pknob: set_controller: filter1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg3, 2 ]
pknob: set_controller: filter1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg1, 3 ]
pknob: set_controller: filter2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg2, 3 ]
pknob: set_controller: filter2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg3, 2 ]
pknob: set_controller: filter2_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe4
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_mix
REFRESH++
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.1 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ pan, 2 ]
pknob: set_controller: pan
REFRESH++
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5.1
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.1 ]
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 440 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
hehehe5.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ amp, 0 ]
pknob: set_controller: amp
REFRESH++
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.1 ]
hehehe6
class_masterfx_view: make_frame: 0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_masterfx_view: make_frame: 1
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_masterfx_view: make_frame: 5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg1, 2 ]
pknob: set_controller: fx1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg2, 2 ]
pknob: set_controller: fx1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg3, 2 ]
pknob: set_controller: fx1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg4, 2 ]
pknob: set_controller: fx1_arg4
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_center_frame_view.new: 0
class_center_frame_view.new: 1
class_center_frame_view.new: 2
class_center_frame_view.new: 3
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_vel
REFRESH++
REFRESH++
pknob set_property: [ label, Vel ]
pknob set_property: [ value, 0.5 ]
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_ktr
REFRESH++
REFRESH++
pknob set_property: [ label, KTR ]
pknob set_property: [ value, 0.5 ]
new class_dadsr_env_view: 0
class_dadsr_env_view: makectrl: get_val: [ delay_time, 0 ]
class_dadsr_env_view: makectrl: get_val: [ attack_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ attack_level, 1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_level, 0.8 ]
class_dadsr_env_view: makectrl: get_val: [ release_time, 0.1 ]
end new class_dadsr_env_view: 0
class_env_edit_view: making env knob: [ delay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Delay, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0.0001, 1, 'exp', 0, 0.3, " secs"), 'kind': knob, 'numslot': 1, 'uname': env1_delay_time )), (bus -> Bus(control, 539, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_delay_time, 1 ]
pknob: set_controller: env1_delay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
pknob set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
pknob set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ attack_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Attack Time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_time )), (bus -> Bus(control, 540, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_time, 1 ]
pknob: set_controller: env1_attack_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
pknob set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ attack_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Attack level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_level )), (bus -> Bus(control, 541, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_level, 1 ]
pknob: set_controller: env1_attack_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
pknob set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ decay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Decay time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_time )), (bus -> Bus(control, 542, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_time, 1 ]
pknob: set_controller: env1_decay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
pknob set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ decay_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.89442719099992, 'name': Decay level, 'transmit': bus, 'val': 0.8, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_level )), (bus -> Bus(control, 543, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_level, 1 ]
pknob: set_controller: env1_decay_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
pknob set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Sustain loop, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_time )), (bus -> Bus(control, 544, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_time, 1 ]
pknob: set_controller: env1_sustain_time
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain loop ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Sustain level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_level )), (bus -> Bus(control, 545, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_level, 1 ]
pknob: set_controller: env1_sustain_level
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain level ]
pknob set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ release_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Release, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_release_time )), (bus -> Bus(control, 546, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_release_time, 1 ]
pknob: set_controller: env1_release_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_center_frame_view.new: fin
hehehe7
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg1, 2 ]
pknob: set_controller: insert1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg2, 2 ]
pknob: set_controller: insert1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg1, 2 ]
pknob: set_controller: insert2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg2, 2 ]
pknob: set_controller: insert2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
MACRO
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
hehehe8
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), 
  ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c290', 'modulator4_env_attack': 'c506', 'modulator4_glidefade': 'c502', 
  'modulator3_glidefade': 'c398', 'modulator3_ampmod': 'c306', 'fx1_arg2': 'c518', 'env4_decay_time': 'c313', 'insert1_arg2': 'c229', 
  'fx2_arg4': 'c415', 'modulator4_ampmod': 'c501', 'osc2_amp': 'c482', 'osc1_wt_pos': 'c209', 'env2_attack_time': 'c245', 
  'env2_vel': 'c32', 'modulator2_glidefade': 'c530', 'env3_release_time': 'c516', 'fx2_arg1': 'c477', 'macro8_control': 'c205', 
  'osc1_intensity': 'c210', 'env3_attack_level': 'c493', 'filter2_arg3': 'c232', 'filter1_arg1': 'c547', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c216', 'env1_delay_time': 'c539', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c515', 
  'pan': 'c193', 'env4_release_time': 'c256', 'osc2_pitch': 'c261', 'modulator2_env_attack': 'c534', 'noise_fader': 'c104', 
  'env4_sustain_level': 'c278', 'env1_ktr': 'c538', 'filter1_arg3': 'c549', 'macro4_control': 'c201', 'env3_decay_level': 'c513', 
  'noise_amp': 'c470', 'env2_release_time': 'c338', 'macro6_control': 'c203', 'modosc_ring': 'c454', 'osc3_intensity': 'c524', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c417', 'env4_decay_level': 'c250', 'env4_vel': 'c393', 'osc3_amp': 'c525', 
  'filter_parseq': 'c206', 'feedback_fader': 'c444', 'modulator2_rate': 'c527', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c550', 'modulator2_env_decay': 'c535', 'env1_release_time': 'c546', 'fx1_arg1': 'c517', 
  'osc3_wt_pos': 'c523', 'env2_delay_time': 'c152', 'modulator3_curve1': 1, 'env1_attack_level': 'c541', 'osc1_fader': 'c212', 
  'fx2_arg2': 'c478', 'modulator2_amp': 'c528', 'filter2_amp': 'c233', 'osc3_wt': 14, 'env4_attack_time': 'c422', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c542', 'modulator2_curve2': 16, 'env2_ktr': 'c458', 
  'modosc_pitch': 'c453', 'bypass_mod': 'c226', 'env4_attack_level': 'c450', 'env1_sustain_time': 'c544', 'filter2_arg1': 'c230', 
  'insert2_arg2': 'c294', 'macro1_control': 'c234', 'env2_decay_level': 'c410', 'env2_sustain_time': 'c265', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c537', 'feedback_amp': 'c443', 'macro5_control': 'c202', 'eq_lowshelf': 'c418', 
  'amp_mod': 'c28', 'modulator1_rate': 'c403', 'env2_decay_time': 'c434', 'modulator4_curve2': 10, 'filter2_arg2': 'c231', 
  'env3_sustain_time': 'c514', 'noise_color': 'c326', 'modosc_position': 'c427', 'env1_attack_time': 'c540', 'env1_sustain_level': 'c545', 
  'eq_highshelf': 'c402', 'modulator3_amp': 'c362', 'modulator1_ampmod': 'c382', 'osc1_amp': 'c211', 'modulator2_ampmod': 'c529', 
  'insert1_arg1': 'c228', 'osc2_wt_pos': 'c378', 'macro3_control': 'c236', 'eq_freq': 'c283', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c350', 'env4_ktr': 'c386', 'env2_attack_level': 'c274', 'env1_decay_level': 'c543', 
  'env4_sustain_time': 'c374', 'env3_decay_time': 'c494', 'env4_delay_time': 'c198', 'modulator1_amp': 'c381', 'fx2_arg3': 'c414', 
  'modosc_phase': 'c426', 'osc3_pitch': 'c522', 'modulator3_curve2': 2, 'filter1_arg2': 'c548', 'amp': 'c536', 
  'modulator4_env_decay': 'c225', 'bypass_amp': 'c227', 'macro7_control': 'c204', 'modulator3_rate': 'c269', 'filter_mix': 'c207', 
  'osc2_wt': 0, 'env2_sustain_level': 'c154', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c486', 
  'eq_boost': 'c282', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c526', 'macro2_control': 'c235', 'osc1_wt': 13, 
  'osc1_pitch': 'c208' )
********************************************************************done
********************************************************************done
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
soul2
done
done
done
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
soul2
-----------controller.get_menu_items_names: [ no_preset, aaaa, azaz, olo, plop ]
class_popup_view: set_property: [ value, 0 ]
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, /tmp/1773642638)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, /tmp/1018001308)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, /tmp/-1483356589)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, /tmp/-903383472)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, /tmp/2019123685)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 209, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c290', 'modulator4_env_attack': 'c506', 'modulator4_glidefade': 'c502', 
  'modulator3_glidefade': 'c398', 'modulator3_ampmod': 'c306', 'fx1_arg2': 'c518', 'env4_decay_time': 'c313', 'insert1_arg2': 'c229', 
  'fx2_arg4': 'c415', 'modulator4_ampmod': 'c501', 'osc2_amp': 'c482', 'osc1_wt_pos': 'c209', 'env2_attack_time': 'c245', 
  'env2_vel': 'c32', 'modulator2_glidefade': 'c530', 'env3_release_time': 'c516', 'fx2_arg1': 'c477', 'macro8_control': 'c205', 
  'osc1_intensity': 'c210', 'env3_attack_level': 'c493', 'filter2_arg3': 'c232', 'filter1_arg1': 'c547', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c216', 'env1_delay_time': 'c539', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c515', 
  'pan': 'c193', 'env4_release_time': 'c256', 'osc2_pitch': 'c261', 'modulator2_env_attack': 'c534', 'noise_fader': 'c104', 
  'env4_sustain_level': 'c278', 'env1_ktr': 'c538', 'filter1_arg3': 'c549', 'macro4_control': 'c201', 'env3_decay_level': 'c513', 
  'noise_amp': 'c470', 'env2_release_time': 'c338', 'macro6_control': 'c203', 'modosc_ring': 'c454', 'osc3_intensity': 'c524', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c417', 'env4_decay_level': 'c250', 'env4_vel': 'c393', 'osc3_amp': 'c525', 
  'filter_parseq': 'c206', 'feedback_fader': 'c444', 'modulator2_rate': 'c527', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c550', 'modulator2_env_decay': 'c535', 'env1_release_time': 'c546', 'fx1_arg1': 'c517', 
  'osc3_wt_pos': 'c523', 'env2_delay_time': 'c152', 'modulator3_curve1': 1, 'env1_attack_level': 'c541', 'osc1_fader': 'c212', 
  'fx2_arg2': 'c478', 'modulator2_amp': 'c528', 'filter2_amp': 'c233', 'osc3_wt': 14, 'env4_attack_time': 'c422', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c542', 'modulator2_curve2': 16, 'env2_ktr': 'c458', 
  'modosc_pitch': 'c453', 'bypass_mod': 'c226', 'env4_attack_level': 'c450', 'env1_sustain_time': 'c544', 'filter2_arg1': 'c230', 
  'insert2_arg2': 'c294', 'macro1_control': 'c234', 'env2_decay_level': 'c410', 'env2_sustain_time': 'c265', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c537', 'feedback_amp': 'c443', 'macro5_control': 'c202', 'eq_lowshelf': 'c418', 
  'amp_mod': 'c28', 'modulator1_rate': 'c403', 'env2_decay_time': 'c434', 'modulator4_curve2': 10, 'filter2_arg2': 'c231', 
  'env3_sustain_time': 'c514', 'noise_color': 'c326', 'modosc_position': 'c427', 'env1_attack_time': 'c540', 'env1_sustain_level': 'c545', 
  'eq_highshelf': 'c402', 'modulator3_amp': 'c362', 'modulator1_ampmod': 'c382', 'osc1_amp': 'c211', 'modulator2_ampmod': 'c529', 
  'insert1_arg1': 'c228', 'osc2_wt_pos': 'c378', 'macro3_control': 'c236', 'eq_freq': 'c283', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c350', 'env4_ktr': 'c386', 'env2_attack_level': 'c274', 'env1_decay_level': 'c543', 
  'env4_sustain_time': 'c374', 'env3_decay_time': 'c494', 'env4_delay_time': 'c198', 'modulator1_amp': 'c381', 'fx2_arg3': 'c414', 
  'modosc_phase': 'c426', 'osc3_pitch': 'c522', 'modulator3_curve2': 2, 'filter1_arg2': 'c548', 'amp': 'c536', 
  'modulator4_env_decay': 'c225', 'bypass_amp': 'c227', 'macro7_control': 'c204', 'modulator3_rate': 'c269', 'filter_mix': 'c207', 
  'osc2_wt': 0, 'env2_sustain_level': 'c154', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c486', 
  'eq_boost': 'c282', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c526', 'macro2_control': 'c235', 'osc1_wt': 19, 
  'osc1_pitch': 'c208' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
































class_presets_global_controller: [ value, 0 ]
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/1464411930)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/1752975316)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1682896812)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/1752474124)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/120165405)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 209, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c290', 'modulator4_env_attack': 'c506', 'modulator4_glidefade': 'c502', 
  'modulator3_glidefade': 'c398', 'modulator3_ampmod': 'c306', 'fx1_arg2': 'c518', 'env4_decay_time': 'c313', 'insert1_arg2': 'c229', 
  'fx2_arg4': 'c415', 'modulator4_ampmod': 'c501', 'osc2_amp': 'c482', 'osc1_wt_pos': 'c209', 'env2_attack_time': 'c245', 
  'env2_vel': 'c32', 'modulator2_glidefade': 'c530', 'env3_release_time': 'c516', 'fx2_arg1': 'c477', 'macro8_control': 'c205', 
  'osc1_intensity': 'c210', 'env3_attack_level': 'c493', 'filter2_arg3': 'c232', 'filter1_arg1': 'c547', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c216', 'env1_delay_time': 'c539', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c515', 
  'pan': 'c193', 'env4_release_time': 'c256', 'osc2_pitch': 'c261', 'modulator2_env_attack': 'c534', 'noise_fader': 'c104', 
  'env4_sustain_level': 'c278', 'env1_ktr': 'c538', 'filter1_arg3': 'c549', 'macro4_control': 'c201', 'env3_decay_level': 'c513', 
  'noise_amp': 'c470', 'env2_release_time': 'c338', 'macro6_control': 'c203', 'modosc_ring': 'c454', 'osc3_intensity': 'c524', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c417', 'env4_decay_level': 'c250', 'env4_vel': 'c393', 'osc3_amp': 'c525', 
  'filter_parseq': 'c206', 'feedback_fader': 'c444', 'modulator2_rate': 'c527', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c550', 'modulator2_env_decay': 'c535', 'env1_release_time': 'c546', 'fx1_arg1': 'c517', 
  'osc3_wt_pos': 'c523', 'env2_delay_time': 'c152', 'modulator3_curve1': 1, 'env1_attack_level': 'c541', 'osc1_fader': 'c212', 
  'fx2_arg2': 'c478', 'modulator2_amp': 'c528', 'filter2_amp': 'c233', 'osc3_wt': 14, 'env4_attack_time': 'c422', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c542', 'modulator2_curve2': 16, 'env2_ktr': 'c458', 
  'modosc_pitch': 'c453', 'bypass_mod': 'c226', 'env4_attack_level': 'c450', 'env1_sustain_time': 'c544', 'filter2_arg1': 'c230', 
  'insert2_arg2': 'c294', 'macro1_control': 'c234', 'env2_decay_level': 'c410', 'env2_sustain_time': 'c265', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c537', 'feedback_amp': 'c443', 'macro5_control': 'c202', 'eq_lowshelf': 'c418', 
  'amp_mod': 'c28', 'modulator1_rate': 'c403', 'env2_decay_time': 'c434', 'modulator4_curve2': 10, 'filter2_arg2': 'c231', 
  'env3_sustain_time': 'c514', 'noise_color': 'c326', 'modosc_position': 'c427', 'env1_attack_time': 'c540', 'env1_sustain_level': 'c545', 
  'eq_highshelf': 'c402', 'modulator3_amp': 'c362', 'modulator1_ampmod': 'c382', 'osc1_amp': 'c211', 'modulator2_ampmod': 'c529', 
  'insert1_arg1': 'c228', 'osc2_wt_pos': 'c378', 'macro3_control': 'c236', 'eq_freq': 'c283', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c350', 'env4_ktr': 'c386', 'env2_attack_level': 'c274', 'env1_decay_level': 'c543', 
  'env4_sustain_time': 'c374', 'env3_decay_time': 'c494', 'env4_delay_time': 'c198', 'modulator1_amp': 'c381', 'fx2_arg3': 'c414', 
  'modosc_phase': 'c426', 'osc3_pitch': 'c522', 'modulator3_curve2': 2, 'filter1_arg2': 'c548', 'amp': 'c536', 
  'modulator4_env_decay': 'c225', 'bypass_amp': 'c227', 'macro7_control': 'c204', 'modulator3_rate': 'c269', 'filter_mix': 'c207', 
  'osc2_wt': 0, 'env2_sustain_level': 'c154', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c486', 
  'eq_boost': 'c282', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c526', 'macro2_control': 'c235', 'osc1_wt': 19, 
  'osc1_pitch': 'c208' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
  
loading synth.sc
loading ui.sc
loading control.sc
buf, client: [ [ Buffer(21, 2048, 1, 44100, /tmp/-319501377), passive ], osc1_wt ]
to free: Buffer(21, 2048, 1, 44100, /tmp/-319501377)
buf, client: [ [ Buffer(1, 512, 1, 44100, /tmp/-472348438), passive ], modulator3_curve1 ]
to free: Buffer(1, 512, 1, 44100, /tmp/-472348438)
buf, client: [ [ Buffer(0, 1024, 1, 44100, nil), passive ], osc2_wt ]
to free: Buffer(0, 1024, 1, 44100, nil)
buf, client: [ [ Buffer(19, 2048, 1, 44100, /tmp/-1865382882), passive ], osc1_wt ]
to free: Buffer(19, 2048, 1, 44100, /tmp/-1865382882)
buf, client: [ [ Buffer(17, 2048, 1, 44100, nil), passive ], modulator2_perfcurve1 ]
to free: Buffer(17, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(7, 2048, 1, 44100, /tmp/-101796350), passive ], modulator1_perfcurve1 ]
to free: Buffer(7, 2048, 1, 44100, /tmp/-101796350)
buf, client: [ [ Buffer(12, 2048, 1, 44100, nil), passive ], modulator4_perfcurve2 ]
to free: Buffer(12, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(5, 512, 1, 44100, /tmp/-524906202), passive ], modulator1_curve1 ]
to free: Buffer(5, 512, 1, 44100, /tmp/-524906202)
buf, client: [ [ Buffer(2, 512, 1, 44100, nil), passive ], modulator3_curve2 ]
to free: Buffer(2, 512, 1, 44100, nil)
buf, client: [ [ Buffer(10, 512, 1, 44100, /tmp/-628125878), passive ], modulator4_curve2 ]
to free: Buffer(10, 512, 1, 44100, /tmp/-628125878)
buf, client: [ [ Buffer(13, 1024, 1, 44100, /tmp/-1212099524), passive ], osc1_wt ]
to free: Buffer(13, 1024, 1, 44100, /tmp/-1212099524)
buf, client: [ [ Buffer(6, 512, 1, 44100, nil), passive ], modulator1_curve2 ]
to free: Buffer(6, 512, 1, 44100, nil)
buf, client: [ [ Buffer(14, 1024, 1, 44100, nil), passive ], osc3_wt ]
to free: Buffer(14, 1024, 1, 44100, nil)
buf, client: [ [ Buffer(9, 512, 1, 44100, /tmp/1092724253), passive ], modulator4_curve1 ]
to free: Buffer(9, 512, 1, 44100, /tmp/1092724253)
buf, client: [ [ Buffer(15, 512, 1, 44100, nil), passive ], modulator2_curve1 ]
to free: Buffer(15, 512, 1, 44100, nil)
buf, client: [ [ Buffer(11, 2048, 1, 44100, nil), passive ], modulator4_perfcurve1 ]
to free: Buffer(11, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(19, 2048, 1, 44100, /tmp/990788600), passive ], osc1_wt ]
to free: Buffer(19, 2048, 1, 44100, /tmp/990788600)
buf, client: [ [ Buffer(20, 2048, 1, 44100, /tmp/174289848), passive ], osc1_wt ]
to free: Buffer(20, 2048, 1, 44100, /tmp/174289848)
buf, client: [ [ Buffer(16, 512, 1, 44100, nil), passive ], modulator2_curve2 ]
to free: Buffer(16, 512, 1, 44100, nil)
buf, client: [ [ Buffer(3, 2048, 1, 44100, nil), passive ], modulator3_perfcurve1 ]
to free: Buffer(3, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(20, 2048, 1, 44100, /tmp/-878228007), passive ], osc1_wt ]
to free: Buffer(20, 2048, 1, 44100, /tmp/-878228007)
buf, client: [ [ Buffer(4, 2048, 1, 44100, nil), passive ], modulator3_perfcurve2 ]
to free: Buffer(4, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(18, 2048, 1, 44100, nil), passive ], modulator2_perfcurve2 ]
to free: Buffer(18, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(8, 2048, 1, 44100, nil), passive ], modulator1_perfcurve2 ]
to free: Buffer(8, 2048, 1, 44100, nil)
buf, client: [ [ Buffer(21, 2048, 1, 44100, /tmp/681257245), passive ], osc1_wt ]
to free: Buffer(21, 2048, 1, 44100, /tmp/681257245)
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
class_pparam_kind_controller: ( 'bank': noise, 'uname': noise_kind, 'kind': kind, 'name': Noise )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': white, 'specs': [ freq ], 'name': White noise, 'args': [ Cutoff ] ), ( 'uname': pink, 'specs': [ freq ], 'name': Pink noise, 'args': [ Cutoff ] ), ( 'uname': brown, 'specs': [ freq ], 'name': Brown noise, 'args': [ Cutoff ] ) ]
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert2_arg1, insert2_arg2 ], 'name': insert kind, 'uname': insert2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator3_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx2_arg1, fx2_arg2, fx2_arg3, fx2_arg4 ], 'name': fx kind, 'uname': fx2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
class_pparam_kind_controller: ( 'name': Mod routing matrix, 'uname': modosc_matrix, 'kind': matrix )
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator1_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
class_pparam_kind_controller: ( 'name': Global presets, 'uname': presets_global, 'kind': preset )
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx1_arg1, fx1_arg2, fx1_arg3, fx1_arg4 ], 'name': fx kind, 'uname': fx1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator4_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert1_arg1, insert1_arg2 ], 'name': insert kind, 'uname': insert1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter2_arg1, filter2_arg2, filter2_arg3 ], 'name': filter kind, 'uname': filter2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
modulation_manager.set_external_value: [ [ macro, 0 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 2 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 4 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 7 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator2_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
class_pparam_kind_controller: ( 'name': Ins1, 'uname': routing_insert1, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert1, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Ins2, 'uname': routing_insert2, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert2, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Feedback, 'uname': routing_feedback, 'bank': routing_feedback, 'kind': kind, 
  'routing_name': feedback, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': After pan, 'uname': after_pan ) ]
class_pparam_kind_controller: ( 'name': Bypass source, 'uname': routing_bypass_osc, 'bank': routing_bypass_osc, 'kind': kind, 
  'routing_name': bypass_osc, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': No bypass, 'uname': off ), ( 'name': Osc 1, 'uname': osc1 ), ( 'name': Osc 2, 'uname': osc2 ), ( 'name': Osc 3, 'uname': osc3 ) ]
class_pparam_kind_controller: ( 'name': Bypass destination, 'uname': routing_bypass_dest, 'bank': routing_bypass_dest, 'kind': kind, 
  'routing_name': bypass_dest, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before Fx 1, 'uname': before_fx1 ), ( 'name': Before Fx 2, 'uname': before_fx2 ), ( 'name': Before Eq, 'uname': before_eq ) ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter1_arg1, filter1_arg2, filter1_arg3 ], 'name': filter kind, 'uname': filter1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
hehehe1
hehehe1.1
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc1_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_pitch, 2 ]
pknob: set_controller: osc1_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc1_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_wt_pos, 3 ]
pknob: set_controller: osc1_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_intensity, 3 ]
pknob: set_controller: osc1_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_amp, 2 ]
pknob: set_controller: osc1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc2_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_pitch, 2 ]
pknob: set_controller: osc2_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc2_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_wt_pos, 3 ]
pknob: set_controller: osc2_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_intensity, 3 ]
pknob: set_controller: osc2_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_amp, 2 ]
pknob: set_controller: osc2_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc3_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_pitch, 2 ]
pknob: set_controller: osc3_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc3_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_wt_pos, 3 ]
pknob: set_controller: osc3_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_intensity, 3 ]
pknob: set_controller: osc3_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_amp, 2 ]
pknob: set_controller: osc3_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
SQUOIIII ce bordel0: a JSCHLayoutView
SQUOIIII ce bordel1: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_pitch, 2 ]
pknob: set_controller: modosc_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel2: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_ring, 2 ]
pknob: set_controller: modosc_ring
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel3: a JSCHLayoutView
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
SQUOIIII ce bordel
SQUOIIII ce bordel4: a JSCHLayoutView
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
hehehe1.3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ White noise, Pink noise, Brown noise ]
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: noise_color
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_color, 2 ]
pknob: set_controller: noise_color
REFRESH++
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: noise_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_amp, 2 ]
pknob: set_controller: noise_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.4
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: feedback_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ feedback_amp, 2 ]
pknob: set_controller: feedback_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe2
hehehe2.1
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_parseq
REFRESH++
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe2.2
hehehe3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg1, 3 ]
pknob: set_controller: filter1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg2, 3 ]
pknob: set_controller: filter1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg3, 2 ]
pknob: set_controller: filter1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg1, 3 ]
pknob: set_controller: filter2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg2, 3 ]
pknob: set_controller: filter2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg3, 2 ]
pknob: set_controller: filter2_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe4
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_mix
REFRESH++
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.1 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ pan, 2 ]
pknob: set_controller: pan
REFRESH++
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5.1
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.1 ]
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 440 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
hehehe5.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ amp, 0 ]
pknob: set_controller: amp
REFRESH++
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.1 ]
hehehe6
class_masterfx_view: make_frame: 0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_masterfx_view: make_frame: 1
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_masterfx_view: make_frame: 5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg1, 2 ]
pknob: set_controller: fx1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg2, 2 ]
pknob: set_controller: fx1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg3, 2 ]
pknob: set_controller: fx1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg4, 2 ]
pknob: set_controller: fx1_arg4
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_center_frame_view.new: 0
class_center_frame_view.new: 1
class_center_frame_view.new: 2
class_center_frame_view.new: 3
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_vel
REFRESH++
REFRESH++
pknob set_property: [ label, Vel ]
pknob set_property: [ value, 0.5 ]
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_ktr
REFRESH++
REFRESH++
pknob set_property: [ label, KTR ]
pknob set_property: [ value, 0.5 ]
new class_dadsr_env_view: 0
class_dadsr_env_view: makectrl: get_val: [ delay_time, 0 ]
class_dadsr_env_view: makectrl: get_val: [ attack_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ attack_level, 1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_level, 0.8 ]
class_dadsr_env_view: makectrl: get_val: [ release_time, 0.1 ]
end new class_dadsr_env_view: 0
class_env_edit_view: making env knob: [ delay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Delay, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0.0001, 1, 'exp', 0, 0.3, " secs"), 'kind': knob, 'numslot': 1, 'uname': env1_delay_time )), (bus -> Bus(control, 551, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_delay_time, 1 ]
pknob: set_controller: env1_delay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
pknob set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
pknob set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ attack_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Attack Time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_time )), (bus -> Bus(control, 552, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_time, 1 ]
pknob: set_controller: env1_attack_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ attack_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Attack level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_level )), (bus -> Bus(control, 553, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_level, 1 ]
pknob: set_controller: env1_attack_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
pknob set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ decay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Decay time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_time )), (bus -> Bus(control, 554, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_time, 1 ]
pknob: set_controller: env1_decay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
pknob set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ decay_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.89442719099992, 'name': Decay level, 'transmit': bus, 'val': 0.8, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_level )), (bus -> Bus(control, 555, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_level, 1 ]
pknob: set_controller: env1_decay_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
pknob set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
pknob set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Sustain loop, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_time )), (bus -> Bus(control, 556, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_time, 1 ]
pknob: set_controller: env1_sustain_time
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain loop ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Sustain level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_level )), (bus -> Bus(control, 557, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_level, 1 ]
pknob: set_controller: env1_sustain_level
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain level ]
pknob set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ release_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Release, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_release_time )), (bus -> Bus(control, 558, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_release_time, 1 ]
pknob: set_controller: env1_release_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
pknob set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_center_frame_view.new: fin
hehehe7
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg1, 2 ]
pknob: set_controller: insert1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg2, 2 ]
pknob: set_controller: insert1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg1, 2 ]
pknob: set_controller: insert2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg2, 2 ]
pknob: set_controller: insert2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
MACRO
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
hehehe8
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), 
  ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 13, 
  'osc1_pitch': 'c232' )
********************************************************************done
********************************************************************done
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
soul2
done
done
done
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
soul2
-----------controller.get_menu_items_names: [ no_preset, aaaa, azaz, olo, plop ]
class_popup_view: set_property: [ value, 0 ]
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, /tmp/-2123195099)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, /tmp/-632748728)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, /tmp/-1793927552)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, /tmp/734596313)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, /tmp/-663496938)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
done
done
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
class_presets_global_controller: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.059057021513581, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.059057021513581 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.068277588114142, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.068277588114142 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.076133500784636, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.076133500784636 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.082889389246702, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.082889389246702 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.09387472551316, false ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.09387472551316 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.06490951217711, false ]
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06490951217711 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.79339148942381, false ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.79339148942381 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0, false ]
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.44801391288638, false ]
modulation_manager.set_external_value: [ [ macro, 2 ], 0.44801391288638 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.69999998807907, false ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.69999998807907 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.62477802764624, false ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.62477802764624 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0.14441108889878, false ]
modulation_manager.set_external_value: [ [ macro, 7 ], 0.14441108889878 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_pparam_controller.set_property: [ value, 0, false ]
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
action!!
class_presets_global_controller: save_current_preset_as_uname: uuuu
Instance of String {    (0x19e5af90, gc=2C, fmt=07, flg=00, set=03)
  indexed slots [4]
      0 : u
      1 : u
      2 : u
      3 : u
}
   Symbol 'no_preset'
Instance of String {    (0x1d05f590, gc=2C, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : a
      2 : a
      3 : a
}
Instance of String {    (0xa531c450, gc=2C, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : z
      2 : a
      3 : z
}
Instance of String {    (0x120feff0, gc=2C, fmt=07, flg=10, set=03)
  indexed slots [3]
      0 : o
      1 : l
      2 : o
}
Instance of String {    (0xa6f46bd0, gc=2C, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : p
      1 : l
      2 : o
      3 : p
}
class_popup_view: set_property: [ menu_items, nil ]
items, uname, index: [ [ no_preset, aaaa, azaz, olo, plop, uuuu ], uuuu, 5 ]
class_popup_view: set_property: [ value, 5 ]
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/852265092)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/1816174045)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/221809962)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-1824338551)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/1480600182)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 5 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/96911655)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-1545886500)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-2019266634)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/150619877)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-1486631825)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
action!!
class_presets_global_controller: save_current_preset_as_uname: ttt
Instance of String {    (0x1113b0b0, gc=30, fmt=07, flg=00, set=03)
  indexed slots [3]
      0 : t
      1 : t
      2 : t
}
   Symbol 'no_preset'
Instance of String {    (0xa6417d10, gc=30, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : a
      2 : a
      3 : a
}
Instance of String {    (0x1929dc70, gc=30, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : z
      2 : a
      3 : z
}
Instance of String {    (0xa6b9f130, gc=30, fmt=07, flg=10, set=03)
  indexed slots [3]
      0 : o
      1 : l
      2 : o
}
Instance of String {    (0x14f03c70, gc=30, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : p
      1 : l
      2 : o
      3 : p
}
Instance of String {    (0x11287f90, gc=30, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : u
      1 : u
      2 : u
      3 : u
}
class_popup_view: set_property: [ menu_items, nil ]
items, uname, index: [ [ no_preset, aaaa, azaz, olo, plop, ttt, uuuu ], ttt, 5 ]
class_popup_view: set_property: [ value, 5 ]
class_presets_global_controller: [ value, 6 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/1114071082)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-1001089680)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-677760169)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-1826346297)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/1579089417)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 5 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/1289511553)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/1551225673)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1330031660)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/466974662)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-1542886947)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 4 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 18.962944 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/1961221765)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/1633001323)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1229260976)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.100000147984 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-1330594659)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/215056369)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, /tmp/372041655)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 1 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 4 ]
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 3 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/2033411181)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/1956832619)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-1923437991)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/1969944168)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 3 ]
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 2 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-1222277148)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-1938794580)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1250098269)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.100000147984 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/1989241152)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/1643383035)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, /tmp/-1650080105)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 2 ]
done
done
done
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 1 ]
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 0 ]
class_popup_view: set_property: [ value, 0 ]
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-814196440)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-431806223)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1272330268)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-2144388793)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/320068809)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 1 ]
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 2 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/571116397)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-1680326251)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/28253129)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.100000147984 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/310171876)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/841769734)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 2 ]
done
done
done
done
done
done
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 1 ]
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
class_pparam_controller.set_property: [ value, 0.05, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.05 ]
class_pparam_controller.set_property: [ value, 0.068627450980392, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.068627450980392 ]
class_pparam_controller.set_property: [ value, 0.07843137254902, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.07843137254902 ]
class_pparam_controller.set_property: [ value, 0.094339622641509, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.094339622641509 ]
class_pparam_controller.set_property: [ value, 0.10377358490566, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.10377358490566 ]
class_pparam_controller.set_property: [ value, 0.11111111111111, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.11111111111111 ]
class_pparam_controller.set_property: [ value, 0.13888888888889, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.13888888888889 ]
class_pparam_controller.set_property: [ value, 0.14545454545455, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.14545454545455 ]
class_pparam_controller.set_property: [ value, 0.15454545454545, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.15454545454545 ]
class_pparam_controller.set_property: [ value, 0.16363636363636, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.16363636363636 ]
class_pparam_controller.set_property: [ value, 0.1875, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.1875 ]
class_pparam_controller.set_property: [ value, 0.20535714285714, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.20535714285714 ]
class_pparam_controller.set_property: [ value, 0.21551724137931, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.21551724137931 ]
class_pparam_controller.set_property: [ value, 0.23275862068966, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.23275862068966 ]
class_pparam_controller.set_property: [ value, 0.23728813559322, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.23728813559322 ]
class_pparam_controller.set_property: [ value, 0.26271186440678, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.26271186440678 ]
class_pparam_controller.set_property: [ value, 0.275, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.275 ]
class_pparam_controller.set_property: [ value, 0.29166666666667, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.29166666666667 ]
class_pparam_controller.set_property: [ value, 0.29508196721311, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.29508196721311 ]
class_pparam_controller.set_property: [ value, 0.30327868852459, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.30327868852459 ]
class_pparam_controller.set_property: [ value, 0.30952380952381, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.30952380952381 ]
class_pparam_controller.set_property: [ value, 0.31746031746032, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.31746031746032 ]
class_pparam_controller.set_property: [ value, 0.32539682539683, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.32539682539683 ]
class_pparam_controller.set_property: [ value, 0.33333333333333, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.33333333333333 ]
class_pparam_controller.set_property: [ value, 0.3359375, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.3359375 ]
class_pparam_controller.set_property: [ value, 0.3515625, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.3515625 ]
class_pparam_controller.set_property: [ value, 0.359375, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.359375 ]
class_pparam_controller.set_property: [ value, 0.3671875, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.3671875 ]
class_pparam_controller.set_property: [ value, 0.36923076923077, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.36923076923077 ]
class_pparam_controller.set_property: [ value, 0.38461538461538, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.38461538461538 ]
class_pparam_controller.set_property: [ value, 0.39393939393939, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.39393939393939 ]
class_pparam_controller.set_property: [ value, 0.40151515151515, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.40151515151515 ]
class_pparam_controller.set_property: [ value, 0.42424242424242, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.42424242424242 ]
class_pparam_controller.set_property: [ value, 0.42647058823529, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.42647058823529 ]
class_pparam_controller.set_property: [ value, 0.43478260869565, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.43478260869565 ]
class_pparam_controller.set_property: [ value, 0.44202898550725, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.44202898550725 ]
class_pparam_controller.set_property: [ value, 0.47101449275362, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.47101449275362 ]
class_pparam_controller.set_property: [ value, 0.51449275362319, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.51449275362319 ]
class_pparam_controller.set_property: [ value, 0.55072463768116, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.55072463768116 ]
class_pparam_controller.set_property: [ value, 0.58695652173913, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.58695652173913 ]
class_pparam_controller.set_property: [ value, 0.6231884057971, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.6231884057971 ]
class_pparam_controller.set_property: [ value, 0.63768115942029, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.63768115942029 ]
class_pparam_controller.set_property: [ value, 0.65942028985507, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.65942028985507 ]
class_pparam_controller.set_property: [ value, 0.68840579710145, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.68840579710145 ]
class_pparam_controller.set_property: [ value, 0.70289855072464, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.70289855072464 ]
class_pparam_controller.set_property: [ value, 0.71014492753623, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.71014492753623 ]
class_pparam_controller.set_property: [ value, 0.72463768115942, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.72463768115942 ]
class_pparam_controller.set_property: [ value, 0.73913043478261, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.73913043478261 ]
class_pparam_controller.set_property: [ value, 0.78260869565217, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.78260869565217 ]
class_pparam_controller.set_property: [ value, 0.80434782608696, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.80434782608696 ]
class_pparam_controller.set_property: [ value, 0.94202898550725, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.94202898550725 ]
class_pparam_controller.set_property: [ value, 0.95652173913043, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.95652173913043 ]
class_pparam_controller.set_property: [ value, 0.99275362318841, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.99275362318841 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.97101449275362, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.97101449275362 ]
class_pparam_controller.set_property: [ value, 0.94202898550725, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.94202898550725 ]
class_pparam_controller.set_property: [ value, 0.90714285714286, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.90714285714286 ]
class_pparam_controller.set_property: [ value, 0.87142857142857, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.87142857142857 ]
class_pparam_controller.set_property: [ value, 0.85714285714286, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.85714285714286 ]
class_pparam_controller.set_property: [ value, 0.83571428571429, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.83571428571429 ]
class_pparam_controller.set_property: [ value, 0.82857142857143, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.82857142857143 ]
class_pparam_controller.set_property: [ value, 0.8, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.8 ]
class_pparam_controller.set_property: [ value, 0.65714285714286, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.65714285714286 ]
class_pparam_controller.set_property: [ value, 0.63571428571429, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.63571428571429 ]
class_pparam_controller.set_property: [ value, 0.57857142857143, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.57857142857143 ]
class_pparam_controller.set_property: [ value, 0.56428571428571, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.56428571428571 ]
class_pparam_controller.set_property: [ value, 0.55, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.55 ]
class_pparam_controller.set_property: [ value, 0.53571428571429, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.53571428571429 ]
class_pparam_controller.set_property: [ value, 0.52857142857143, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.52857142857143 ]
class_pparam_controller.set_property: [ value, 0.51428571428571, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.51428571428571 ]
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.5 ]
class_pparam_controller.set_property: [ value, 0.46428571428571, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.46428571428571 ]
class_pparam_controller.set_property: [ value, 0.44285714285714, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.44285714285714 ]
class_pparam_controller.set_property: [ value, 0.42142857142857, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.42142857142857 ]
class_pparam_controller.set_property: [ value, 0.4, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.4 ]
class_pparam_controller.set_property: [ value, 0.37142857142857, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.37142857142857 ]
class_pparam_controller.set_property: [ value, 0.32857142857143, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.32857142857143 ]
class_pparam_controller.set_property: [ value, 0.31428571428571, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.31428571428571 ]
class_pparam_controller.set_property: [ value, 0.29285714285714, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.29285714285714 ]
class_pparam_controller.set_property: [ value, 0.26428571428571, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.26428571428571 ]
class_pparam_controller.set_property: [ value, 0.22857142857143, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.22857142857143 ]
class_pparam_controller.set_property: [ value, 0.20422535211268, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.20422535211268 ]
class_pparam_controller.set_property: [ value, 0.15068493150685, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.15068493150685 ]
class_pparam_controller.set_property: [ value, 0.13013698630137, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.13013698630137 ]
class_pparam_controller.set_property: [ value, 0.11486486486486, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.11486486486486 ]
class_pparam_controller.set_property: [ value, 0.10810810810811, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.10810810810811 ]
class_pparam_controller.set_property: [ value, 0.10135135135135, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.10135135135135 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0 ]
class_presets_global_controller: [ value, 0 ]
class_popup_view: set_property: [ value, 0 ]
class_presets_global_controller: [ value, 1 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/1674405895)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-217654331)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1418290370)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-447637650)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/174429250)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 1 ]
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 2 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/1587822259)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-1875746950)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1344449571)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.100000147984 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/651263731)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-1885931119)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 2 ]
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 3 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/1184711926)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-152689463)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1483415013)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-128953275)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-1444349324)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )), 
  ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), ([ macro, 7 ] -> ( 'val': 0.7 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 3 ]
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 4 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 18.962944 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-2055978361)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/1692298166)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1647066184)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.100000147984 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-1931934108)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/1802905186)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, /tmp/1165241927)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 1 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 4 ]
done
done
done
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
class_presets_global_controller: [ value, 5 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 5 ]
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
class_presets_global_controller: [ value, 6 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-388627372)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-1256766931)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1258370602)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-15586963)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/277683793)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 6 ]
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
class_pparam_controller.set_property: [ value, 0.056603773584906, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.056603773584906 ]
class_pparam_controller.set_property: [ value, 0.074074074074074, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.074074074074074 ]
class_pparam_controller.set_property: [ value, 0.10185185185185, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.10185185185185 ]
class_pparam_controller.set_property: [ value, 0.13636363636364, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.13636363636364 ]
class_pparam_controller.set_property: [ value, 0.16964285714286, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.16964285714286 ]
class_pparam_controller.set_property: [ value, 0.20689655172414, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.20689655172414 ]
class_pparam_controller.set_property: [ value, 0.24166666666667, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.24166666666667 ]
class_pparam_controller.set_property: [ value, 0.24590163934426, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.24590163934426 ]
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.25 ]
class_pparam_controller.set_property: [ value, 0.25396825396825, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.25396825396825 ]
class_pparam_controller.set_property: [ value, 0.25384615384615, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.25384615384615 ]
class_pparam_controller.set_property: [ value, 0.26119402985075, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.26119402985075 ]
class_pparam_controller.set_property: [ value, 0.26470588235294, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.26470588235294 ]
class_pparam_controller.set_property: [ value, 0.27464788732394, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.27464788732394 ]
class_pparam_controller.set_property: [ value, 0.27777777777778, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.27777777777778 ]
class_pparam_controller.set_property: [ value, 0.28082191780822, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.28082191780822 ]
class_pparam_controller.set_property: [ value, 0.28378378378378, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.28378378378378 ]
class_pparam_controller.set_property: [ value, 0.28, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.28 ]
class_pparam_controller.set_property: [ value, 0.28571428571429, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.28571428571429 ]
class_pparam_controller.set_property: [ value, 0.28205128205128, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.28205128205128 ]
class_pparam_controller.set_property: [ value, 0.2906976744186, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.2906976744186 ]
class_pparam_controller.set_property: [ value, 0.28977272727273, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.28977272727273 ]
class_pparam_controller.set_property: [ value, 0.2967032967033, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.2967032967033 ]
class_pparam_controller.set_property: [ value, 0.3031914893617, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.3031914893617 ]
class_pparam_controller.set_property: [ value, 0.30526315789474, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.30526315789474 ]
class_pparam_controller.set_property: [ value, 0.3125, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.3125 ]
class_pparam_controller.set_property: [ value, 0.31818181818182, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.31818181818182 ]
class_pparam_controller.set_property: [ value, 0.325, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.325 ]
class_pparam_controller.set_property: [ value, 0.32673267326733, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.32673267326733 ]
class_pparam_controller.set_property: [ value, 0.34761904761905, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.34761904761905 ]
class_pparam_controller.set_property: [ value, 0.35377358490566, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.35377358490566 ]
class_pparam_controller.set_property: [ value, 0.50420168067227, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.50420168067227 ]
class_pparam_controller.set_property: [ value, 0.77, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.77 ]
class_pparam_controller.set_property: [ value, 0.79354838709677, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.79354838709677 ]
class_pparam_controller.set_property: [ value, 0.85350318471338, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.85350318471338 ]
class_pparam_controller.set_property: [ value, 0.87261146496815, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.87261146496815 ]
class_pparam_controller.set_property: [ value, 0.86942675159236, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.86942675159236 ]
class_pparam_controller.set_property: [ value, 0.86624203821656, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.86624203821656 ]
class_pparam_controller.set_property: [ value, 0.86858974358974, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.86858974358974 ]

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_presets_global_controller: [ value, 5 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-335630983)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/2064855917)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1416287577)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/773241332)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-909940212)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 5 ]
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_presets_global_controller: [ value, 4 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 18.962944 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-1275758139)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/2067012149)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/167147873)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.100000147984 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/1665982947)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-1845740403)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 1 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 4 ]
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
done
done
done
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_presets_global_controller: [ value, 5 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-402762338)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 5 ]
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
********************* releasing synth
class_presets_global_controller: [ value, 6 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/1774581322)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/948633224)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/146023961)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/186790253)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-1963537767)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 6 ]
###########----- making note
########### making synth
########### making fx
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.04, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.04 ]
class_pparam_controller.set_property: [ value, 0.049019607843137, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.049019607843137 ]
class_pparam_controller.set_property: [ value, 0.086538461538462, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.086538461538462 ]
class_pparam_controller.set_property: [ value, 0.11320754716981, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.11320754716981 ]
class_pparam_controller.set_property: [ value, 0.13636363636364, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.13636363636364 ]
class_pparam_controller.set_property: [ value, 0.15178571428571, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.15178571428571 ]
class_pparam_controller.set_property: [ value, 0.16964285714286, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.16964285714286 ]
class_pparam_controller.set_property: [ value, 0.19642857142857, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.19642857142857 ]
class_pparam_controller.set_property: [ value, 0.20175438596491, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.20175438596491 ]
class_pparam_controller.set_property: [ value, 0.23275862068966, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.23275862068966 ]
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.25 ]
class_pparam_controller.set_property: [ value, 0.25423728813559, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.25423728813559 ]
class_pparam_controller.set_property: [ value, 0.25833333333333, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.25833333333333 ]
class_pparam_controller.set_property: [ value, 0.26666666666667, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.26666666666667 ]
class_pparam_controller.set_property: [ value, 0.275, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.275 ]
class_pparam_controller.set_property: [ value, 0.27868852459016, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.27868852459016 ]
class_pparam_controller.set_property: [ value, 0.29508196721311, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.29508196721311 ]
class_pparam_controller.set_property: [ value, 0.32258064516129, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.32258064516129 ]
class_pparam_controller.set_property: [ value, 0.33064516129032, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.33064516129032 ]
class_pparam_controller.set_property: [ value, 0.34126984126984, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.34126984126984 ]
class_pparam_controller.set_property: [ value, 0.34920634920635, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.34920634920635 ]
class_pparam_controller.set_property: [ value, 0.37301587301587, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.37301587301587 ]
class_pparam_controller.set_property: [ value, 0.3828125, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.3828125 ]
class_pparam_controller.set_property: [ value, 0.38461538461538, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.38461538461538 ]
class_pparam_controller.set_property: [ value, 0.39393939393939, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.39393939393939 ]
class_pparam_controller.set_property: [ value, 0.40909090909091, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.40909090909091 ]
class_pparam_controller.set_property: [ value, 0.42537313432836, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.42537313432836 ]
class_pparam_controller.set_property: [ value, 0.43283582089552, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.43283582089552 ]
class_pparam_controller.set_property: [ value, 0.45522388059701, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.45522388059701 ]
class_pparam_controller.set_property: [ value, 0.46268656716418, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.46268656716418 ]
class_pparam_controller.set_property: [ value, 0.47014925373134, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.47014925373134 ]
class_pparam_controller.set_property: [ value, 0.48507462686567, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.48507462686567 ]
class_pparam_controller.set_property: [ value, 0.50746268656716, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.50746268656716 ]
class_pparam_controller.set_property: [ value, 0.51470588235294, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.51470588235294 ]
class_pparam_controller.set_property: [ value, 0.53676470588235, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.53676470588235 ]
class_pparam_controller.set_property: [ value, 0.55882352941176, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.55882352941176 ]
class_pparam_controller.set_property: [ value, 0.60294117647059, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.60294117647059 ]
class_pparam_controller.set_property: [ value, 0.61764705882353, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.61764705882353 ]
class_pparam_controller.set_property: [ value, 0.64705882352941, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.64705882352941 ]
class_pparam_controller.set_property: [ value, 0.67647058823529, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.67647058823529 ]
class_pparam_controller.set_property: [ value, 0.70588235294118, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.70588235294118 ]
class_pparam_controller.set_property: [ value, 0.7, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.7 ]
class_pparam_controller.set_property: [ value, 0.70714285714286, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.70714285714286 ]
class_pparam_controller.set_property: [ value, 0.72142857142857, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.72142857142857 ]
class_pparam_controller.set_property: [ value, 0.72857142857143, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.72857142857143 ]
class_pparam_controller.set_property: [ value, 0.73571428571429, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.73571428571429 ]
class_pparam_controller.set_property: [ value, 0.8169014084507, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.8169014084507 ]
class_pparam_controller.set_property: [ value, 0.83098591549296, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.83098591549296 ]
class_pparam_controller.set_property: [ value, 0.84027777777778, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.84027777777778 ]
class_pparam_controller.set_property: [ value, 0.85416666666667, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.85416666666667 ]
class_pparam_controller.set_property: [ value, 0.88888888888889, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.88888888888889 ]
class_pparam_controller.set_property: [ value, 0.91666666666667, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.91666666666667 ]
class_pparam_controller.set_property: [ value, 0.91095890410959, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.91095890410959 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
action!!
class_presets_global_controller: save_current_preset_as_uname: uuuu
Instance of String {    (0xa7353050, gc=50, fmt=07, flg=00, set=03)
  indexed slots [4]
      0 : u
      1 : u
      2 : u
      3 : u
}
   Symbol 'no_preset'
Instance of String {    (0x20915670, gc=50, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : a
      2 : a
      3 : a
}
Instance of String {    (0x126827f0, gc=50, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : z
      2 : a
      3 : z
}
Instance of String {    (0x17d5ee10, gc=50, fmt=07, flg=10, set=03)
  indexed slots [3]
      0 : o
      1 : l
      2 : o
}
Instance of String {    (0x19259210, gc=50, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : p
      1 : l
      2 : o
      3 : p
}
Instance of String {    (0xa4a0d270, gc=50, fmt=07, flg=10, set=03)
  indexed slots [3]
      0 : t
      1 : t
      2 : t
}
Instance of String {    (0xa4d50a70, gc=50, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : u
      1 : u
      2 : u
      3 : u
}
class_popup_view: set_property: [ menu_items, nil ]
items, uname, index: [ [ no_preset, aaaa, azaz, olo, plop, ttt, uuuu ], uuuu, 6 ]
class_popup_view: set_property: [ value, 6 ]
class_presets_global_controller: [ value, 5 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-1898677324)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-7513327)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/465645581)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/740382612)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/296673845)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 5 ]
********************* releasing synth
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
###########----- making note
########### making synth
########### making fx
class_presets_global_controller: [ value, 6 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 1.82 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.144411 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.144411 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.06491 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.06491 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.793391 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.793391 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.624778 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.624778 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.093875 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.093875 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/127395531)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/-1859246440)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1231975291)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.448014 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.448014 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-1191059568)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/1344730416)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.910959, 'name': Wt-pos, 'transmit': bus, 'val': 1.82, 
  'spec': a ControlSpec(0, 1.999, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 233, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 6 ]
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.407474, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.407474 ]
class_pparam_controller.set_property: [ value, 0.39845439215686, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.39845439215686 ]
class_pparam_controller.set_property: [ value, 0.37884654901961, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.37884654901961 ]
class_pparam_controller.set_property: [ value, 0.36904262745098, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.36904262745098 ]
class_pparam_controller.set_property: [ value, 0.35923870588235, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.35923870588235 ]
class_pparam_controller.set_property: [ value, 0.34943478431373, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.34943478431373 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.32982694117647, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.32982694117647 ]
class_pparam_controller.set_property: [ value, 0.32002301960784, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.32002301960784 ]
class_pparam_controller.set_property: [ value, 0.31021909803922, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.31021909803922 ]
class_pparam_controller.set_property: [ value, 0.30041517647059, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.30041517647059 ]
class_pparam_controller.set_property: [ value, 0.28080733333333, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.28080733333333 ]
class_pparam_controller.set_property: [ value, 0.27100341176471, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.27100341176471 ]
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
-----------controller.get_menu_items_names: [ Before filter 1, Before filter 2, After filter 1, After filter 2, Between filters, Before pan, In feedback ]
filkindREFRESH++
class_popup_view: set_property: [ label, Ins1 ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
-----------controller.get_menu_items_names: [ Before filter 1, Before filter 2, After filter 1, After filter 2, Between filters, Before pan, In feedback ]
filkindREFRESH++
class_popup_view: set_property: [ label, Ins2 ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
-----------controller.get_menu_items_names: [ After filter 1, After filter 2, Between filters, Before pan, After pan ]
filkindREFRESH++
class_popup_view: set_property: [ label, Feedback ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
-----------controller.get_menu_items_names: [ No bypass, Osc 1, Osc 2, Osc 3 ]
filkindREFRESH++
class_popup_view: set_property: [ label, Bypass source ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
-----------controller.get_menu_items_names: [ Before Fx 1, Before Fx 2, Before Eq ]
filkindREFRESH++
class_popup_view: set_property: [ label, Bypass destination ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
********************* releasing synth
###########----- making note
########### making synth
class_pparam_kind_controller: [ value, 1 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.30769230797887, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.29914529900998, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.29059829097241, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.28205128200352, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.27350427396595, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.26495726499707, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.24786324799061, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23931623902172, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23076923098415, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.22222222201526, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.2051282050088, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.19658119697124, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.18803418800235, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.17948717903346, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.162393162027, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.15384615398943, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.13675213698298, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11965811997652, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11111111100763, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.10256410297006, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.094017094001174, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.076923076994717, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.068376068025827, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.05982905998826, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.10256410297006, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11111111100763, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.13675213698298, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.14529914502054, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.162393162027, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.18803418800235, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.2051282050088, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23076923098415, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.24786324799061, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.27350427396595, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.28205128200352, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.30769230797887, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.31623931601644, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.33333333302289, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35042735002935, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35897435899824, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.36752136796713, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.3760683760047, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.39316239301115, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.40170940198004, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.41025641001761, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.4188034189865, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.43589743599296, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.44444444403052, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.45299145299941, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.4615384619683, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.47863247897476, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.48717948701233, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.49572649598122, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.50427350401878, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.52136752102524, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.52991452999413, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.5384615380317, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.54700854700059, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.56410256400704, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.57264957297593, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.58974358998239, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.60683760698885, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.61538461502641, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.6239316239953, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.63247863203287, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64102564100176, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64957264997065, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.70085470099002, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.73504273500293, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.75213675200939, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.78632478602231, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.80341880302876, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.82905982900411, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.86324786301702, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.88034188002348, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.90598290599883, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.92307692300528, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.94871794898063, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.9572649570182, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.96581196598709, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.98290598299354, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.99145299103111, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.94871794898063, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.94017094001174, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.91452991496772, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.89743589702994, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.87179487198591, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.85470085497946, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.82051282096654, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.76923076901585, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.76068376097828, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.73504273500293, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.71794871799648, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.70940170902759, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.70085470099002, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.69230769202113, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.68376068398356, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.67521367501467, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.66666666697711, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64957264997065, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64102564100176, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.63247863203287, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.6239316239953, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.59829059801996, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.58974358998239, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.56410256400704, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.54700854700059, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.52136752102524, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.50427350401878, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.47863247897476, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.4615384619683, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.43589743599296, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.42735042702407, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.41025641001761, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.38461538497359, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.3760683760047, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.36752136796713, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35042735002935, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.34188034199178, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.33333333302289, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.32478632498533, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.30769230797887, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.29914529900998, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.29059829097241, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.26495726499707, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.25641025602818, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23931623902172, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.22222222201526, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.2051282050088, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.19658119697124, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.17948717903346, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.162393162027, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.15384615398943, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.13675213698298, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.12820512801409, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11965811997652, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11111111100763, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.094017094001174, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.085470085032284, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.076923076994717, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.068376068025827, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.051282051019371, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.042735042981803, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.034188034012914, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.025641025975347, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.0085470089688897, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
********************* releasing synth
class_passive_controller: update_arg: bypass
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_kind_controller: [ value, 2 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.66864546153846, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.66864546153846 ]
class_pparam_controller.set_property: [ value, 0.65903007692308, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.65903007692308 ]
class_pparam_controller.set_property: [ value, 0.64941469230769, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.64941469230769 ]
class_pparam_controller.set_property: [ value, 0.63979930769231, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.63979930769231 ]
class_pparam_controller.set_property: [ value, 0.61276737735849, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.61276737735849 ]
class_pparam_controller.set_property: [ value, 0.58673662962963, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.58673662962963 ]
class_pparam_controller.set_property: [ value, 0.57747737037037, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.57747737037037 ]
class_pparam_controller.set_property: [ value, 0.56821811111111, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.56821811111111 ]
class_pparam_controller.set_property: [ value, 0.55895885185185, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.55895885185185 ]
class_pparam_controller.set_property: [ value, 0.55256154545455, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.55256154545455 ]
class_pparam_controller.set_property: [ value, 0.53437972727273, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.53437972727273 ]
class_pparam_controller.set_property: [ value, 0.52528881818182, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.52528881818182 ]
class_pparam_controller.set_property: [ value, 0.51412454385965, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.51412454385965 ]
class_pparam_controller.set_property: [ value, 0.49658068421053, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.49658068421053 ]
class_pparam_controller.set_property: [ value, 0.49158975862069, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.49158975862069 ]
class_pparam_controller.set_property: [ value, 0.48296906896552, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.48296906896552 ]
class_pparam_controller.set_property: [ value, 0.47434837931034, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.47434837931034 ]
class_pparam_controller.set_property: [ value, 0.46981886440678, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.46981886440678 ]
class_pparam_controller.set_property: [ value, 0.46134428813559, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.46134428813559 ]
class_pparam_controller.set_property: [ value, 0.45286971186441, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.45286971186441 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.44439513559322, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.44439513559322 ]
class_pparam_controller.set_property: [ value, 0.43592055932203, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.43592055932203 ]
class_pparam_controller.set_property: [ value, 0.41897140677966, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41897140677966 ]
class_pparam_controller.set_property: [ value, 0.41544033333333, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41544033333333 ]
class_pparam_controller.set_property: [ value, 0.407107, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.407107 ]
class_pparam_controller.set_property: [ value, 0.36839732258065, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.36839732258065 ]
class_pparam_controller.set_property: [ value, 0.35790065079365, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.35790065079365 ]
class_pparam_controller.set_property: [ value, 0.34996414285714, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.34996414285714 ]
class_pparam_controller.set_property: [ value, 0.347732, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.347732 ]
class_pparam_controller.set_property: [ value, 0.3399195, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.3399195 ]
class_pparam_controller.set_property: [ value, 0.3242945, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.3242945 ]
class_pparam_controller.set_property: [ value, 0.31479930769231, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.31479930769231 ]
class_pparam_controller.set_property: [ value, 0.307107, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.307107 ]
class_pparam_controller.set_property: [ value, 0.29172238461538, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.29172238461538 ]
class_pparam_controller.set_property: [ value, 0.28919655223881, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.28919655223881 ]
class_pparam_controller.set_property: [ value, 0.28173386567164, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.28173386567164 ]
class_pparam_controller.set_property: [ value, 0.25934580597015, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.25934580597015 ]
class_pparam_controller.set_property: [ value, 0.25188311940299, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.25188311940299 ]
class_pparam_controller.set_property: [ value, 0.24442043283582, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.24442043283582 ]
class_pparam_controller.set_property: [ value, 0.22949505970149, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.22949505970149 ]
class_pparam_controller.set_property: [ value, 0.22203237313433, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.22203237313433 ]
class_pparam_controller.set_property: [ value, 0.19953124242424, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.19953124242424 ]
class_pparam_controller.set_property: [ value, 0.16864546153846, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.16864546153846 ]
class_pparam_controller.set_property: [ value, 0.16095315384615, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.16095315384615 ]
class_pparam_controller.set_property: [ value, 0.144607, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.144607 ]
class_pparam_controller.set_property: [ value, 0.128982, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.128982 ]
class_pparam_controller.set_property: [ value, 0.1039323968254, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.1039323968254 ]
class_pparam_controller.set_property: [ value, 0.086139258064516, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.086139258064516 ]
class_pparam_controller.set_property: [ value, 0.070010225806452, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.070010225806452 ]
class_pparam_controller.set_property: [ value, 0.061945709677419, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.061945709677419 ]
class_pparam_controller.set_property: [ value, 0.043172573770492, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.043172573770492 ]
class_pparam_controller.set_property: [ value, 0.034975852459016, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.034975852459016 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0 ]
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.13675213698298, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.17094017099589, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.19658119697124, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.22222222201526, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23931623902172, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.25641025602818, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.28205128200352, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.30769230797887, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.32478632498533, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35042735002935, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.36752136796713, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.39316239301115, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.41025641001761, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.4188034189865, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.43589743599296, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.47863247897476, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.50427350401878, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.52991452999413, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.54700854700059, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.57264957297593, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.5811965810135, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.58974358998239, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.61538461502641, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.6239316239953, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64957264997065, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.65811965800822, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.67521367501467, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.70085470099002, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.71794871799648, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.73504273500293, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.74358974397182, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.75213675200939, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.76068376097828, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.78632478602231, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.80341880302876, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.82051282096654, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.82905982900411, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_kind_controller: [ value, 3 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.049019607843137, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.049019607843137 ]
class_pparam_controller.set_property: [ value, 0.058823529411765, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.058823529411765 ]
class_pparam_controller.set_property: [ value, 0.07843137254902, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.07843137254902 ]
class_pparam_controller.set_property: [ value, 0.11538461538462, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.11538461538462 ]
class_pparam_controller.set_property: [ value, 0.12264150943396, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.12264150943396 ]
class_pparam_controller.set_property: [ value, 0.12962962962963, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.12962962962963 ]
class_pparam_controller.set_property: [ value, 0.13888888888889, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.13888888888889 ]
class_pparam_controller.set_property: [ value, 0.15454545454545, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.15454545454545 ]
class_pparam_controller.set_property: [ value, 0.16363636363636, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.16363636363636 ]
class_pparam_controller.set_property: [ value, 0.19642857142857, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.19642857142857 ]
class_pparam_controller.set_property: [ value, 0.21052631578947, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.21052631578947 ]
class_pparam_controller.set_property: [ value, 0.23275862068966, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.23275862068966 ]
class_pparam_controller.set_property: [ value, 0.23728813559322, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.23728813559322 ]
class_pparam_controller.set_property: [ value, 0.26666666666667, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.26666666666667 ]
class_pparam_controller.set_property: [ value, 0.275, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.275 ]
class_pparam_controller.set_property: [ value, 0.28688524590164, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.28688524590164 ]
class_pparam_controller.set_property: [ value, 0.29508196721311, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.29508196721311 ]
class_pparam_controller.set_property: [ value, 0.3015873015873, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.3015873015873 ]
class_pparam_controller.set_property: [ value, 0.31746031746032, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.31746031746032 ]
class_pparam_controller.set_property: [ value, 0.328125, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.328125 ]
class_pparam_controller.set_property: [ value, 0.33076923076923, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.33076923076923 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.34615384615385, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.34615384615385 ]
class_pparam_controller.set_property: [ value, 0.35606060606061, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.35606060606061 ]
class_pparam_controller.set_property: [ value, 0.36029411764706, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.36029411764706 ]
class_pparam_controller.set_property: [ value, 0.36764705882353, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.36764705882353 ]
class_pparam_controller.set_property: [ value, 0.375, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.375 ]
class_pparam_controller.set_property: [ value, 0.3768115942029, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.3768115942029 ]
class_pparam_controller.set_property: [ value, 0.38405797101449, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.38405797101449 ]
class_pparam_controller.set_property: [ value, 0.39285714285714, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.39285714285714 ]
class_pparam_controller.set_property: [ value, 0.40714285714286, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.40714285714286 ]
class_pparam_controller.set_property: [ value, 0.40845070422535, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.40845070422535 ]
class_pparam_controller.set_property: [ value, 0.41549295774648, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41549295774648 ]
class_pparam_controller.set_property: [ value, 0.42957746478873, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.42957746478873 ]
class_pparam_controller.set_property: [ value, 0.43661971830986, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.43661971830986 ]
class_pparam_controller.set_property: [ value, 0.44520547945205, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.44520547945205 ]
class_pparam_controller.set_property: [ value, 0.45945945945946, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.45945945945946 ]
class_pparam_controller.set_property: [ value, 0.46666666666667, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.46666666666667 ]
class_pparam_controller.set_property: [ value, 0.47333333333333, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.47333333333333 ]
class_pparam_controller.set_property: [ value, 0.47368421052632, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.47368421052632 ]
class_pparam_controller.set_property: [ value, 0.48026315789474, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.48026315789474 ]
class_pparam_controller.set_property: [ value, 0.49342105263158, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.49342105263158 ]
class_pparam_controller.set_property: [ value, 0.49358974358974, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.49358974358974 ]
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.5 ]
class_pparam_controller.set_property: [ value, 0.51282051282051, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.51282051282051 ]
class_pparam_controller.set_property: [ value, 0.5126582278481, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.5126582278481 ]
class_pparam_controller.set_property: [ value, 0.51898734177215, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.51898734177215 ]
class_pparam_controller.set_property: [ value, 0.5253164556962, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.5253164556962 ]
class_pparam_controller.set_property: [ value, 0.5375, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.5375 ]
class_pparam_controller.set_property: [ value, 0.54375, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.54375 ]
class_pparam_controller.set_property: [ value, 0.54320987654321, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.54320987654321 ]
class_pparam_controller.set_property: [ value, 0.5421686746988, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.5421686746988 ]
class_pparam_controller.set_property: [ value, 0.54761904761905, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.54761904761905 ]
class_pparam_controller.set_property: [ value, 0.55357142857143, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.55357142857143 ]
class_pparam_controller.set_property: [ value, 0.56547619047619, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.56547619047619 ]
class_pparam_controller.set_property: [ value, 0.57142857142857, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.57142857142857 ]
class_pparam_controller.set_property: [ value, 0.57738095238095, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.57738095238095 ]
class_pparam_controller.set_property: [ value, 0.57647058823529, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.57647058823529 ]
class_pparam_controller.set_property: [ value, 0.59302325581395, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.59302325581395 ]
class_pparam_controller.set_property: [ value, 0.62068965517241, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.62068965517241 ]
class_pparam_controller.set_property: [ value, 0.61797752808989, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.61797752808989 ]
class_pparam_controller.set_property: [ value, 0.62777777777778, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.62777777777778 ]
class_pparam_controller.set_property: [ value, 0.63888888888889, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.63888888888889 ]
class_pparam_controller.set_property: [ value, 0.64444444444444, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.64444444444444 ]
class_pparam_controller.set_property: [ value, 0.65, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.65 ]
class_pparam_controller.set_property: [ value, 0.65555555555556, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.65555555555556 ]
class_pparam_controller.set_property: [ value, 0.66666666666667, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.66666666666667 ]
class_pparam_controller.set_property: [ value, 0.657107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.657107 ]
class_pparam_controller.set_property: [ value, 0.647107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.647107 ]
class_pparam_controller.set_property: [ value, 0.617107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.617107 ]
class_pparam_controller.set_property: [ value, 0.597107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.597107 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.587107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.587107 ]
class_pparam_controller.set_property: [ value, 0.567107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.567107 ]
class_pparam_controller.set_property: [ value, 0.547107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.547107 ]
class_pparam_controller.set_property: [ value, 0.537107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.537107 ]
class_pparam_controller.set_property: [ value, 0.507107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.507107 ]
class_pparam_controller.set_property: [ value, 0.497107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.497107 ]
class_pparam_controller.set_property: [ value, 0.467107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.467107 ]
class_pparam_controller.set_property: [ value, 0.447107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.447107 ]
class_pparam_controller.set_property: [ value, 0.35133776923077, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.35133776923077 ]
class_pparam_controller.set_property: [ value, 0.32249161538462, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.32249161538462 ]
class_pparam_controller.set_property: [ value, 0.31287623076923, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.31287623076923 ]
class_pparam_controller.set_property: [ value, 0.30326084615385, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.30326084615385 ]
class_pparam_controller.set_property: [ value, 0.27441469230769, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.27441469230769 ]
class_pparam_controller.set_property: [ value, 0.26479930769231, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.26479930769231 ]
class_pparam_controller.set_property: [ value, 0.25518392307692, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.25518392307692 ]
class_pparam_controller.set_property: [ value, 0.23595315384615, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.23595315384615 ]
class_pparam_controller.set_property: [ value, 0.207107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.207107 ]
class_pparam_controller.set_property: [ value, 0.19730307843137, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.19730307843137 ]
class_pparam_controller.set_property: [ value, 0.16789131372549, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.16789131372549 ]
class_pparam_controller.set_property: [ value, 0.137107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.137107 ]
class_pparam_controller.set_property: [ value, 0.117107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.117107 ]
class_pparam_controller.set_property: [ value, 0.107107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.107107 ]
class_pparam_controller.set_property: [ value, 0.099263862745098, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.099263862745098 ]
class_pparam_controller.set_property: [ value, 0.069852098039216, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.069852098039216 ]
class_pparam_controller.set_property: [ value, 0.050244254901961, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.050244254901961 ]
class_pparam_controller.set_property: [ value, 0.030636411764706, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.030636411764706 ]
class_pparam_controller.set_property: [ value, 0.020832490196078, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.020832490196078 ]
class_pparam_controller.set_property: [ value, 0.011028568627451, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.011028568627451 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0.0017498571428571, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.0017498571428571 ]
class_pparam_controller.set_property: [ value, 0.028535571428571, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.028535571428571 ]
class_pparam_controller.set_property: [ value, 0.073178428571429, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.073178428571429 ]
class_pparam_controller.set_property: [ value, 0.18924985714286, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.18924985714286 ]
class_pparam_controller.set_property: [ value, 0.25174985714286, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.25174985714286 ]
class_pparam_controller.set_property: [ value, 0.36782128571429, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.36782128571429 ]
class_pparam_controller.set_property: [ value, 0.59996414285714, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.59996414285714 ]
class_pparam_controller.set_property: [ value, 0.61782128571429, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.61782128571429 ]
class_pparam_controller.set_property: [ value, 0.63693156140351, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.63693156140351 ]
class_pparam_controller.set_property: [ value, 0.65447542105263, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.65447542105263 ]
class_pparam_controller.set_property: [ value, 0.68956314035088, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.68956314035088 ]
class_pparam_controller.set_property: [ value, 0.74100530508475, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.74100530508475 ]
class_pparam_controller.set_property: [ value, 0.74947988135593, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.74947988135593 ]
class_pparam_controller.set_property: [ value, 0.79044033333333, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.79044033333333 ]
class_pparam_controller.set_property: [ value, 0.82377366666667, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.82377366666667 ]
class_pparam_controller.set_property: [ value, 0.87104142622951, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.87104142622951 ]
class_pparam_controller.set_property: [ value, 0.91202503278689, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.91202503278689 ]
class_pparam_controller.set_property: [ value, 0.93661519672131, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.93661519672131 ]
class_pparam_controller.set_property: [ value, 0.96517151612903, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.96517151612903 ]
class_pparam_controller.set_property: [ value, 0.98936506451613, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.98936506451613 ]
class_pparam_controller.set_property: [ value, 0.99282128571429, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.99282128571429 ]
class_pparam_controller.set_property: [ value, 0.9961695, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.9961695 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.988357, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.988357 ]
class_pparam_controller.set_property: [ value, 0.972732, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.972732 ]
class_pparam_controller.set_property: [ value, 0.95313874603175, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.95313874603175 ]
class_pparam_controller.set_property: [ value, 0.93726573015873, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.93726573015873 ]
class_pparam_controller.set_property: [ value, 0.91345620634921, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.91345620634921 ]
class_pparam_controller.set_property: [ value, 0.88964668253968, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.88964668253968 ]
class_pparam_controller.set_property: [ value, 0.86839732258065, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.86839732258065 ]
class_pparam_controller.set_property: [ value, 0.85226829032258, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.85226829032258 ]
class_pparam_controller.set_property: [ value, 0.83613925806452, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.83613925806452 ]
class_pparam_controller.set_property: [ value, 0.82001022580645, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.82001022580645 ]
class_pparam_controller.set_property: [ value, 0.81366437704918, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.81366437704918 ]
class_pparam_controller.set_property: [ value, 0.8054676557377, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.8054676557377 ]
class_pparam_controller.set_property: [ value, 0.79727093442623, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.79727093442623 ]
class_pparam_controller.set_property: [ value, 0.78087749180328, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.78087749180328 ]
class_pparam_controller.set_property: [ value, 0.77377366666667, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.77377366666667 ]
class_pparam_controller.set_property: [ value, 0.76642903389831, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.76642903389831 ]
class_pparam_controller.set_property: [ value, 0.77490361016949, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.77490361016949 ]
class_pparam_controller.set_property: [ value, 0.80880191525424, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.80880191525424 ]
class_pparam_controller.set_property: [ value, 0.81727649152542, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.81727649152542 ]
class_pparam_controller.set_property: [ value, 0.84270022033898, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.84270022033898 ]
class_pparam_controller.set_property: [ value, 0.86544033333333, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.86544033333333 ]
class_pparam_controller.set_property: [ value, 0.87104142622951, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.87104142622951 ]
class_pparam_controller.set_property: [ value, 0.90382831147541, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.90382831147541 ]
class_pparam_controller.set_property: [ value, 0.92932922222222, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.92932922222222 ]
class_pparam_controller.set_property: [ value, 0.98741003030303, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.98741003030303 ]
class_pparam_controller.set_property: [ value, 0.99498578787879, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.99498578787879 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.99172238461538, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.99172238461538 ]
class_pparam_controller.set_property: [ value, 0.96901176190476, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.96901176190476 ]
class_pparam_controller.set_property: [ value, 0.94904248387097, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.94904248387097 ]
class_pparam_controller.set_property: [ value, 0.92484893548387, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.92484893548387 ]
class_pparam_controller.set_property: [ value, 0.90871990322581, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.90871990322581 ]
class_pparam_controller.set_property: [ value, 0.882107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.882107 ]
class_pparam_controller.set_property: [ value, 0.87377366666667, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.87377366666667 ]
class_pparam_controller.set_property: [ value, 0.85117479661017, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.85117479661017 ]
class_pparam_controller.set_property: [ value, 0.84270022033898, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.84270022033898 ]
class_pparam_controller.set_property: [ value, 0.83641734482759, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.83641734482759 ]
class_pparam_controller.set_property: [ value, 0.84503803448276, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.84503803448276 ]
class_pparam_controller.set_property: [ value, 0.87090010344828, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.87090010344828 ]
class_pparam_controller.set_property: [ value, 0.882107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.882107 ]
class_pparam_controller.set_property: [ value, 0.89044033333333, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.89044033333333 ]
class_pparam_controller.set_property: [ value, 0.907107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.907107 ]
class_pparam_controller.set_property: [ value, 0.92022175409836, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.92022175409836 ]
class_pparam_controller.set_property: [ value, 0.91202503278689, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.91202503278689 ]
class_pparam_controller.set_property: [ value, 0.882107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.882107 ]
class_pparam_controller.set_property: [ value, 0.85117479661017, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.85117479661017 ]
class_pparam_controller.set_property: [ value, 0.81917596551724, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.81917596551724 ]
class_pparam_controller.set_property: [ value, 0.80359822807018, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.80359822807018 ]
class_pparam_controller.set_property: [ value, 0.79482629824561, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.79482629824561 ]
class_pparam_controller.set_property: [ value, 0.77983427272727, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.77983427272727 ]
class_pparam_controller.set_property: [ value, 0.77074336363636, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.77074336363636 ]
class_pparam_controller.set_property: [ value, 0.7534032962963, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.7534032962963 ]
class_pparam_controller.set_property: [ value, 0.73488477777778, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.73488477777778 ]
class_pparam_controller.set_property: [ value, 0.7259749245283, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.7259749245283 ]
class_pparam_controller.set_property: [ value, 0.71654096226415, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.71654096226415 ]
class_pparam_controller.set_property: [ value, 0.6882390754717, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.6882390754717 ]
class_pparam_controller.set_property: [ value, 0.67826084615385, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.67826084615385 ]
class_pparam_controller.set_property: [ value, 0.66864546153846, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.66864546153846 ]
class_pparam_controller.set_property: [ value, 0.65903007692308, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.65903007692308 ]
###########----- making note
########### making synth
class_pparam_kind_controller: [ value, 0 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.63030303030303, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.63030303030303 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.61981439064857, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.61981439064857 ]
class_pparam_controller.set_property: [ value, 0.61001046907994, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.61001046907994 ]
class_pparam_controller.set_property: [ value, 0.60020654751131, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.60020654751131 ]
class_pparam_controller.set_property: [ value, 0.59040262594268, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.59040262594268 ]
class_pparam_controller.set_property: [ value, 0.582107, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.582107 ]
class_pparam_controller.set_property: [ value, 0.57412441654572, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.57412441654572 ]
********************* releasing synth
class_passive_controller: update_arg: osc3
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
###########----- making note
########### making synth
########### making fx
class_passive_controller: update_arg: osc3
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
********************* releasing synth
class_passive_controller: update_arg: osc2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_passive_controller: update_arg: osc2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
###########----- making note
########### making synth
########### making fx
class_passive_controller: update_arg: osc1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
class_passive_controller: update_arg: osc1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
class_pparam_controller.set_property: [ value, 0.056603773584906, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.056603773584906 ]
class_pparam_controller.set_property: [ value, 0.066037735849057, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.066037735849057 ]
class_pparam_controller.set_property: [ value, 0.084905660377358, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.084905660377358 ]
class_pparam_controller.set_property: [ value, 0.10377358490566, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.10377358490566 ]
class_pparam_controller.set_property: [ value, 0.11320754716981, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.11320754716981 ]
class_pparam_controller.set_property: [ value, 0.15094339622642, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.15094339622642 ]
class_pparam_controller.set_property: [ value, 0.20192307692308, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.20192307692308 ]
class_pparam_controller.set_property: [ value, 0.22549019607843, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.22549019607843 ]
class_pparam_controller.set_property: [ value, 0.2843137254902, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.2843137254902 ]
class_pparam_controller.set_property: [ value, 0.33962264150943, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.33962264150943 ]
class_pparam_controller.set_property: [ value, 0.34259259259259, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.34259259259259 ]
class_pparam_controller.set_property: [ value, 0.35185185185185, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.35185185185185 ]
class_pparam_controller.set_property: [ value, 0.33333333333333, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.33333333333333 ]
class_pparam_controller.set_property: [ value, 0.15740740740741, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.15740740740741 ]
class_pparam_controller.set_property: [ value, 0.12727272727273, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.12727272727273 ]
class_pparam_controller.set_property: [ value, 0.1, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.1 ]
class_pparam_controller.set_property: [ value, 0.071428571428571, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.071428571428571 ]
class_pparam_controller.set_property: [ value, 0.043103448275862, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.043103448275862 ]
class_pparam_controller.set_property: [ value, 0.017241379310345, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0.017241379310345 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0.84365130769231, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.84365130769231 ]
class_pparam_controller.set_property: [ value, 0.83403592307692, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.83403592307692 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.79775145283019, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.79775145283019 ]
class_pparam_controller.set_property: [ value, 0.78831749056604, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.78831749056604 ]
class_pparam_controller.set_property: [ value, 0.76944956603774, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.76944956603774 ]
class_pparam_controller.set_property: [ value, 0.76001560377358, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.76001560377358 ]
class_pparam_controller.set_property: [ value, 0.75058164150943, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.75058164150943 ]
class_pparam_controller.set_property: [ value, 0.73788207692308, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.73788207692308 ]
class_pparam_controller.set_property: [ value, 0.74429233333333, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.74429233333333 ]
class_pparam_controller.set_property: [ value, 0.770959, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.770959 ]
class_pparam_controller.set_property: [ value, 0.82605333962264, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.82605333962264 ]
class_pparam_controller.set_property: [ value, 0.85540344444444, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.85540344444444 ]
class_pparam_controller.set_property: [ value, 0.8646627037037, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.8646627037037 ]
class_pparam_controller.set_property: [ value, 0.89244048148148, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.89244048148148 ]
class_pparam_controller.set_property: [ value, 0.910959, true ]
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
pknob set_property: [ value, 0.910959 ]
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.7948717949912, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.75213675200939, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.68376068398356, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.61538461502641, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.54700854700059, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.4615384619683, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.36752136796713, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.28205128200352, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.21367521397769, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.13675213698298, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.12820512801409, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11111111100763, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.094017094001174, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.085470085032284, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth

a Main

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /n_set Node 1067 not found
********************* releasing synth
###########----- making note
########### making synth

a Main

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 2 ] -> ( 'val': 0.448014 )), ([ macro, 4 ] -> ( 'val': 0.06491 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0.093875 )), ([ macro, 5 ] -> ( 'val': 0.793391 )), 
  ([ macro, 6 ] -> ( 'val': 0.624778 )), ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0.144411 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c434', 'modulator4_env_attack': 'c518', 'modulator4_glidefade': 'c514', 
  'modulator3_glidefade': 'c482', 'modulator3_ampmod': 'c245', 'fx1_arg2': 'c530', 'env4_decay_time': 'c326', 'insert1_arg2': 'c205', 
  'fx2_arg4': 'c478', 'modulator4_ampmod': 'c513', 'osc2_amp': 'c269', 'osc1_wt_pos': 'c233', 'env2_attack_time': 'c386', 
  'env2_vel': 'c393', 'modulator2_glidefade': 'c542', 'env3_release_time': 'c528', 'fx2_arg1': 'c523', 'macro8_control': 'c229', 
  'osc1_intensity': 'c234', 'env3_attack_level': 'c493', 'filter2_arg3': 'c208', 'filter1_arg1': 'c559', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c506', 'env1_delay_time': 'c551', 'env3_delay_time': 'c491', 'modulator4_curve1': 9, 'env3_sustain_level': 'c527', 
  'pan': 'c422', 'env4_release_time': 'c152', 'osc2_pitch': 'c398', 'modulator2_env_attack': 'c546', 'noise_fader': 'c290', 
  'env4_sustain_level': 'c362', 'env1_ktr': 'c550', 'filter1_arg3': 'c561', 'macro4_control': 'c225', 'env3_decay_level': 'c525', 
  'noise_amp': 'c154', 'env2_release_time': 'c261', 'macro6_control': 'c227', 'modosc_ring': 'c415', 'osc3_intensity': 'c536', 
  'env3_vel': 'c489', 'modosc_filterfm': 'c453', 'env4_decay_level': 'c256', 'env4_vel': 'c278', 'osc3_amp': 'c537', 
  'filter_parseq': 'c230', 'feedback_fader': 'c444', 'modulator2_rate': 'c539', 'fx1_arg3': 'c441', 'modulator4_rate': 'c445', 
  'env3_attack_time': 'c492', 'filter1_amp': 'c562', 'modulator2_env_decay': 'c547', 'env1_release_time': 'c558', 'fx1_arg1': 'c529', 
  'osc3_wt_pos': 'c535', 'env2_delay_time': 'c250', 'modulator3_curve1': 1, 'env1_attack_level': 'c553', 'osc1_fader': 'c236', 
  'fx2_arg2': 'c524', 'modulator2_amp': 'c540', 'filter2_amp': 'c209', 'osc3_wt': 14, 'env4_attack_time': 'c265', 
  'modulator3_env_attack': 'c511', 'gate': 1, 'env1_decay_time': 'c554', 'modulator2_curve2': 16, 'env2_ktr': 'c470', 
  'modosc_pitch': 'c414', 'bypass_mod': 'c202', 'env4_attack_level': 'c198', 'env1_sustain_time': 'c556', 'filter2_arg1': 'c206', 
  'insert2_arg2': 'c313', 'macro1_control': 'c210', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c486', 'fx1_arg4': 'c442', 
  'env3_ktr': 'c490', 'env1_vel': 'c549', 'feedback_amp': 'c443', 'macro5_control': 'c226', 'eq_lowshelf': 'c454', 
  'amp_mod': 'c32', 'modulator1_rate': 'c502', 'env2_decay_time': 'c450', 'modulator4_curve2': 10, 'filter2_arg2': 'c207', 
  'env3_sustain_time': 'c526', 'noise_color': 'c306', 'modosc_position': 'c403', 'env1_attack_time': 'c552', 'env1_sustain_level': 'c557', 
  'eq_highshelf': 'c501', 'modulator3_amp': 'c410', 'modulator1_ampmod': 'c418', 'osc1_amp': 'c235', 'modulator2_ampmod': 'c541', 
  'insert1_arg1': 'c204', 'osc2_wt_pos': 'c216', 'macro3_control': 'c212', 'eq_freq': 'c427', 'modulator1_env_decay': 'c224', 
  'modulator1_env_attack': 'c223', 'insert2_arg1': 'c193', 'env4_ktr': 'c274', 'env2_attack_level': 'c458', 'env1_decay_level': 'c555', 
  'env4_sustain_time': 'c104', 'env3_decay_time': 'c494', 'env4_delay_time': 'c374', 'modulator1_amp': 'c417', 'fx2_arg3': 'c477', 
  'modosc_phase': 'c402', 'osc3_pitch': 'c534', 'modulator3_curve2': 2, 'filter1_arg2': 'c560', 'amp': 'c548', 
  'modulator4_env_decay': 'c201', 'bypass_amp': 'c203', 'macro7_control': 'c228', 'modulator3_rate': 'c378', 'filter_mix': 'c231', 
  'osc2_wt': 0, 'env2_sustain_level': 'c350', 'modulator1_curve1': 5, 'modulator4_amp': 'c446', 'modulator1_glidefade': 'c381', 
  'eq_boost': 'c426', 'modulator3_env_decay': 'c512', 'osc3_fader': 'c538', 'macro2_control': 'c211', 'osc1_wt': 19, 
  'osc1_pitch': 'c232' )
a Task
********************* releasing synth
FAILURE /n_set Node 1003 not found
********************* releasing synth
WARNING:
Bus(audio, nil, nil, localhost)  has already been freed
WARNING:
Bus(audio, nil, nil, localhost)  has already been freed
WARNING:
Bus(audio, nil, nil, localhost)  has already been freed
WARNING:
Bus(audio, nil, nil, localhost)  has already been freed
WARNING:
Bus(audio, nil, nil, localhost)  has already been freed
WARNING:
Bus(audio, nil, nil, localhost)  has already been freed
WARNING:
Bus(audio, nil, nil, localhost)  has already been freed
WARNING:
Bus(audio, nil, nil, localhost)  has already been freed
FAILURE /n_set Node 1003 not found

a Main
WARNING: Deprecated support directory detected: /home/ggz/share/SuperCollider
Extensions and other contents in this directory will not be available until you move them to the new support directory:
/home/ggz/.local/share/SuperCollider
Quarks will need to be reinstalled due to broken symbolic links.

init_OSC
empty
compiling class library (debug build)...
	NumPrimitives = 663
	compiling dir: '/usr/local/share/SuperCollider/SCClassLibrary'
	compiling dir: '/usr/local/share/SuperCollider/Extensions'
	compiling dir: '/home/ggz/.local/share/SuperCollider/Extensions'
	pass 1 done
	numentries = 2386696 / 57420866 = 0.042
	10757 method selectors, 5338 classes
	method table size 25673368 bytes, big table size 229683464
	Number of Symbols 27310
	Byte Code Size 1205561
	compiled 1240 files in 1.27 seconds

Info: 18 methods are currently overwritten by extensions. To see which, execute:
MethodOverride.printAll

compile done
LID: event loop started
Help tree read from cache in 0.0482017993927 seconds
Class tree inited in 0.09 seconds
WARNING:
Deprecated startup file found: ~/.sclang.sc

Please use /home/ggz/.config/SuperCollider/startup.scd as startup file.
Deprecated startup files will be ignored in future versions.

Loaded 13 chucklib files from /home/ggz/.local/share/SuperCollider/Extensions/quarks/dewdrop_lib/ddwChucklib/Prototypes/.
RESULT = 0
Welcome to SuperCollider 3.5.1, type :SChelp for help
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/debug.sc' overwrites Ptrace:embedInStream in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/debug.sc' overwrites Object:debug in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/debug.sc' overwrites RawArray:debug in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/debug.sc' overwrites Collection:debug in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/autogui/Classes/synthDefStorageExt.sc' overwrites SynthDef:build in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/autogui/Classes/ArrayWarp.sc' overwrites ControlSpec:constrain in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/autogui/Classes/ArrayWarp.sc' overwrites ControlSpec:map in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/Conductor/classes/CV/ConnectCVToNodes.sc' overwrites Bus:free in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/Conductor/classes/extNodeProxy.sc' overwrites NodeProxy:set in main class library.

Intentional overwrites must be put in a 'SystemOverwrites' subfolder.
SwingOSC : server connected.
SwingOSC server already running
pipe-in: EOF. Will quit.
pipe-in: stopped.

booting 57110
localhost
main: waiting for input thread to join...
main: quitting...
/quit sent

LID: event loop stopped
Receiving notification messages from server localhost
Jack: JackClient::Deactivate
Jack: JackClient::Deactivate res = 0
Jack: JackPosixThread::Kill
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: jack_client_close
Jack: JackClient::Close ref = 5
Jack: JackClient::Deactivate
Jack: JackSocketClientChannel::Stop
Jack: JackPosixThread::Kill
Jack: JackClientSocket::Close
Jack: JackClientSocket::Close
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_SuperCollider
Jack: JackLibClient::~JackLibClient
Jack: JackShmReadWritePtr1::~JackShmReadWritePtr1 4
Jack: Succeeded in unlocking 377 byte memory area
Jack: JackLibGlobals Destroy 9919540
Jack: ~JackLibGlobals
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_system
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_freewheel
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_dbusapi
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_PulseAudio JACK Sink
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_PulseAudio JACK Source
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_qjackctl
Jack: no message buffer overruns
Jack: JackPosixThread::Stop
Jack: ThreadHandler: exit
Jack: JackShmReadWritePtr::~JackShmReadWritePtr 1
Jack: Succeeded in unlocking 994 byte memory area
Jack: JackShmReadWritePtr::~JackShmReadWritePtr 0
Jack: Succeeded in unlocking 82241434 byte memory area
Jack: jack_client_close res = 0
RESULT = 0
Cannot connect to shared memory: Aucun fichier ou dossier de ce type
ERROR: Primitive '_ServerShmInterface_connectSharedMem' failed.
Failed.
RECEIVER:
Instance of ServerShmInterface {    (0xa753e70, gc=F4, fmt=00, flg=00, set=03)
  instance variables [2]
    ptr : nil
    finalizer : nil
}

PROTECTED CALL STACK:
	Meta_MethodError:new	0xc23b4e0
		arg this = PrimitiveFailedError
		arg what = Failed.
		arg receiver = a ServerShmInterface
	Meta_PrimitiveFailedError:new	0xc23dee0
		arg this = PrimitiveFailedError
		arg receiver = a ServerShmInterface
	Object:primitiveFailed	0xa473120
		arg this = a ServerShmInterface
	a FunctionDef	0xb9d0ba0
		sourceCode = "<an open Function>"
	Routine:prStart	0xb1959a0
		arg this = a Routine
		arg inval = 1353040706.8503

CALL STACK:
	MethodError:reportError   0xa6ef190
		arg this = <instance of PrimitiveFailedError>
	< closed FunctionDef >   0xa6efd90
		arg error = <instance of PrimitiveFailedError>
	Integer:forBy   0xa6a4190
		arg this = 0
		arg endval = 0
		arg stepval = 2
		arg function = <instance of Function>
		var i = 0
		var j = 0
	SequenceableCollection:pairsDo   0xa56a7d0
		arg this = [*2]
		arg function = <instance of Function>
	Scheduler:seconds_   0xa5682d0
		arg this = <instance of Scheduler>
		arg newSeconds = 1353040707.0574
	Meta_AppClock:tick   0xa56b130
		arg this = <instance of Meta_AppClock>
		var saveClock = <instance of Meta_SystemClock>
	Process:tick   0xa5688f0
		arg this = <instance of Main>
For advice: [http://supercollider.sf.net/wiki/index.php/PrimitiveFailedError]
Found 212 LADSPA plugins
Jack: JackClient::SetupDriverSync driver sem in normal mode
Jack: JackPosixSemaphore::Connect name = jack_sem.1000_default_SuperCollider
Jack: JackPosixSemaphore::Connect sem_getvalue 0
Jack: Clock source : system clock via clock_gettime
Jack: JackLibClient::Open name = SuperCollider refnum = 5
JackDriver: client name is 'SuperCollider'
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_1 type = 32 bit float mono audio port_index = 23
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_2 type = 32 bit float mono audio port_index = 24
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_3 type = 32 bit float mono audio port_index = 25
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_4 type = 32 bit float mono audio port_index = 26
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_5 type = 32 bit float mono audio port_index = 27
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_6 type = 32 bit float mono audio port_index = 28
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_7 type = 32 bit float mono audio port_index = 29
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_8 type = 32 bit float mono audio port_index = 30
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_1 type = 32 bit float mono audio port_index = 31
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_2 type = 32 bit float mono audio port_index = 32
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_3 type = 32 bit float mono audio port_index = 33
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_4 type = 32 bit float mono audio port_index = 34
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_5 type = 32 bit float mono audio port_index = 35
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_6 type = 32 bit float mono audio port_index = 36
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_7 type = 32 bit float mono audio port_index = 37
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_8 type = 32 bit float mono audio port_index = 38
Jack: jack_set_graph_order_callback ext_client 9bddf00 client 9bddf00 
SC_AudioDriver: sample rate = 44100,000000, driver's block size = 1024
Jack: JackClient::Activate
Jack: JackClient::StartThread : period = 23219 computation = 100 constraint = 23219
Jack: Create non RT thread
Jack: ThreadHandler: start
Jack: JackClient::kBufferSizeCallback buffer_size = 1024
Jack: JackPosixThread::AcquireRealTimeImp priority = 5
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 2
Jack: JackClient::kActivateClient name = SuperCollider ref = 5 
Jack: JackClient::Connect src = system:capture_1 dst = SuperCollider:in_1
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: WaitGraphChange...
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 0
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 0
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
JackDriver: connected  system:capture_1 to SuperCollider:in_1
Jack: JackClient::Connect src = system:capture_2 dst = SuperCollider:in_2
JackDriver: connected  system:capture_2 to SuperCollider:in_2
Jack: JackClient::Connect src = system:midi_capture_1 dst = SuperCollider:in_3
JackDriver: couldn't connect  system:midi_capture_1 to SuperCollider:in_3
Jack: JackClient::Connect src = system:midi_capture_5 dst = SuperCollider:in_4
JackDriver: couldn't connect  system:midi_capture_5 to SuperCollider:in_4
Jack: JackClient::Connect src = system:midi_capture_6 dst = SuperCollider:in_5
JackDriver: couldn't connect  system:midi_capture_6 to SuperCollider:in_5
Jack: JackClient::Connect src = system:midi_capture_7 dst = SuperCollider:in_6
JackDriver: couldn't connect  system:midi_capture_7 to SuperCollider:in_6
Jack: JackClient::Connect src = SuperCollider:out_1 dst = system:playback_1
JackDriver: connected  SuperCollider:out_1 to system:playback_1
Jack: JackClient::Connect src = SuperCollider:out_2 dst = system:playback_2
JackDriver: connected  SuperCollider:out_2 to system:playback_2
Jack: JackClient::Connect src = SuperCollider:out_3 dst = system:playback_3
JackDriver: connected  SuperCollider:out_3 to system:playback_3
Jack: JackClient::Connect src = SuperCollider:out_4 dst = system:playback_4
JackDriver: connected  SuperCollider:out_4 to system:playback_4
Jack: JackClient::Connect src = SuperCollider:out_5 dst = system:playback_5
JackDriver: connected  SuperCollider:out_5 to system:playback_5
Jack: JackClient::Connect src = SuperCollider:out_6 dst = system:playback_6
JackDriver: connected  SuperCollider:out_6 to system:playback_6
Jack: JackClient::Connect src = SuperCollider:out_7 dst = system:playback_7
JackDriver: connected  SuperCollider:out_7 to system:playback_7
Jack: JackClient::Connect src = SuperCollider:out_8 dst = system:playback_8
JackDriver: connected  SuperCollider:out_8 to system:playback_8
SuperCollider 3 server ready (debug build).
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 1024
JackDriver: max output latency 23,2 ms
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
empty
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: WaitGraphChange...
cleaning up OSC
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 1024
JackDriver: max output latency 23,2 ms
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 1024
JackDriver: max output latency 23,2 ms
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38

a Function

loading synth.sc
loading ui.sc
loading control.sc
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
class_pparam_kind_controller: ( 'bank': noise, 'uname': noise_kind, 'kind': kind, 'name': Noise )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': white, 'specs': [ freq ], 'name': White noise, 'args': [ Cutoff ] ), ( 'uname': pink, 'specs': [ freq ], 'name': Pink noise, 'args': [ Cutoff ] ), ( 'uname': brown, 'specs': [ freq ], 'name': Brown noise, 'args': [ Cutoff ] ) ]
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert2_arg1, insert2_arg2 ], 'name': insert kind, 'uname': insert2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator3_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx2_arg1, fx2_arg2, fx2_arg3, fx2_arg4 ], 'name': fx kind, 'uname': fx2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
class_pparam_kind_controller: ( 'name': Mod routing matrix, 'uname': modosc_matrix, 'kind': matrix )
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator1_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
class_pparam_kind_controller: ( 'name': Global presets, 'uname': presets_global, 'kind': preset )
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx1_arg1, fx1_arg2, fx1_arg3, fx1_arg4 ], 'name': fx kind, 'uname': fx1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator4_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert1_arg1, insert1_arg2 ], 'name': insert kind, 'uname': insert1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter2_arg1, filter2_arg2, filter2_arg3 ], 'name': filter kind, 'uname': filter2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
modulation_manager.set_external_value: [ [ macro, 0 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 2 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 4 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 7 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator2_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
class_pparam_kind_controller: ( 'name': Ins1, 'uname': routing_insert1, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert1, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Ins2, 'uname': routing_insert2, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert2, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Feedback, 'uname': routing_feedback, 'bank': routing_feedback, 'kind': kind, 
  'routing_name': feedback, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': After pan, 'uname': after_pan ) ]
class_pparam_kind_controller: ( 'name': Bypass source, 'uname': routing_bypass_osc, 'bank': routing_bypass_osc, 'kind': kind, 
  'routing_name': bypass_osc, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': No bypass, 'uname': off ), ( 'name': Osc 1, 'uname': osc1 ), ( 'name': Osc 2, 'uname': osc2 ), ( 'name': Osc 3, 'uname': osc3 ) ]
class_pparam_kind_controller: ( 'name': Bypass destination, 'uname': routing_bypass_dest, 'bank': routing_bypass_dest, 'kind': kind, 
  'routing_name': bypass_dest, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before Fx 1, 'uname': before_fx1 ), ( 'name': Before Fx 2, 'uname': before_fx2 ), ( 'name': Before Eq, 'uname': before_eq ) ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter1_arg1, filter1_arg2, filter1_arg3 ], 'name': filter kind, 'uname': filter1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
hehehe1
hehehe1.1
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc1_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_pitch, 2 ]
pknob: set_controller: osc1_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc1_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_wt_pos, 3 ]
pknob: set_controller: osc1_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_intensity, 3 ]
pknob: set_controller: osc1_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_amp, 2 ]
pknob: set_controller: osc1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc2_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_pitch, 2 ]
pknob: set_controller: osc2_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc2_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_wt_pos, 3 ]
pknob: set_controller: osc2_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_intensity, 3 ]
pknob: set_controller: osc2_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_amp, 2 ]
pknob: set_controller: osc2_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc3_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_pitch, 2 ]
pknob: set_controller: osc3_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc3_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_wt_pos, 3 ]
pknob: set_controller: osc3_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_intensity, 3 ]
pknob: set_controller: osc3_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_amp, 2 ]
pknob: set_controller: osc3_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
SQUOIIII ce bordel0: a JSCHLayoutView
SQUOIIII ce bordel1: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_pitch, 2 ]
pknob: set_controller: modosc_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel2: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_ring, 2 ]
pknob: set_controller: modosc_ring
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel3: a JSCHLayoutView
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
SQUOIIII ce bordel
SQUOIIII ce bordel4: a JSCHLayoutView
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
hehehe1.3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ White noise, Pink noise, Brown noise ]
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: noise_color
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_color, 2 ]
pknob: set_controller: noise_color
REFRESH++
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: noise_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_amp, 2 ]
pknob: set_controller: noise_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.4
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: feedback_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ feedback_amp, 2 ]
pknob: set_controller: feedback_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe2
hehehe2.1
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_parseq
REFRESH++
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe2.2
hehehe3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg1, 3 ]
pknob: set_controller: filter1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg2, 3 ]
pknob: set_controller: filter1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg3, 2 ]
pknob: set_controller: filter1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg1, 3 ]
pknob: set_controller: filter2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg2, 3 ]
pknob: set_controller: filter2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg3, 2 ]
pknob: set_controller: filter2_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe4
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_mix
REFRESH++
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.1 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ pan, 2 ]
pknob: set_controller: pan
REFRESH++
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5.1
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.1 ]
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 440 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
hehehe5.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ amp, 0 ]
pknob: set_controller: amp
REFRESH++
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.1 ]
hehehe6
class_masterfx_view: make_frame: 0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_masterfx_view: make_frame: 1
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_masterfx_view: make_frame: 5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg1, 2 ]
pknob: set_controller: fx1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg2, 2 ]
pknob: set_controller: fx1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg3, 2 ]
pknob: set_controller: fx1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg4, 2 ]
pknob: set_controller: fx1_arg4
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_center_frame_view.new: 0
class_center_frame_view.new: 1
class_center_frame_view.new: 2
class_center_frame_view.new: 3
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_vel
REFRESH++
REFRESH++
pknob set_property: [ label, Vel ]
pknob set_property: [ value, 0.5 ]
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_ktr
REFRESH++
REFRESH++
pknob set_property: [ label, KTR ]
pknob set_property: [ value, 0.5 ]
new class_dadsr_env_view: 0
class_dadsr_env_view: makectrl: get_val: [ delay_time, 0 ]
class_dadsr_env_view: makectrl: get_val: [ attack_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ attack_level, 1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_level, 0.8 ]
class_dadsr_env_view: makectrl: get_val: [ release_time, 0.1 ]
end new class_dadsr_env_view: 0
class_env_edit_view: making env knob: [ delay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Delay, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0.0001, 1, 'exp', 0, 0.3, " secs"), 'kind': knob, 'numslot': 1, 'uname': env1_delay_time )), (bus -> Bus(control, 128, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_delay_time, 1 ]
pknob: set_controller: env1_delay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
pknob set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
pknob set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ attack_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Attack Time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_time )), (bus -> Bus(control, 129, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_time, 1 ]
pknob: set_controller: env1_attack_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
pknob set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ attack_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Attack level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_level )), (bus -> Bus(control, 130, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_level, 1 ]
pknob: set_controller: env1_attack_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
pknob set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
pknob set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ decay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Decay time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_time )), (bus -> Bus(control, 131, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_time, 1 ]
pknob: set_controller: env1_decay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ decay_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.89442719099992, 'name': Decay level, 'transmit': bus, 'val': 0.8, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_level )), (bus -> Bus(control, 132, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_level, 1 ]
pknob: set_controller: env1_decay_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
pknob set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
pknob set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Sustain loop, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_time )), (bus -> Bus(control, 133, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_time, 1 ]
pknob: set_controller: env1_sustain_time
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain loop ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Sustain level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_level )), (bus -> Bus(control, 134, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_level, 1 ]
pknob: set_controller: env1_sustain_level
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain level ]
pknob set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ release_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Release, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_release_time )), (bus -> Bus(control, 135, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_release_time, 1 ]
pknob: set_controller: env1_release_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
pknob set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_center_frame_view.new: fin
hehehe7
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg1, 2 ]
pknob: set_controller: insert1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg2, 2 ]
pknob: set_controller: insert1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg1, 2 ]
pknob: set_controller: insert2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg2, 2 ]
pknob: set_controller: insert2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
MACRO
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
hehehe8
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************************************************************done
********************************************************************done
done
done
done
done
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
soul2
done
done
done
done
done
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
soul2

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /g_new Group 1 not found
FAILURE /s_new Group 1000 not found
FAILURE /s_new Node 1000 not found
********************* releasing synth
FAILURE /n_set Node 1001 not found
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /g_new Group 1 not found
FAILURE /s_new Group 1003 not found
FAILURE /n_set Node 1002 not found
FAILURE /s_new Node 1003 not found
class_pparam_controller.set_property: [ value, 0.35544345229135, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.35544345229135 ]
class_pparam_controller.set_property: [ value, 0.36524737385998, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.36524737385998 ]
class_pparam_controller.set_property: [ value, 0.3750512954286, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.3750512954286 ]
class_pparam_controller.set_property: [ value, 0.38485521699723, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.38485521699723 ]
class_pparam_controller.set_property: [ value, 0.39622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.39622776601684 ]
class_pparam_controller.set_property: [ value, 0.40622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.40622776601684 ]
class_pparam_controller.set_property: [ value, 0.41622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.41622776601684 ]
class_pparam_controller.set_property: [ value, 0.42622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.42622776601684 ]
class_pparam_controller.set_property: [ value, 0.43622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.43622776601684 ]
class_pparam_controller.set_property: [ value, 0.45622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.45622776601684 ]
class_pparam_controller.set_property: [ value, 0.46328658954625, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.46328658954625 ]
class_pparam_controller.set_property: [ value, 0.47007391986299, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.47007391986299 ]
class_pparam_controller.set_property: [ value, 0.48603908677155, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.48603908677155 ]
class_pparam_controller.set_property: [ value, 0.49547304903571, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.49547304903571 ]
class_pparam_controller.set_property: [ value, 0.50490701129986, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.50490701129986 ]
class_pparam_controller.set_property: [ value, 0.51434097356401, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.51434097356401 ]
class_pparam_controller.set_property: [ value, 0.51993146972054, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.51993146972054 ]
class_pparam_controller.set_property: [ value, 0.53844998823906, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.53844998823906 ]
class_pparam_controller.set_property: [ value, 0.54770924749832, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.54770924749832 ]
class_pparam_controller.set_property: [ value, 0.55259140238047, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.55259140238047 ]
class_pparam_controller.set_property: [ value, 0.56168231147138, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.56168231147138 ]
class_pparam_controller.set_property: [ value, 0.5798641296532, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.5798641296532 ]
class_pparam_controller.set_property: [ value, 0.58895503874411, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.58895503874411 ]
class_pparam_controller.set_property: [ value, 0.60194205173112, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.60194205173112 ]
class_pparam_controller.set_property: [ value, 0.60570145022736, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.60570145022736 ]
class_pparam_controller.set_property: [ value, 0.6093312142927, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.6093312142927 ]
class_pparam_controller.set_property: [ value, 0.62131251177955, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.62131251177955 ]
class_pparam_controller.set_property: [ value, 0.62978708805074, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.62978708805074 ]
class_pparam_controller.set_property: [ value, 0.67913099182329, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.67913099182329 ]
class_pparam_controller.set_property: [ value, 0.6813071310962, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.6813071310962 ]
class_pparam_controller.set_property: [ value, 0.68924363903271, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.68924363903271 ]
class_pparam_controller.set_property: [ value, 0.70511665490573, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.70511665490573 ]
class_pparam_controller.set_property: [ value, 0.71305316284223, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.71305316284223 ]
class_pparam_controller.set_property: [ value, 0.73029026601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.73029026601684 ]
class_pparam_controller.set_property: [ value, 0.73810276601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.73810276601684 ]
class_pparam_controller.set_property: [ value, 0.73930468909376, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.73930468909376 ]
class_pparam_controller.set_property: [ value, 0.74047019025926, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.74047019025926 ]
class_pparam_controller.set_property: [ value, 0.7416009003452, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7416009003452 ]
class_pparam_controller.set_property: [ value, 0.75740423660507, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.75740423660507 ]
class_pparam_controller.set_property: [ value, 0.75825675152408, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.75825675152408 ]
class_pparam_controller.set_property: [ value, 0.76550312833568, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.76550312833568 ]
class_pparam_controller.set_property: [ value, 0.76622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.76622776601684 ]
class_pparam_controller.set_property: [ value, 0.7733706231597, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7733706231597 ]
class_pparam_controller.set_property: [ value, 0.77456109935017, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.77456109935017 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.77513187560588, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.77513187560588 ]
class_pparam_controller.set_property: [ value, 0.78883050574287, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.78883050574287 ]
FAILURE /n_set Node 1004 not found
class_pparam_controller.set_property: [ value, 0.79567982081136, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.79567982081136 ]
class_pparam_controller.set_property: [ value, 0.80252913587985, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.80252913587985 ]
class_pparam_controller.set_property: [ value, 0.80937845094834, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.80937845094834 ]
class_pparam_controller.set_property: [ value, 0.82307708108533, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82307708108533 ]
class_pparam_controller.set_property: [ value, 0.82298452277359, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82298452277359 ]
class_pparam_controller.set_property: [ value, 0.8228944326835, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.8228944326835 ]
class_pparam_controller.set_property: [ value, 0.82956109935017, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82956109935017 ]
class_pparam_controller.set_property: [ value, 0.84220179199086, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.84220179199086 ]
class_pparam_controller.set_property: [ value, 0.84186879165786, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.84186879165786 ]
class_pparam_controller.set_property: [ value, 0.85468930447838, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.85468930447838 ]
class_pparam_controller.set_property: [ value, 0.86053156348519, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.86053156348519 ]
class_pparam_controller.set_property: [ value, 0.86622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.86622776601684 ]
class_pparam_controller.set_property: [ value, 0.87247776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87247776601684 ]
class_pparam_controller.set_property: [ value, 0.87110581479733, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87110581479733 ]
class_pparam_controller.set_property: [ value, 0.87044463348672, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87044463348672 ]
class_pparam_controller.set_property: [ value, 0.8824928262578, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.8824928262578 ]
class_pparam_controller.set_property: [ value, 0.88851692264334, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.88851692264334 ]
class_pparam_controller.set_property: [ value, 0.89454101902889, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.89454101902889 ]
class_pparam_controller.set_property: [ value, 0.90056511541443, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.90056511541443 ]
class_pparam_controller.set_property: [ value, 0.89956109935017, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.89956109935017 ]
class_pparam_controller.set_property: [ value, 0.90551348030255, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.90551348030255 ]
class_pparam_controller.set_property: [ value, 0.91146586125493, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.91146586125493 ]
class_pparam_controller.set_property: [ value, 0.91741824220731, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.91741824220731 ]
class_pparam_controller.set_property: [ value, 0.92211011895801, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.92211011895801 ]
class_pparam_controller.set_property: [ value, 0.92799247189919, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.92799247189919 ]
class_pparam_controller.set_property: [ value, 0.92542316831569, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.92542316831569 ]
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /g_new Group 1 not found
FAILURE /s_new Group 1006 not found
FAILURE /n_set Node 1005 not found
FAILURE /s_new Node 1006 not found
********************* releasing synth
FAILURE /n_set Node 1007 not found
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /g_new Group 1 not found
FAILURE /s_new Group 1009 not found
FAILURE /n_set Node 1008 not found
FAILURE /s_new Node 1009 not found
********************* releasing synth
FAILURE /n_set Node 1010 not found
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /g_new Group 1 not found
FAILURE /s_new Group 1012 not found
FAILURE /n_set Node 1011 not found
FAILURE /s_new Node 1012 not found

a Main

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /n_set Node 1014 not found
********************* releasing synth
###########----- making note
########### making group
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making group
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making group
########### making synth
########### making fx
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.96542316831569, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.96542316831569 ]
class_pparam_controller.set_property: [ value, 0.97542316831569, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.97542316831569 ]
class_pparam_controller.set_property: [ value, 0.99542316831569, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.99542316831569 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
###########----- making note
########### making group
########### making synth
########### making fx
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.999 ]
********************* releasing synth
###########----- making note
########### making group
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making group
########### making synth
########### making fx

a Main

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /n_set Node 1020 not found
********************* releasing synth
###########----- making note
########### making group
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making group
########### making synth
########### making fx

a Main

a Main

a Main

server already running
localhost

/quit sent

localhost
Jack: JackClient::Deactivate
Jack: JackClient::Deactivate res = 0
Jack: JackPosixThread::Kill
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: jack_client_close
Jack: JackClient::Close ref = 5
Jack: JackClient::Deactivate
Jack: JackSocketClientChannel::Stop
Jack: JackPosixThread::Kill
Jack: JackClientSocket::Close
Jack: JackClientSocket::Close
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_SuperCollider
Jack: JackLibClient::~JackLibClient
Jack: JackShmReadWritePtr1::~JackShmReadWritePtr1 4
Jack: Succeeded in unlocking 377 byte memory area
Jack: JackLibGlobals Destroy 9bde540
Jack: ~JackLibGlobals
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_system
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_freewheel
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_dbusapi
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_PulseAudio JACK Sink
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_PulseAudio JACK Source
Jack: JackPosixSemaphore::Disconnect name = jack_sem.1000_default_qjackctl
Jack: no message buffer overruns
Jack: JackPosixThread::Stop
Jack: ThreadHandler: exit
Jack: JackShmReadWritePtr::~JackShmReadWritePtr 1
Jack: Succeeded in unlocking 994 byte memory area
Jack: JackShmReadWritePtr::~JackShmReadWritePtr 0
Jack: Succeeded in unlocking 82241434 byte memory area
Jack: jack_client_close res = 0
RESULT = 0

booting 57110
localhost
Found 212 LADSPA plugins
Jack: JackClient::SetupDriverSync driver sem in normal mode
Jack: JackPosixSemaphore::Connect name = jack_sem.1000_default_SuperCollider
Jack: JackPosixSemaphore::Connect sem_getvalue 0
Jack: Clock source : system clock via clock_gettime
Jack: JackLibClient::Open name = SuperCollider refnum = 5
JackDriver: client name is 'SuperCollider'
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_1 type = 32 bit float mono audio port_index = 23
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_2 type = 32 bit float mono audio port_index = 24
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_3 type = 32 bit float mono audio port_index = 25
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_4 type = 32 bit float mono audio port_index = 26
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_5 type = 32 bit float mono audio port_index = 27
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_6 type = 32 bit float mono audio port_index = 28
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_7 type = 32 bit float mono audio port_index = 29
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_8 type = 32 bit float mono audio port_index = 30
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_1 type = 32 bit float mono audio port_index = 31
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_2 type = 32 bit float mono audio port_index = 32
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_3 type = 32 bit float mono audio port_index = 33
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_4 type = 32 bit float mono audio port_index = 34
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_5 type = 32 bit float mono audio port_index = 35
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_6 type = 32 bit float mono audio port_index = 36
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_7 type = 32 bit float mono audio port_index = 37
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_8 type = 32 bit float mono audio port_index = 38
Jack: jack_set_graph_order_callback ext_client a2d7f00 client a2d7f00 
SC_AudioDriver: sample rate = 44100,000000, driver's block size = 1024
Jack: JackClient::Activate
Jack: JackClient::StartThread : period = 23219 computation = 100 constraint = 23219
Jack: Create non RT thread
Jack: ThreadHandler: start
Jack: JackClient::kBufferSizeCallback buffer_size = 1024
Jack: JackPosixThread::AcquireRealTimeImp priority = 5
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 2
Jack: JackClient::kActivateClient name = SuperCollider ref = 5 
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: WaitGraphChange...
Jack: JackClient::Connect src = system:capture_1 dst = SuperCollider:in_1
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 0
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 0
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
JackDriver: connected  system:capture_1 to SuperCollider:in_1
Jack: JackClient::Connect src = system:capture_2 dst = SuperCollider:in_2
JackDriver: connected  system:capture_2 to SuperCollider:in_2
Jack: JackClient::Connect src = system:midi_capture_1 dst = SuperCollider:in_3
JackDriver: couldn't connect  system:midi_capture_1 to SuperCollider:in_3
Jack: JackClient::Connect src = SuperCollider:out_1 dst = system:playback_1
JackDriver: connected  SuperCollider:out_1 to system:playback_1
Jack: JackClient::Connect src = SuperCollider:out_2 dst = system:playback_2
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 0
JackDriver: max output latency 23,2 ms
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
JackDriver: connected  SuperCollider:out_2 to system:playback_2
Jack: JackClient::Connect src = SuperCollider:out_3 dst = system:playback_3
JackDriver: connected  SuperCollider:out_3 to system:playback_3
Jack: JackClient::Connect src = SuperCollider:out_4 dst = system:playback_4
JackDriver: connected  SuperCollider:out_4 to system:playback_4
Jack: JackClient::Connect src = SuperCollider:out_5 dst = system:playback_5
JackDriver: connected  SuperCollider:out_5 to system:playback_5
Jack: JackClient::Connect src = SuperCollider:out_6 dst = system:playback_6
JackDriver: connected  SuperCollider:out_6 to system:playback_6
Jack: JackClient::Connect src = SuperCollider:out_7 dst = system:playback_7
JackDriver: connected  SuperCollider:out_7 to system:playback_7
Jack: JackClient::Connect src = SuperCollider:out_8 dst = system:playback_8
JackDriver: connected  SuperCollider:out_8 to system:playback_8
SuperCollider 3 server ready (debug build).
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 1024
JackDriver: max output latency 23,2 ms
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
Receiving notification messages from server localhost
Shared memory server interface initialized

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /n_set Node 1008 not found
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.95978431372549, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.95978431372549 ]
class_pparam_controller.set_property: [ value, 0.94998039215686, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.94998039215686 ]
class_pparam_controller.set_property: [ value, 0.91246153846154, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.91246153846154 ]
class_pparam_controller.set_property: [ value, 0.90466037735849, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.90466037735849 ]
class_pparam_controller.set_property: [ value, 0.87862962962963, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87862962962963 ]
class_pparam_controller.set_property: [ value, 0.86011111111111, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.86011111111111 ]
class_pparam_controller.set_property: [ value, 0.85085185185185, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.85085185185185 ]
class_pparam_controller.set_property: [ value, 0.83233333333333, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.83233333333333 ]
class_pparam_controller.set_property: [ value, 0.82307407407407, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82307407407407 ]
class_pparam_controller.set_property: [ value, 0.81718181818182, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.81718181818182 ]
class_pparam_controller.set_property: [ value, 0.80809090909091, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.80809090909091 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.78081818181818, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.78081818181818 ]
class_pparam_controller.set_property: [ value, 0.77172727272727, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.77172727272727 ]
class_pparam_controller.set_property: [ value, 0.749, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.749 ]
class_pparam_controller.set_property: [ value, 0.67757142857143, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.67757142857143 ]
class_pparam_controller.set_property: [ value, 0.58828571428571, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.58828571428571 ]
class_pparam_controller.set_property: [ value, 0.5615, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.5615 ]
class_pparam_controller.set_property: [ value, 0.52578571428571, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.52578571428571 ]
class_pparam_controller.set_property: [ value, 0.51685714285714, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.51685714285714 ]
class_pparam_controller.set_property: [ value, 0.48175862068966, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.48175862068966 ]
class_pparam_controller.set_property: [ value, 0.44727586206897, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.44727586206897 ]
class_pparam_controller.set_property: [ value, 0.4041724137931, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.4041724137931 ]
class_pparam_controller.set_property: [ value, 0.39555172413793, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.39555172413793 ]
class_pparam_controller.set_property: [ value, 0.36968965517241, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.36968965517241 ]
class_pparam_controller.set_property: [ value, 0.35244827586207, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.35244827586207 ]
class_pparam_controller.set_property: [ value, 0.30934482758621, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.30934482758621 ]
class_pparam_controller.set_property: [ value, 0.30072413793103, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.30072413793103 ]
class_pparam_controller.set_property: [ value, 0.26624137931034, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.26624137931034 ]
class_pparam_controller.set_property: [ value, 0.23175862068966, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.23175862068966 ]
class_pparam_controller.set_property: [ value, 0.17141379310345, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.17141379310345 ]
class_pparam_controller.set_property: [ value, 0.11106896551724, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.11106896551724 ]
class_pparam_controller.set_property: [ value, 0.067965517241379, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.067965517241379 ]
class_pparam_controller.set_property: [ value, 0.050724137931034, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.050724137931034 ]
class_pparam_controller.set_property: [ value, 0.0076206896551724, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.0076206896551724 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0 ]
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth

a Main
WARNING: Deprecated support directory detected: /home/ggz/share/SuperCollider
Extensions and other contents in this directory will not be available until you move them to the new support directory:
/home/ggz/.local/share/SuperCollider
Quarks will need to be reinstalled due to broken symbolic links.

init_OSC
empty
compiling class library (debug build)...
	NumPrimitives = 663
	compiling dir: '/usr/local/share/SuperCollider/SCClassLibrary'
	compiling dir: '/usr/local/share/SuperCollider/Extensions'
	compiling dir: '/home/ggz/.local/share/SuperCollider/Extensions'
	pass 1 done
	numentries = 2386696 / 57420866 = 0.042
	10757 method selectors, 5338 classes
	method table size 25673368 bytes, big table size 229683464
	Number of Symbols 27310
	Byte Code Size 1205561
	compiled 1240 files in 1.25 seconds

Info: 18 methods are currently overwritten by extensions. To see which, execute:
MethodOverride.printAll

compile done
LID: event loop started
Help tree read from cache in 0.028109073638916 seconds
Class tree inited in 0.08 seconds
WARNING:
Deprecated startup file found: ~/.sclang.sc

Please use /home/ggz/.config/SuperCollider/startup.scd as startup file.
Deprecated startup files will be ignored in future versions.

Loaded 13 chucklib files from /home/ggz/.local/share/SuperCollider/Extensions/quarks/dewdrop_lib/ddwChucklib/Prototypes/.
RESULT = 0
Welcome to SuperCollider 3.5.1, type :SChelp for help
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/debug.sc' overwrites Ptrace:embedInStream in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/debug.sc' overwrites Object:debug in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/debug.sc' overwrites RawArray:debug in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/debug.sc' overwrites Collection:debug in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/autogui/Classes/synthDefStorageExt.sc' overwrites SynthDef:build in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/autogui/Classes/ArrayWarp.sc' overwrites ControlSpec:constrain in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/autogui/Classes/ArrayWarp.sc' overwrites ControlSpec:map in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/Conductor/classes/CV/ConnectCVToNodes.sc' overwrites Bus:free in main class library.
WARNING:
Extension in '/home/ggz/.local/share/SuperCollider/Extensions/quarks/Conductor/classes/extNodeProxy.sc' overwrites NodeProxy:set in main class library.

Intentional overwrites must be put in a 'SystemOverwrites' subfolder.
SwingOSC : server connected.
SwingOSC server already running

pipe-in: EOF. Will quit.
pipe-in: stopped.
main: waiting for input thread to join...
main: quitting...
/quit sent

LID: event loop stopped
booting 57110
localhost
empty
cleaning up OSC
Found 212 LADSPA plugins
Jack: JackClient::SetupDriverSync driver sem in normal mode
Jack: JackPosixSemaphore::Connect name = jack_sem.1000_default_SuperCollider
Jack: JackPosixSemaphore::Connect sem_getvalue 0
Jack: Clock source : system clock via clock_gettime
Jack: JackLibClient::Open name = SuperCollider refnum = 5
JackDriver: client name is 'SuperCollider'
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_1 type = 32 bit float mono audio port_index = 23
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_2 type = 32 bit float mono audio port_index = 24
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_3 type = 32 bit float mono audio port_index = 25
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_4 type = 32 bit float mono audio port_index = 26
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_5 type = 32 bit float mono audio port_index = 27
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_6 type = 32 bit float mono audio port_index = 28
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_7 type = 32 bit float mono audio port_index = 29
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:in_8 type = 32 bit float mono audio port_index = 30
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_1 type = 32 bit float mono audio port_index = 31
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_2 type = 32 bit float mono audio port_index = 32
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_3 type = 32 bit float mono audio port_index = 33
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_4 type = 32 bit float mono audio port_index = 34
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_5 type = 32 bit float mono audio port_index = 35
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_6 type = 32 bit float mono audio port_index = 36
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_7 type = 32 bit float mono audio port_index = 37
Jack: JackClient::PortRegister ref = 5 name = SuperCollider:out_8 type = 32 bit float mono audio port_index = 38
Jack: jack_set_graph_order_callback ext_client a050f00 client a050f00 
SC_AudioDriver: sample rate = 44100,000000, driver's block size = 1024
Jack: JackClient::Activate
Jack: JackClient::StartThread : period = 23219 computation = 100 constraint = 23219
Jack: Create non RT thread
Jack: ThreadHandler: start
Jack: JackClient::kBufferSizeCallback buffer_size = 1024
Jack: JackPosixThread::AcquireRealTimeImp priority = 5
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 2
Jack: JackClient::kActivateClient name = SuperCollider ref = 5 
Jack: JackClient::Connect src = system:capture_1 dst = SuperCollider:in_1
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: WaitGraphChange...
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 0
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
JackDriver: connected  system:capture_1 to SuperCollider:in_1
Jack: JackClient::Connect src = system:capture_2 dst = SuperCollider:in_2
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: WaitGraphChange...
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 0
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 0
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 0
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
JackDriver: connected  system:capture_2 to SuperCollider:in_2
Jack: JackClient::Connect src = system:midi_capture_1 dst = SuperCollider:in_3
JackDriver: couldn't connect  system:midi_capture_1 to SuperCollider:in_3
Jack: JackClient::Connect src = SuperCollider:out_1 dst = system:playback_1
JackDriver: connected  SuperCollider:out_1 to system:playback_1
Jack: JackClient::Connect src = SuperCollider:out_2 dst = system:playback_2
JackDriver: connected  SuperCollider:out_2 to system:playback_2
Jack: JackClient::Connect src = SuperCollider:out_3 dst = system:playback_3
JackDriver: connected  SuperCollider:out_3 to system:playback_3
Jack: JackClient::Connect src = SuperCollider:out_4 dst = system:playback_4
JackDriver: connected  SuperCollider:out_4 to system:playback_4
Jack: JackClient::Connect src = SuperCollider:out_5 dst = system:playback_5
JackDriver: connected  SuperCollider:out_5 to system:playback_5
Jack: JackClient::Connect src = SuperCollider:out_6 dst = system:playback_6
JackDriver: connected  SuperCollider:out_6 to system:playback_6
Jack: JackClient::Connect src = SuperCollider:out_7 dst = system:playback_7
JackDriver: connected  SuperCollider:out_7 to system:playback_7
Jack: JackClient::Connect src = SuperCollider:out_8 dst = system:playback_8
JackDriver: connected  SuperCollider:out_8 to system:playback_8
SuperCollider 3 server ready (debug build).
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 4
Jack: JackClient::kGraphOrderCallback
Jack: JackGraphManager::GetTotalLatency port_index = 31 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 32 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 33 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 34 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 35 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 36 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 37 total latency = 1024
Jack: JackGraphManager::GetTotalLatency port_index = 38 total latency = 1024
JackDriver: max output latency 23,2 ms
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 23
Jack: JackGraphManager::RecalculateLatency port_index = 24
Jack: JackGraphManager::RecalculateLatency port_index = 25
Jack: JackGraphManager::RecalculateLatency port_index = 26
Jack: JackGraphManager::RecalculateLatency port_index = 27
Jack: JackGraphManager::RecalculateLatency port_index = 28
Jack: JackGraphManager::RecalculateLatency port_index = 29
Jack: JackGraphManager::RecalculateLatency port_index = 30
Jack: JackClient::ClientNotify ref = 5 name = SuperCollider notify = 18
Jack: JackGraphManager::RecalculateLatency port_index = 31
Jack: JackGraphManager::RecalculateLatency port_index = 32
Jack: JackGraphManager::RecalculateLatency port_index = 33
Jack: JackGraphManager::RecalculateLatency port_index = 34
Jack: JackGraphManager::RecalculateLatency port_index = 35
Jack: JackGraphManager::RecalculateLatency port_index = 36
Jack: JackGraphManager::RecalculateLatency port_index = 37
Jack: JackGraphManager::RecalculateLatency port_index = 38
Receiving notification messages from server localhost
Cannot connect to shared memory: Aucun fichier ou dossier de ce type
ERROR: Primitive '_ServerShmInterface_connectSharedMem' failed.
Failed.
RECEIVER:
Instance of ServerShmInterface {    (0xada7830, gc=F8, fmt=00, flg=00, set=03)
  instance variables [2]
    ptr : nil
    finalizer : nil
}

PROTECTED CALL STACK:
	Meta_MethodError:new	0xa4bb560
		arg this = PrimitiveFailedError
		arg what = Failed.
		arg receiver = a ServerShmInterface
	Meta_PrimitiveFailedError:new	0xa4bdf60
		arg this = PrimitiveFailedError
		arg receiver = a ServerShmInterface
	Object:primitiveFailed	0x86f31a0
		arg this = a ServerShmInterface
	a FunctionDef	0x9c50c20
		sourceCode = "<an open Function>"
	Routine:prStart	0x9415a20
		arg this = a Routine
		arg inval = 1353040821.7364

CALL STACK:
	MethodError:reportError   0xada6930
		arg this = <instance of PrimitiveFailedError>
	< closed FunctionDef >   0xada6990
		arg error = <instance of PrimitiveFailedError>
	Integer:forBy   0xabfdb70
		arg this = 0
		arg endval = 0
		arg stepval = 2
		arg function = <instance of Function>
		var i = 0
		var j = 0
	SequenceableCollection:pairsDo   0xada7f50
		arg this = [*2]
		arg function = <instance of Function>
	Scheduler:seconds_   0xada8010
		arg this = <instance of Scheduler>
		arg newSeconds = 1353040822.5578
	Meta_AppClock:tick   0xada80d0
		arg this = <instance of Meta_AppClock>
		var saveClock = <instance of Meta_SystemClock>
	Process:tick   0xada8130
		arg this = <instance of Main>
For advice: [http://supercollider.sf.net/wiki/index.php/PrimitiveFailedError]

ERROR: Message 'make_gui' not understood.
RECEIVER:
   nil
ARGS:
CALL STACK:
	DoesNotUnderstandError:reportError   0xad63f70
		arg this = <instance of DoesNotUnderstandError>
	Nil:handleError   0xad64030
		arg this = nil
		arg error = <instance of DoesNotUnderstandError>
	Thread:handleError   0xad64090
		arg this = <instance of Thread>
		arg error = <instance of DoesNotUnderstandError>
	Object:throw   0xad640f0
		arg this = <instance of DoesNotUnderstandError>
	Object:doesNotUnderstand   0xad64270
		arg this = nil
		arg selector = 'make_gui'
		arg args = [*0]
	< closed FunctionDef >  (no arguments or variables)
	Interpreter:interpretPrintCmdLine   0x87138f0
		arg this = <instance of Interpreter>
		var res = nil
		var func = <instance of Function>
		var code = "
(
~load_passive.();
~new_pa..."
		var doc = nil
	Process:interpretPrintCmdLine   0xad64ed0
		arg this = <instance of Main>
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#make_gui]

a Function

loading synth.sc
loading ui.sc
loading control.sc
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
class_pparam_kind_controller: ( 'bank': noise, 'uname': noise_kind, 'kind': kind, 'name': Noise )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': white, 'specs': [ freq ], 'name': White noise, 'args': [ Cutoff ] ), ( 'uname': pink, 'specs': [ freq ], 'name': Pink noise, 'args': [ Cutoff ] ), ( 'uname': brown, 'specs': [ freq ], 'name': Brown noise, 'args': [ Cutoff ] ) ]
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert2_arg1, insert2_arg2 ], 'name': insert kind, 'uname': insert2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator3_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx2_arg1, fx2_arg2, fx2_arg3, fx2_arg4 ], 'name': fx kind, 'uname': fx2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
class_pparam_kind_controller: ( 'name': Mod routing matrix, 'uname': modosc_matrix, 'kind': matrix )
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator1_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
class_pparam_kind_controller: ( 'name': Global presets, 'uname': presets_global, 'kind': preset )
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
class_pparam_kind_controller: ( 'bank': fx, 'knobs': [ fx1_arg1, fx1_arg2, fx1_arg3, fx1_arg4 ], 'name': fx kind, 'uname': fx1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': reverb, 'specs': [ unipolar, unipolar, unipolar ], 'name': Reverb, 'args': [ Mix, Room, Damp ] ), ( 'uname': flanger, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Flanger, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': chorus, 'specs': [ unipolar, widefreq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Chorus, 'args': [ Mix, Rate, Offset, Depth ] ), ( 'uname': phaser, 'specs': [ unipolar, widefreq, unipolar, a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Phaser, 'args': [ Mix, Rate, Feedback, Depth ] ), ( 'uname': delay, 'specs': [ unipolar, freq, a ControlSpec(0, 0.02, 'linear', 0, 0.001, ""), a ControlSpec(0, 0.02, 'linear', 0, 0.001, "") ], 'name': Delay, 'args': [ Mix, Damp, Delay left, Delay right ] ) ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator4_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
class_pparam_kind_controller: ( 'bank': insert, 'knobs': [ insert1_arg1, insert1_arg2 ], 'name': insert kind, 'uname': insert1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': freqshift, 'specs': [ unipolar, freq ], 'name': Freqshift, 'args': [ Wet/Dry, Shift ] ), ( 'uname': simpledelay, 'specs': [ unipolar, delay ], 'name': Delay, 'args': [ Wet/Dry, Delay ] ), ( 'uname': samplehold, 'specs': [ unipolar, widefreq ], 'name': Hold, 'args': [ Wet/Dry, Pitch ] ), ( 'uname': bitcrusher, 'specs': [ unipolar, a ControlSpec(1, 31, 'linear', 1, 1, "") ], 'name': Bitcrusher, 'args': [ Wet/Dry, Crush ] ), ( 'uname': simplefilter, 'specs': [ freq, freq ], 'name': Filter, 'args': [ HP freq, LP freq ] ), ( 'uname': sinshaper, 'specs': [ unipolar, unipolar ], 'name': SineShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': parashaper, 'specs': [ unipolar, unipolar ], 'name': ParaShaper, 'args': [ Wet/Dry, Drive ] ), ( 'uname': hardclipper, 'specs': [ unipolar, unipolar ], 'name': Hard clipper, 'args': [ Wet/Dry, Drive ] ) ]
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter2_arg1, filter2_arg2, filter2_arg3 ], 'name': filter kind, 'uname': filter2_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
modulation_manager.set_external_value: [ [ macro, 0 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 2 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 4 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
modulation_manager.set_external_value: [ [ macro, 7 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
class_pparam_kind_controller: ( 'bank': modulator, 'uname': modulator2_kind, 'kind': kind, 'name': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'name': LFO, 'uname': lfo ), ( 'name': Performer, 'uname': performer ), ( 'name': Stepper, 'uname': stepper ) ]
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
class_pparam_kind_controller: ( 'name': Ins1, 'uname': routing_insert1, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert1, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Ins2, 'uname': routing_insert2, 'bank': routing_insert, 'kind': kind, 
  'routing_name': insert2, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before filter 1, 'uname': before_filter1 ), ( 'name': Before filter 2, 'uname': before_filter2 ), ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': In feedback, 'uname': in_feedback ) ]
class_pparam_kind_controller: ( 'name': Feedback, 'uname': routing_feedback, 'bank': routing_feedback, 'kind': kind, 
  'routing_name': feedback, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': After filter 1, 'uname': after_filter1 ), ( 'name': After filter 2, 'uname': after_filter2 ), ( 'name': Between filters, 'uname': between_filters ), ( 'name': Before pan, 'uname': before_pan ), ( 'name': After pan, 'uname': after_pan ) ]
class_pparam_kind_controller: ( 'name': Bypass source, 'uname': routing_bypass_osc, 'bank': routing_bypass_osc, 'kind': kind, 
  'routing_name': bypass_osc, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': No bypass, 'uname': off ), ( 'name': Osc 1, 'uname': osc1 ), ( 'name': Osc 2, 'uname': osc2 ), ( 'name': Osc 3, 'uname': osc3 ) ]
class_pparam_kind_controller: ( 'name': Bypass destination, 'uname': routing_bypass_dest, 'bank': routing_bypass_dest, 'kind': kind, 
  'routing_name': bypass_dest, 'transmit': routing )
class_pparam_kind_controller: new: menu_items: [ ( 'name': Before Fx 1, 'uname': before_fx1 ), ( 'name': Before Fx 2, 'uname': before_fx2 ), ( 'name': Before Eq, 'uname': before_eq ) ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
class_pparam_kind_controller: ( 'bank': filter, 'knobs': [ filter1_arg1, filter1_arg2, filter1_arg3 ], 'name': filter kind, 'uname': filter1_kind, 
  'kind': kind )
class_pparam_kind_controller: new: menu_items: [ ( 'uname': lpf, 'specs': [ freq ], 'name': LPF, 'args': [ Cutoff ] ), ( 'uname': rlpf, 'specs': [ freq, rq ], 'name': RLPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': hpf, 'specs': [ freq ], 'name': HPF, 'args': [ Cutoff ] ), ( 'uname': rhpf, 'specs': [ freq, rq ], 'name': RHPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': bpf, 'specs': [ freq, rq ], 'name': BPF, 'args': [ Cutoff, Resonance ] ), ( 'uname': comb, 'specs': [ delay, delay, decay ], 'name': Comb, 'args': [ Max Delay, Delay, Decay ] ) ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
hehehe1
hehehe1.1
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc1_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_pitch, 2 ]
pknob: set_controller: osc1_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc1_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_wt_pos, 3 ]
pknob: set_controller: osc1_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_intensity, 3 ]
pknob: set_controller: osc1_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc1_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc1_amp, 2 ]
pknob: set_controller: osc1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc2_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_pitch, 2 ]
pknob: set_controller: osc2_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc2_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_wt_pos, 3 ]
pknob: set_controller: osc2_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_intensity, 3 ]
pknob: set_controller: osc2_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc2_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc2_amp, 2 ]
pknob: set_controller: osc2_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ sin1, square1, saw1, custom ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: osc3_pitch
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_pitch, 2 ]
pknob: set_controller: osc3_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: osc3_wt_pos
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_wt_pos, 3 ]
pknob: set_controller: osc3_wt_pos
REFRESH++
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_intensity
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_intensity, 3 ]
pknob: set_controller: osc3_intensity
REFRESH++
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: osc3_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ osc3_amp, 2 ]
pknob: set_controller: osc3_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
SQUOIIII ce bordel0: a JSCHLayoutView
SQUOIIII ce bordel1: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_pitch, 2 ]
pknob: set_controller: modosc_pitch
REFRESH++
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel2: a JSCHLayoutView
HAHAH 1
HAHAH 2
------- uname, numslot: [ modosc_ring, 2 ]
pknob: set_controller: modosc_ring
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
SQUOIIII ce bordel3: a JSCHLayoutView
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
SQUOIIII ce bordel
SQUOIIII ce bordel4: a JSCHLayoutView
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe1.3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ White noise, Pink noise, Brown noise ]
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: noise_color
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_color, 2 ]
pknob: set_controller: noise_color
REFRESH++
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: noise_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ noise_amp, 2 ]
pknob: set_controller: noise_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe1.4
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
class_knobs_frame_view1
class_knobs_frame_view..: feedback_amp
HAHAH 1
HAHAH 2
------- uname, numslot: [ feedback_amp, 2 ]
pknob: set_controller: feedback_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe2
hehehe2.1
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_parseq
REFRESH++
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe2.2
hehehe3
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg1, 3 ]
pknob: set_controller: filter1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg2, 3 ]
pknob: set_controller: filter1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter1_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter1_arg3, 2 ]
pknob: set_controller: filter1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ LPF, RLPF, HPF, RHPF, BPF, Comb ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.1 ]
class_knobs_frame_view1
class_knobs_frame_view..: filter2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg1, 3 ]
pknob: set_controller: filter2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg2, 3 ]
pknob: set_controller: filter2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
class_knobs_frame_view..: filter2_arg3
HAHAH 1
HAHAH 2
------- uname, numslot: [ filter2_arg3, 2 ]
pknob: set_controller: filter2_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2569471063 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
hehehe4
******************* slider_size: Point( 50, 210 )
******************* vlayout_size: Point( 50, 260 )
soul
pknob: set_controller: filter_mix
REFRESH++
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.1 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ pan, 2 ]
pknob: set_controller: pan
REFRESH++
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
hehehe5.1
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.1 ]
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 440 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
hehehe5.2
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ amp, 0 ]
pknob: set_controller: amp
REFRESH++
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.1 ]
hehehe6
class_masterfx_view: make_frame: 0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_masterfx_view: make_frame: 1
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Reverb, Flanger, Chorus, Phaser, Delay ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_masterfx_view: make_frame: 5
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg1, 2 ]
pknob: set_controller: fx1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg2, 2 ]
pknob: set_controller: fx1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg3, 2 ]
pknob: set_controller: fx1_arg3
REFRESH++
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ fx1_arg4, 2 ]
pknob: set_controller: fx1_arg4
REFRESH++
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.44747422694074 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob: set_controller: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_center_frame_view.new: 0
class_center_frame_view.new: 1
class_center_frame_view.new: 2
class_center_frame_view.new: 3
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_vel
REFRESH++
REFRESH++
pknob set_property: [ label, Vel ]
pknob set_property: [ value, 0.5 ]
******************* slider_size: Point( 50, 70 )
******************* vlayout_size: Point( 50, 120 )
soul
pknob: set_controller: env1_ktr
REFRESH++
REFRESH++
pknob set_property: [ label, KTR ]
pknob set_property: [ value, 0.5 ]
new class_dadsr_env_view: 0
class_dadsr_env_view: makectrl: get_val: [ delay_time, 0 ]
class_dadsr_env_view: makectrl: get_val: [ attack_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ attack_level, 1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_time, 0.1 ]
class_dadsr_env_view: makectrl: get_val: [ decay_level, 0.8 ]
class_dadsr_env_view: makectrl: get_val: [ release_time, 0.1 ]
end new class_dadsr_env_view: 0
class_env_edit_view: making env knob: [ delay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Delay, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0.0001, 1, 'exp', 0, 0.3, " secs"), 'kind': knob, 'numslot': 1, 'uname': env1_delay_time )), (bus -> Bus(control, 128, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_delay_time, 1 ]
pknob: set_controller: env1_delay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Delay ]
class_dadsr_env_view: set_property: [ label, Delay ]
end class_dadsr_env_view: set_property: [ label, Delay ]
pknob set_property: [ value, 0 ]
class_dadsr_env_view: set_property: [ value, 0 ]
class_dadsr_env_view: set_property: val_dict: [ env1_delay_time, delay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ attack_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Attack Time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_time )), (bus -> Bus(control, 129, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_time, 1 ]
pknob: set_controller: env1_attack_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Attack Time ]
class_dadsr_env_view: set_property: [ label, Attack Time ]
end class_dadsr_env_view: set_property: [ label, Attack Time ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_time, attack_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ attack_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Attack level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_attack_level )), (bus -> Bus(control, 130, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_attack_level, 1 ]
pknob: set_controller: env1_attack_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
class_dadsr_env_view: set_property: [ label, Attack level ]
end class_dadsr_env_view: set_property: [ label, Attack level ]
pknob set_property: [ label, Attack level ]
class_dadsr_env_view: set_property: [ value, 1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_attack_level, attack_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 1 ]
pknob set_property: [ value, 1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ decay_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Decay time, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_time )), (bus -> Bus(control, 131, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_time, 1 ]
pknob: set_controller: env1_decay_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Decay time ]
class_dadsr_env_view: set_property: [ label, Decay time ]
end class_dadsr_env_view: set_property: [ label, Decay time ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_time, decay_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ decay_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.89442719099992, 'name': Decay level, 'transmit': bus, 'val': 0.8, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_decay_level )), (bus -> Bus(control, 132, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_decay_level, 1 ]
pknob: set_controller: env1_decay_level
REFRESH++
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Decay level ]
class_dadsr_env_view: set_property: [ label, Decay level ]
end class_dadsr_env_view: set_property: [ label, Decay level ]
pknob set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: [ value, 0.8 ]
class_dadsr_env_view: set_property: val_dict: [ env1_decay_level, decay_level, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.8 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Sustain loop, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_time )), (bus -> Bus(control, 133, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_time, 1 ]
pknob: set_controller: env1_sustain_time
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain loop ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ sustain_level, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 1, 'name': Sustain level, 'transmit': bus, 'val': 1, 
  'spec': a ControlSpec(0, 1, 'amp', 0, 1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_sustain_level )), (bus -> Bus(control, 134, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_sustain_level, 1 ]
pknob: set_controller: env1_sustain_level
REFRESH++
REFRESH++
pknob set_property: [ label, Sustain level ]
pknob set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_env_edit_view: making env knob: [ release_time, 0 ]
class_env_edit_view: ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0.00625, 'name': Release, 'transmit': bus, 'val': 0.1, 
  'spec': a ControlSpec(0, 16, 'linear', 0, 0.1, ""), 'kind': knob, 'numslot': 1, 'uname': env1_release_time )), (bus -> Bus(control, 135, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
HAHAH 1
HAHAH 2
------- uname, numslot: [ env1_release_time, 1 ]
pknob: set_controller: env1_release_time
REFRESH++
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
REFRESH++
pknob set_property: [ label, Release ]
class_dadsr_env_view: set_property: [ label, Release ]
end class_dadsr_env_view: set_property: [ label, Release ]
pknob set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: [ value, 0.1 ]
class_dadsr_env_view: set_property: val_dict: [ env1_release_time, release_time, Dictionary[ (attack_time -> 0.1), (decay_level -> 0.8), (decay_time -> 0.1), (delay_time -> 0), (release_time -> 0.1), 
  (attack_level -> 1) ] ]
end class_dadsr_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
end class_dadsr_env_view: set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
end class_dadsr_env_view: set_property: [ modulation_source, [ 0 ] ]
class_center_frame_view.new: fin
hehehe7
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert1_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg1, 2 ]
pknob: set_controller: insert1_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert1_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert1_arg2, 2 ]
pknob: set_controller: insert1_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
class_knobs_frame_view0
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
-----------controller.get_menu_items_names: [ Freqshift, Delay, Hold, Bitcrusher, Filter, SineShaper, ParaShaper, Hard clipper ]
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
class_knobs_frame_view1
class_knobs_frame_view..: insert2_arg1
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg1, 2 ]
pknob: set_controller: insert2_arg1
REFRESH++
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view..: insert2_arg2
HAHAH 1
HAHAH 2
------- uname, numslot: [ insert2_arg2, 2 ]
pknob: set_controller: insert2_arg2
REFRESH++
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
class_knobs_frame_view2
MACRO
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros ddd: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
RET: ( 'knob': a JSCKnob )
macros eee: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
hehehe8
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************************************************************done
********************************************************************done
done
done
done
done
done
done
done
done
done
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
210, 190, 10, 200, 95, 105
210, 190, 10, 200, 95, 105
soul2
soul2
done
done
done
done
done
done
done
done
done
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
soul2

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /g_new Group 1 not found
FAILURE /s_new Group 1000 not found
FAILURE /s_new Node 1000 not found
********************* releasing synth
FAILURE /n_set Node 1001 not found
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /g_new Group 1 not found
FAILURE /s_new Group 1003 not found
FAILURE /n_set Node 1002 not found
FAILURE /s_new Node 1003 not found
********************* releasing synth
FAILURE /n_set Node 1004 not found
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /g_new Group 1 not found
FAILURE /s_new Group 1006 not found
FAILURE /n_set Node 1005 not found
FAILURE /s_new Node 1006 not found

a Main

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /n_set Node 1008 not found
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.3254870252761, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.3254870252761 ]
class_pparam_controller.set_property: [ value, 0.33474628453536, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.33474628453536 ]
class_pparam_controller.set_property: [ value, 0.35259140238047, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.35259140238047 ]
class_pparam_controller.set_property: [ value, 0.3798641296532, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.3798641296532 ]
class_pparam_controller.set_property: [ value, 0.41444205173112, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.41444205173112 ]
class_pparam_controller.set_property: [ value, 0.42149092391157, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.42149092391157 ]
class_pparam_controller.set_property: [ value, 0.46535057303438, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.46535057303438 ]
class_pparam_controller.set_property: [ value, 0.47140017980994, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.47140017980994 ]
class_pparam_controller.set_property: [ value, 0.47724471516938, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.47724471516938 ]
class_pparam_controller.set_property: [ value, 0.49956109935017, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.49956109935017 ]
class_pparam_controller.set_property: [ value, 0.5078944326835, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.5078944326835 ]
class_pparam_controller.set_property: [ value, 0.51622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.51622776601684 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.54573596273815, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.54573596273815 ]
class_pparam_controller.set_property: [ value, 0.55816324988781, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.55816324988781 ]
class_pparam_controller.set_property: [ value, 0.56622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.56622776601684 ]
class_pparam_controller.set_property: [ value, 0.57429228214587, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.57429228214587 ]
class_pparam_controller.set_property: [ value, 0.59400554379462, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.59400554379462 ]
class_pparam_controller.set_property: [ value, 0.60853545832453, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.60853545832453 ]
class_pparam_controller.set_property: [ value, 0.61622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.61622776601684 ]
class_pparam_controller.set_property: [ value, 0.64198534177441, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.64198534177441 ]
class_pparam_controller.set_property: [ value, 0.66471261450169, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.66471261450169 ]
class_pparam_controller.set_property: [ value, 0.6765218836639, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.6765218836639 ]
class_pparam_controller.set_property: [ value, 0.67854660659655, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.67854660659655 ]
class_pparam_controller.set_property: [ value, 0.68579298340814, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.68579298340814 ]
class_pparam_controller.set_property: [ value, 0.68765633744541, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.68765633744541 ]
class_pparam_controller.set_property: [ value, 0.70194205173112, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.70194205173112 ]
class_pparam_controller.set_property: [ value, 0.71059396319994, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.71059396319994 ]
class_pparam_controller.set_property: [ value, 0.71763621672106, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.71763621672106 ]
class_pparam_controller.set_property: [ value, 0.72594998823906, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.72594998823906 ]
class_pparam_controller.set_property: [ value, 0.72718667012643, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.72718667012643 ]
class_pparam_controller.set_property: [ value, 0.73514668493576, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.73514668493576 ]
class_pparam_controller.set_property: [ value, 0.73622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.73622776601684 ]
class_pparam_controller.set_property: [ value, 0.7428944326835, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7428944326835 ]
class_pparam_controller.set_property: [ value, 0.7628944326835, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7628944326835 ]
class_pparam_controller.set_property: [ value, 0.76359618706947, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.76359618706947 ]
class_pparam_controller.set_property: [ value, 0.77017513443789, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.77017513443789 ]
class_pparam_controller.set_property: [ value, 0.78376023354931, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.78376023354931 ]
class_pparam_controller.set_property: [ value, 0.79674724653632, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.79674724653632 ]
class_pparam_controller.set_property: [ value, 0.80973425952333, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.80973425952333 ]
class_pparam_controller.set_property: [ value, 0.81622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.81622776601684 ]
class_pparam_controller.set_property: [ value, 0.81622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.81622776601684 ]
class_pparam_controller.set_property: [ value, 0.83521510778899, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.83521510778899 ]
class_pparam_controller.set_property: [ value, 0.84122776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.84122776601684 ]
class_pparam_controller.set_property: [ value, 0.85372776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.85372776601684 ]
class_pparam_controller.set_property: [ value, 0.85943764256005, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.85943764256005 ]
class_pparam_controller.set_property: [ value, 0.86561048206622, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.86561048206622 ]
class_pparam_controller.set_property: [ value, 0.86500825382172, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.86500825382172 ]
class_pparam_controller.set_property: [ value, 0.87720337577294, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87720337577294 ]
class_pparam_controller.set_property: [ value, 0.88170395649303, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.88170395649303 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.88681600131096, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.88681600131096 ]
class_pparam_controller.set_property: [ value, 0.89269835425213, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.89269835425213 ]
class_pparam_controller.set_property: [ value, 0.89858070719331, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.89858070719331 ]
class_pparam_controller.set_property: [ value, 0.90925102183079, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.90925102183079 ]
class_pparam_controller.set_property: [ value, 0.91506497531916, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.91506497531916 ]
class_pparam_controller.set_property: [ value, 0.91967604187891, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.91967604187891 ]
class_pparam_controller.set_property: [ value, 0.92542316831569, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.92542316831569 ]
class_pparam_controller.set_property: [ value, 0.93117029475247, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.93117029475247 ]
class_pparam_controller.set_property: [ value, 0.93691742118925, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.93691742118925 ]
class_pparam_controller.set_property: [ value, 0.94122776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.94122776601684 ]
class_pparam_controller.set_property: [ value, 0.93982327163482, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.93982327163482 ]
class_pparam_controller.set_property: [ value, 0.94544124916291, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.94544124916291 ]
class_pparam_controller.set_property: [ value, 0.94400554379462, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.94400554379462 ]
class_pparam_controller.set_property: [ value, 0.94956109935017, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.94956109935017 ]
class_pparam_controller.set_property: [ value, 0.96622776601684, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.96622776601684 ]
class_pparam_controller.set_property: [ value, 0.97007391986299, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.97007391986299 ]
class_pparam_controller.set_property: [ value, 0.981062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.981062930852 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.941062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.941062930852 ]
class_pparam_controller.set_property: [ value, 0.931062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.931062930852 ]
class_pparam_controller.set_property: [ value, 0.901062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.901062930852 ]
class_pparam_controller.set_property: [ value, 0.861062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.861062930852 ]
class_pparam_controller.set_property: [ value, 0.841062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.841062930852 ]
class_pparam_controller.set_property: [ value, 0.831062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.831062930852 ]
class_pparam_controller.set_property: [ value, 0.741062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.741062930852 ]
class_pparam_controller.set_property: [ value, 0.631062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.631062930852 ]
class_pparam_controller.set_property: [ value, 0.561062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.561062930852 ]
class_pparam_controller.set_property: [ value, 0.491062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.491062930852 ]
class_pparam_controller.set_property: [ value, 0.481062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.481062930852 ]
class_pparam_controller.set_property: [ value, 0.461062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.461062930852 ]
class_pparam_controller.set_property: [ value, 0.451062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.451062930852 ]
class_pparam_controller.set_property: [ value, 0.441062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.441062930852 ]
class_pparam_controller.set_property: [ value, 0.401062930852, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.401062930852 ]
class_pparam_controller.set_property: [ value, 0.3732197935971, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.3732197935971 ]
class_pparam_controller.set_property: [ value, 0.36341587202847, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.36341587202847 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.33955349688974, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.33955349688974 ]
class_pparam_controller.set_property: [ value, 0.33011953462559, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.33011953462559 ]
class_pparam_controller.set_property: [ value, 0.33291478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.33291478270385 ]
********************* releasing synth
-----------controller.get_menu_items_names: [ no_preset, aaaa, azaz, olo, plop, ttt, uuuu ]
class_popup_view: set_property: [ value, 0 ]
###########----- making note
########### making synth
-----------controller.get_menu_items_names: [ Before filter 1, Before filter 2, After filter 1, After filter 2, Between filters, Before pan, In feedback ]
filkindREFRESH++
class_popup_view: set_property: [ label, Ins1 ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
-----------controller.get_menu_items_names: [ Before filter 1, Before filter 2, After filter 1, After filter 2, Between filters, Before pan, In feedback ]
filkindREFRESH++
class_popup_view: set_property: [ label, Ins2 ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
-----------controller.get_menu_items_names: [ After filter 1, After filter 2, Between filters, Before pan, After pan ]
filkindREFRESH++
class_popup_view: set_property: [ label, Feedback ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
-----------controller.get_menu_items_names: [ No bypass, Osc 1, Osc 2, Osc 3 ]
filkindREFRESH++
class_popup_view: set_property: [ label, Bypass source ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
-----------controller.get_menu_items_names: [ Before Fx 1, Before Fx 2, Before Eq ]
filkindREFRESH++
class_popup_view: set_property: [ label, Bypass destination ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
********************* releasing synth
class_pparam_kind_controller: [ value, 1 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.69730285961792, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.69730285961792 ]
class_pparam_controller.set_property: [ value, 0.67826062734039, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.67826062734039 ]
class_pparam_controller.set_property: [ value, 0.65902985810962, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.65902985810962 ]
class_pparam_controller.set_property: [ value, 0.64941447349424, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.64941447349424 ]
class_pparam_controller.set_property: [ value, 0.63979908887886, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.63979908887886 ]
class_pparam_controller.set_property: [ value, 0.63163508307334, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.63163508307334 ]
class_pparam_controller.set_property: [ value, 0.61276715854504, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.61276715854504 ]
class_pparam_controller.set_property: [ value, 0.60333319628089, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.60333319628089 ]
class_pparam_controller.set_property: [ value, 0.59599567007544, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.59599567007544 ]
class_pparam_controller.set_property: [ value, 0.58892496300473, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.58892496300473 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.561652235732, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.561652235732 ]
class_pparam_controller.set_property: [ value, 0.55256132664109, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.55256132664109 ]
class_pparam_controller.set_property: [ value, 0.54347041755018, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.54347041755018 ]
class_pparam_controller.set_property: [ value, 0.52528859936837, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.52528859936837 ]
class_pparam_controller.set_property: [ value, 0.51960678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.51960678118655 ]
class_pparam_controller.set_property: [ value, 0.51067820975798, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.51067820975798 ]
class_pparam_controller.set_property: [ value, 0.48389249547226, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.48389249547226 ]
class_pparam_controller.set_property: [ value, 0.47903660574795, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.47903660574795 ]
class_pparam_controller.set_property: [ value, 0.44848609153138, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.44848609153138 ]
class_pparam_controller.set_property: [ value, 0.4398654018762, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.4398654018762 ]
class_pparam_controller.set_property: [ value, 0.43210678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.43210678118655 ]
class_pparam_controller.set_property: [ value, 0.42022153528491, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.42022153528491 ]
class_pparam_controller.set_property: [ value, 0.41202481397343, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.41202481397343 ]
class_pparam_controller.set_property: [ value, 0.40065516828332, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.40065516828332 ]
class_pparam_controller.set_property: [ value, 0.38452613602526, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.38452613602526 ]
class_pparam_controller.set_property: [ value, 0.37646161989623, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.37646161989623 ]
class_pparam_controller.set_property: [ value, 0.36839710376719, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.36839710376719 ]
class_pparam_controller.set_property: [ value, 0.36583693991671, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.36583693991671 ]
class_pparam_controller.set_property: [ value, 0.3609529350327, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.3609529350327 ]
class_pparam_controller.set_property: [ value, 0.35326062734039, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.35326062734039 ]
class_pparam_controller.set_property: [ value, 0.34556831964809, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.34556831964809 ]
class_pparam_controller.set_property: [ value, 0.32249139657116, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.32249139657116 ]
class_pparam_controller.set_property: [ value, 0.32074314482291, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.32074314482291 ]
class_pparam_controller.set_property: [ value, 0.31316738724715, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.31316738724715 ]
class_pparam_controller.set_property: [ value, 0.3055916296714, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.3055916296714 ]
class_pparam_controller.set_property: [ value, 0.29044011451988, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.29044011451988 ]
class_pparam_controller.set_property: [ value, 0.28173364685819, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.28173364685819 ]
class_pparam_controller.set_property: [ value, 0.25857736942184, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.25857736942184 ]
class_pparam_controller.set_property: [ value, 0.25122442824537, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.25122442824537 ]
class_pparam_controller.set_property: [ value, 0.2438714870689, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.2438714870689 ]
class_pparam_controller.set_property: [ value, 0.22916560471596, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.22916560471596 ]
class_pparam_controller.set_property: [ value, 0.20710678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.20710678118655 ]
class_pparam_controller.set_property: [ value, 0.18504795765714, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.18504795765714 ]
class_pparam_controller.set_property: [ value, 0.17769501648067, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.17769501648067 ]
class_pparam_controller.set_property: [ value, 0.13994260208207, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.13994260208207 ]
class_pparam_controller.set_property: [ value, 0.10710678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.10710678118655 ]
class_pparam_controller.set_property: [ value, 0.082106781186548, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.082106781186548 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.074294281186548, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.074294281186548 ]
class_pparam_controller.set_property: [ value, 0.058669281186548, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.058669281186548 ]
class_pparam_controller.set_property: [ value, 0.032503606583373, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.032503606583373 ]
class_pparam_controller.set_property: [ value, 0.024567098646865, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.024567098646865 ]
class_pparam_controller.set_property: [ value, 0.016630590710357, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.016630590710357 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0.0054938779607411, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.0054938779607411 ]
class_pparam_controller.set_property: [ value, 0.021622910218806, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.021622910218806 ]
class_pparam_controller.set_property: [ value, 0.082106781186548, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.082106781186548 ]
class_pparam_controller.set_property: [ value, 0.09941447349424, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.09941447349424 ]
class_pparam_controller.set_property: [ value, 0.11479908887886, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.11479908887886 ]
class_pparam_controller.set_property: [ value, 0.13787601195578, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.13787601195578 ]
class_pparam_controller.set_property: [ value, 0.19172216580193, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.19172216580193 ]
class_pparam_controller.set_property: [ value, 0.19941447349424, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.19941447349424 ]
class_pparam_controller.set_property: [ value, 0.20710678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.20710678118655 ]
class_pparam_controller.set_property: [ value, 0.26013708421685, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.26013708421685 ]
class_pparam_controller.set_property: [ value, 0.27528859936837, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.27528859936837 ]
class_pparam_controller.set_property: [ value, 0.29044011451988, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.29044011451988 ]
class_pparam_controller.set_property: [ value, 0.29801587209564, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.29801587209564 ]
class_pparam_controller.set_property: [ value, 0.32650976626117, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.32650976626117 ]
class_pparam_controller.set_property: [ value, 0.3414351393955, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.3414351393955 ]
class_pparam_controller.set_property: [ value, 0.37874857223132, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.37874857223132 ]
class_pparam_controller.set_property: [ value, 0.40113663193282, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.40113663193282 ]
class_pparam_controller.set_property: [ value, 0.43845006476864, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.43845006476864 ]
class_pparam_controller.set_property: [ value, 0.48322618417162, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.48322618417162 ]
class_pparam_controller.set_property: [ value, 0.56531573641043, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.56531573641043 ]
class_pparam_controller.set_property: [ value, 0.58024110954476, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.58024110954476 ]
class_pparam_controller.set_property: [ value, 0.60262916924625, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.60262916924625 ]
class_pparam_controller.set_property: [ value, 0.61755454238058, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.61755454238058 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.61009185581341, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.61009185581341 ]
class_pparam_controller.set_property: [ value, 0.59516648267908, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.59516648267908 ]
class_pparam_controller.set_property: [ value, 0.58770379611192, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.58770379611192 ]
class_pparam_controller.set_property: [ value, 0.58210678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.58210678118655 ]
class_pparam_controller.set_property: [ value, 0.57475384001008, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.57475384001008 ]
class_pparam_controller.set_property: [ value, 0.56004795765714, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.56004795765714 ]
class_pparam_controller.set_property: [ value, 0.55493286814307, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.55493286814307 ]
class_pparam_controller.set_property: [ value, 0.54996392404369, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.54996392404369 ]
class_pparam_controller.set_property: [ value, 0.54513495020063, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.54513495020063 ]
class_pparam_controller.set_property: [ value, 0.53105044315838, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.53105044315838 ]
class_pparam_controller.set_property: [ value, 0.52655122563099, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.52655122563099 ]
class_pparam_controller.set_property: [ value, 0.51960678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.51960678118655 ]
class_pparam_controller.set_property: [ value, 0.50162732913175, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.50162732913175 ]
class_pparam_controller.set_property: [ value, 0.49477801406326, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.49477801406326 ]
class_pparam_controller.set_property: [ value, 0.48107938392627, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.48107938392627 ]
class_pparam_controller.set_property: [ value, 0.47377344785321, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.47377344785321 ]
class_pparam_controller.set_property: [ value, 0.46710678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.46710678118655 ]
class_pparam_controller.set_property: [ value, 0.46044011451988, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.46044011451988 ]
class_pparam_controller.set_property: [ value, 0.43146575554552, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.43146575554552 ]
class_pparam_controller.set_property: [ value, 0.41864524272501, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.41864524272501 ]
class_pparam_controller.set_property: [ value, 0.41223498631475, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.41223498631475 ]
class_pparam_controller.set_property: [ value, 0.38018370426347, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.38018370426347 ]
class_pparam_controller.set_property: [ value, 0.37377344785321, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.37377344785321 ]
class_pparam_controller.set_property: [ value, 0.35454267862244, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.35454267862244 ]
class_pparam_controller.set_property: [ value, 0.34813242221219, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.34813242221219 ]
class_pparam_controller.set_property: [ value, 0.32249139657116, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.32249139657116 ]
class_pparam_controller.set_property: [ value, 0.29044011451988, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.29044011451988 ]
class_pparam_controller.set_property: [ value, 0.25256132664109, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.25256132664109 ]
class_pparam_controller.set_property: [ value, 0.18736993908128, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.18736993908128 ]
class_pparam_controller.set_property: [ value, 0.16710678118655, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.16710678118655 ]
class_pparam_controller.set_property: [ value, 0.16044011451988, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.16044011451988 ]
class_pparam_controller.set_property: [ value, 0.11926894334871, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.11926894334871 ]
class_pparam_controller.set_property: [ value, 0.092241916321683, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.092241916321683 ]
class_pparam_controller.set_property: [ value, 0.085485159564926, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.085485159564926 ]
class_pparam_controller.set_property: [ value, 0.042723219542712, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.042723219542712 ]
class_pparam_controller.set_property: [ value, 0.035873904474219, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.035873904474219 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.75340307748284, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.75340307748284 ]
class_pparam_controller.set_property: [ value, 0.761652235732, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.761652235732 ]
class_pparam_controller.set_property: [ value, 0.77983405391382, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.77983405391382 ]
class_pparam_controller.set_property: [ value, 0.78892496300473, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.78892496300473 ]
class_pparam_controller.set_property: [ value, 0.8142496383294, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.8142496383294 ]
class_pparam_controller.set_property: [ value, 0.82991379873041, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.82991379873041 ]
class_pparam_controller.set_property: [ value, 0.83868572855497, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.83868572855497 ]
class_pparam_controller.set_property: [ value, 0.85622958820409, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.85622958820409 ]
class_pparam_controller.set_property: [ value, 0.87952057429, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.87952057429 ]
class_pparam_controller.set_property: [ value, 0.89044011451988, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.89044011451988 ]
class_pparam_controller.set_property: [ value, 0.89877344785321, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.89877344785321 ]
class_pparam_controller.set_property: [ value, 0.90710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.90710678118655 ]
class_pparam_controller.set_property: [ value, 0.93210678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.93210678118655 ]
class_pparam_controller.set_property: [ value, 0.93661497790786, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.93661497790786 ]
class_pparam_controller.set_property: [ value, 0.94481169921933, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.94481169921933 ]
class_pparam_controller.set_property: [ value, 0.95300842053081, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.95300842053081 ]
class_pparam_controller.set_property: [ value, 0.96120514184229, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.96120514184229 ]
class_pparam_controller.set_property: [ value, 0.98130032957364, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.98130032957364 ]
class_pparam_controller.set_property: [ value, 0.98488455896433, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.98488455896433 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.999, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.999 ]
class_pparam_controller.set_property: [ value, 0.99282106690083, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.99282106690083 ]
class_pparam_controller.set_property: [ value, 0.97694805102782, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.97694805102782 ]
class_pparam_controller.set_property: [ value, 0.96901154309131, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.96901154309131 ]
class_pparam_controller.set_property: [ value, 0.93291323279945, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.93291323279945 ]
class_pparam_controller.set_property: [ value, 0.91202481397343, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.91202481397343 ]
class_pparam_controller.set_property: [ value, 0.82779643635896, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.82779643635896 ]
class_pparam_controller.set_property: [ value, 0.81236993908128, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.81236993908128 ]
class_pparam_controller.set_property: [ value, 0.7860541496076, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.7860541496076 ]
class_pparam_controller.set_property: [ value, 0.75256132664109, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.75256132664109 ]
class_pparam_controller.set_property: [ value, 0.74347041755018, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.74347041755018 ]
class_pparam_controller.set_property: [ value, 0.66864524272501, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.66864524272501 ]
class_pparam_controller.set_property: [ value, 0.62056831964809, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.62056831964809 ]
class_pparam_controller.set_property: [ value, 0.60906756550027, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.60906756550027 ]
class_pparam_controller.set_property: [ value, 0.57710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.57710678118655 ]
class_pparam_controller.set_property: [ value, 0.56710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.56710678118655 ]
class_pparam_controller.set_property: [ value, 0.54710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.54710678118655 ]
class_pparam_controller.set_property: [ value, 0.53710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.53710678118655 ]
class_pparam_controller.set_property: [ value, 0.51710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.51710678118655 ]
class_pparam_controller.set_property: [ value, 0.47710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.47710678118655 ]
class_pparam_controller.set_property: [ value, 0.44710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.44710678118655 ]
class_pparam_controller.set_property: [ value, 0.43710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.43710678118655 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.44710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.44710678118655 ]
class_pparam_controller.set_property: [ value, 0.45710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.45710678118655 ]
class_pparam_controller.set_property: [ value, 0.47710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.47710678118655 ]
class_pparam_controller.set_property: [ value, 0.48710678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.48710678118655 ]
class_pparam_controller.set_property: [ value, 0.511028349814, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.511028349814 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.37291478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.37291478270385 ]
class_pparam_controller.set_property: [ value, 0.38193439054699, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.38193439054699 ]
class_pparam_controller.set_property: [ value, 0.39173831211562, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.39173831211562 ]
class_pparam_controller.set_property: [ value, 0.40154223368425, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.40154223368425 ]
class_pparam_controller.set_property: [ value, 0.40983785962693, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.40983785962693 ]
class_pparam_controller.set_property: [ value, 0.4290686288577, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.4290686288577 ]
class_pparam_controller.set_property: [ value, 0.43668836760951, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.43668836760951 ]
class_pparam_controller.set_property: [ value, 0.44402589381497, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.44402589381497 ]
class_pparam_controller.set_property: [ value, 0.46254441233348, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.46254441233348 ]
class_pparam_controller.set_property: [ value, 0.47180367159274, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.47180367159274 ]
class_pparam_controller.set_property: [ value, 0.4783693281584, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.4783693281584 ]
class_pparam_controller.set_property: [ value, 0.48470049698957, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.48470049698957 ]
class_pparam_controller.set_property: [ value, 0.49958144937052, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.49958144937052 ]
class_pparam_controller.set_property: [ value, 0.50835337919508, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.50835337919508 ]
class_pparam_controller.set_property: [ value, 0.52256995511765, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.52256995511765 ]
class_pparam_controller.set_property: [ value, 0.54477918948352, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.54477918948352 ]
class_pparam_controller.set_property: [ value, 0.56172834202589, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.56172834202589 ]
class_pparam_controller.set_property: [ value, 0.57881642204812, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.57881642204812 ]
class_pparam_controller.set_property: [ value, 0.58291478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.58291478270385 ]
class_pparam_controller.set_property: [ value, 0.59097929883289, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.59097929883289 ]
class_pparam_controller.set_property: [ value, 0.60710833109095, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.60710833109095 ]
class_pparam_controller.set_property: [ value, 0.61069256048163, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.61069256048163 ]
class_pparam_controller.set_property: [ value, 0.61862906841814, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.61862906841814 ]
class_pparam_controller.set_property: [ value, 0.62197728270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.62197728270385 ]
class_pparam_controller.set_property: [ value, 0.63760228270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.63760228270385 ]
class_pparam_controller.set_property: [ value, 0.64541478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.64541478270385 ]
class_pparam_controller.set_property: [ value, 0.64829939808847, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.64829939808847 ]
class_pparam_controller.set_property: [ value, 0.65109660088567, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.65109660088567 ]
class_pparam_controller.set_property: [ value, 0.65381030509191, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.65381030509191 ]
class_pparam_controller.set_property: [ value, 0.66127299165908, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.66127299165908 ]
class_pparam_controller.set_property: [ value, 0.66873567822624, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.66873567822624 ]
class_pparam_controller.set_property: [ value, 0.6711500768215, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.6711500768215 ]
class_pparam_controller.set_property: [ value, 0.67850301799797, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.67850301799797 ]
class_pparam_controller.set_property: [ value, 0.68798724647197, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.68798724647197 ]
class_pparam_controller.set_property: [ value, 0.69523362328356, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.69523362328356 ]
class_pparam_controller.set_property: [ value, 0.70248000009516, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.70248000009516 ]
class_pparam_controller.set_property: [ value, 0.70615421932357, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.70615421932357 ]
class_pparam_controller.set_property: [ value, 0.7148592271483, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7148592271483 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.74507694486602, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.74507694486602 ]
class_pparam_controller.set_property: [ value, 0.7539674142828, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7539674142828 ]
class_pparam_controller.set_property: [ value, 0.76054636165122, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.76054636165122 ]
class_pparam_controller.set_property: [ value, 0.7816327314218, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7816327314218 ]
class_pparam_controller.set_property: [ value, 0.78804298783206, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.78804298783206 ]
class_pparam_controller.set_property: [ value, 0.7886109852355, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7886109852355 ]
class_pparam_controller.set_property: [ value, 0.80205058517299, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.80205058517299 ]
class_pparam_controller.set_property: [ value, 0.80242697782581, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.80242697782581 ]
class_pparam_controller.set_property: [ value, 0.81462209977703, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.81462209977703 ]
class_pparam_controller.set_property: [ value, 0.82696240175147, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82696240175147 ]
class_pparam_controller.set_property: [ value, 0.84481954460862, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.84481954460862 ]
class_pparam_controller.set_property: [ value, 0.850771925561, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.850771925561 ]
class_pparam_controller.set_property: [ value, 0.85617059665734, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.85617059665734 ]
class_pparam_controller.set_property: [ value, 0.85590328845098, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.85590328845098 ]
class_pparam_controller.set_property: [ value, 0.87268750997658, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87268750997658 ]
class_pparam_controller.set_property: [ value, 0.8783693281584, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.8783693281584 ]
class_pparam_controller.set_property: [ value, 0.87785860292857, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87785860292857 ]
class_pparam_controller.set_property: [ value, 0.87224062540048, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87224062540048 ]
class_pparam_controller.set_property: [ value, 0.86662264787239, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.86662264787239 ]
class_pparam_controller.set_property: [ value, 0.8610046703443, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.8610046703443 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.85564205543113, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.85564205543113 ]
class_pparam_controller.set_property: [ value, 0.84996023724931, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.84996023724931 ]
class_pparam_controller.set_property: [ value, 0.84440903557742, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.84440903557742 ]
class_pparam_controller.set_property: [ value, 0.84467948858621, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.84467948858621 ]
class_pparam_controller.set_property: [ value, 0.83879713564503, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.83879713564503 ]
class_pparam_controller.set_property: [ value, 0.83291478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.83291478270385 ]
class_pparam_controller.set_property: [ value, 0.82696240175147, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82696240175147 ]
class_pparam_controller.set_property: [ value, 0.82689068631831, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82689068631831 ]
class_pparam_controller.set_property: [ value, 0.82086658993277, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82086658993277 ]
class_pparam_controller.set_property: [ value, 0.81462209977703, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.81462209977703 ]
class_pparam_controller.set_property: [ value, 0.81439626418534, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.81439626418534 ]
class_pparam_controller.set_property: [ value, 0.80791478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.80791478270385 ]
class_pparam_controller.set_property: [ value, 0.79541478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.79541478270385 ]
class_pparam_controller.set_property: [ value, 0.77041478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.77041478270385 ]
class_pparam_controller.set_property: [ value, 0.76962364346335, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.76962364346335 ]
class_pparam_controller.set_property: [ value, 0.7632945295393, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7632945295393 ]
class_pparam_controller.set_property: [ value, 0.76240196219103, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.76240196219103 ]
class_pparam_controller.set_property: [ value, 0.74958144937052, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.74958144937052 ]
class_pparam_controller.set_property: [ value, 0.74317119296026, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.74317119296026 ]
class_pparam_controller.set_property: [ value, 0.7210726774407, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.7210726774407 ]
class_pparam_controller.set_property: [ value, 0.71449373007228, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.71449373007228 ]
class_pparam_controller.set_property: [ value, 0.70133583533543, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.70133583533543 ]
class_pparam_controller.set_property: [ value, 0.69475688796701, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.69475688796701 ]
class_pparam_controller.set_property: [ value, 0.68624811603719, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.68624811603719 ]
class_pparam_controller.set_property: [ value, 0.66399586378494, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.66399586378494 ]
class_pparam_controller.set_property: [ value, 0.65723910702818, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.65723910702818 ]
class_pparam_controller.set_property: [ value, 0.64372559351467, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.64372559351467 ]
class_pparam_controller.set_property: [ value, 0.63428464571755, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.63428464571755 ]
class_pparam_controller.set_property: [ value, 0.62164717707005, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.62164717707005 ]
class_pparam_controller.set_property: [ value, 0.6075626700278, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.6075626700278 ]
class_pparam_controller.set_property: [ value, 0.60052041650667, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.60052041650667 ]
class_pparam_controller.set_property: [ value, 0.58291478270385, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.58291478270385 ]
class_pparam_controller.set_property: [ value, 0.57204521748646, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.57204521748646 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.02, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.02 ]
class_pparam_controller.set_property: [ value, 0.03921568627451, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.03921568627451 ]
class_pparam_controller.set_property: [ value, 0.049019607843137, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.049019607843137 ]
class_pparam_controller.set_property: [ value, 0.058823529411765, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.058823529411765 ]
class_pparam_controller.set_property: [ value, 0.068627450980392, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.068627450980392 ]
class_pparam_controller.set_property: [ value, 0.10576923076923, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.10576923076923 ]
class_pparam_controller.set_property: [ value, 0.11320754716981, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.11320754716981 ]
class_pparam_controller.set_property: [ value, 0.13207547169811, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.13207547169811 ]
class_pparam_controller.set_property: [ value, 0.14150943396226, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.14150943396226 ]
class_pparam_controller.set_property: [ value, 0.15454545454545, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.15454545454545 ]
class_pparam_controller.set_property: [ value, 0.16363636363636, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.16363636363636 ]
class_pparam_controller.set_property: [ value, 0.17272727272727, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.17272727272727 ]
class_pparam_controller.set_property: [ value, 0.17857142857143, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.17857142857143 ]
class_pparam_controller.set_property: [ value, 0.19298245614035, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.19298245614035 ]
class_pparam_controller.set_property: [ value, 0.19827586206897, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.19827586206897 ]
class_pparam_controller.set_property: [ value, 0.21551724137931, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.21551724137931 ]
class_pparam_controller.set_property: [ value, 0.22881355932203, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.22881355932203 ]
class_pparam_controller.set_property: [ value, 0.23333333333333, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.23333333333333 ]
class_pparam_controller.set_property: [ value, 0.24590163934426, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.24590163934426 ]
class_pparam_controller.set_property: [ value, 0.25409836065574, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.25409836065574 ]
class_pparam_controller.set_property: [ value, 0.25806451612903, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.25806451612903 ]
class_pparam_controller.set_property: [ value, 0.2741935483871, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.2741935483871 ]
class_pparam_controller.set_property: [ value, 0.28225806451613, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.28225806451613 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.29032258064516, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.29032258064516 ]
class_pparam_controller.set_property: [ value, 0.29838709677419, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.29838709677419 ]
class_pparam_controller.set_property: [ value, 0.28571428571429, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.28571428571429 ]
class_pparam_controller.set_property: [ value, 0.27777777777778, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.27777777777778 ]
class_pparam_controller.set_property: [ value, 0.26984126984127, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.26984126984127 ]
class_pparam_controller.set_property: [ value, 0.2578125, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.2578125 ]
class_pparam_controller.set_property: [ value, 0.24615384615385, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.24615384615385 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.23846153846154, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.23846153846154 ]
class_pparam_controller.set_property: [ value, 0.23076923076923, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.23076923076923 ]
class_pparam_controller.set_property: [ value, 0.22307692307692, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.22307692307692 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.31622776389122, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.39316239301115, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.41025641001761, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.43589743599296, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.4615384619683, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.47008547000587, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.50427350401878, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.51282051298767, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.5384615380317, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.54700854700059, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.55555555596948, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.56410256400704, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.5811965810135, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.58974358998239, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.59829059801996, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.61538461502641, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64957264997065, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.66666666697711, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.67521367501467, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.68376068398356, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.69230769202113, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.70940170902759, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.71794871799648, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.73504273500293, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.75213675200939, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.76068376097828, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.76923076901585, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.77777777798474, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.7948717949912, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.80341880302876, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.82051282096654, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.84615384601057, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.85470085497946, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.86324786301702, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.88034188002348, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.88888888899237, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.89743589702994, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.90598290599883, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.92307692300528, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.93162393197417, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.9572649570182, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.97435897402465, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.98290598299354, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.99145299103111, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 1, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.98290598299354, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.9572649570182, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.92307692300528, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.86324786301702, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.7948717949912, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.69230769202113, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.66666666697711, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64957264997065, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.63247863203287, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.60683760698885, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.58974358998239, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.57264957297593, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.56410256400704, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.54700854700059, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.52991452999413, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.49572649598122, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.47863247897476, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.45299145299941, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.44444444403052, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.42735042702407, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.41025641001761, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.39316239301115, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.3760683760047, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.36752136796713, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35897435899824, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35042735002935, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.33333333302289, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.31623931601644, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.30769230797887, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.29059829097241, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.28205128200352, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.27350427396595, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.26495726499707, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.24786324799061, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23931623902172, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23076923098415, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.22222222201526, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.19658119697124, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.18803418800235, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.17948717903346, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.162393162027, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.14529914502054, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.13675213698298, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11965811997652, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11111111100763, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.094017094001174, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.068376068025827, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.05982905998826, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.051282051019371, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.025641025975347, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.017094017006457, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.0085470089688897, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.017094017006457, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.034188034012914, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.05982905998826, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.076923076994717, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.094017094001174, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11965811997652, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.14529914502054, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.162393162027, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.17948717903346, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.2051282050088, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.22222222201526, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23931623902172, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.24786324799061, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.26495726499707, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.28205128200352, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.31623931601644, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.32478632498533, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.33333333302289, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35042735002935, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35897435899824, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.36752136796713, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.3760683760047, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.39316239301115, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.40170940198004, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.41025641001761, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.43589743599296, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.44444444403052, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.45299145299941, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.4615384619683, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.47863247897476, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.49572649598122, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.50427350401878, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.52136752102524, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.52991452999413, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.54700854700059, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.55555555596948, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.57264957297593, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.58974358998239, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.60683760698885, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.6239316239953, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.63247863203287, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64957264997065, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.65811965800822, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.66666666697711, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.67521367501467, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.69230769202113, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.70085470099002, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.56648178118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.56648178118655 ]
class_pparam_controller.set_property: [ value, 0.55866928118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.55866928118655 ]
class_pparam_controller.set_property: [ value, 0.55085678118655, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.55085678118655 ]
class_pparam_controller.set_property: [ value, 0.51663059071036, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.51663059071036 ]
class_pparam_controller.set_property: [ value, 0.48130032957364, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.48130032957364 ]
class_pparam_controller.set_property: [ value, 0.46940186315376, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.46940186315376 ]
class_pparam_controller.set_property: [ value, 0.46120514184229, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.46120514184229 ]
class_pparam_controller.set_property: [ value, 0.45300842053081, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.45300842053081 ]
class_pparam_controller.set_property: [ value, 0.44481169921933, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.44481169921933 ]
class_pparam_controller.set_property: [ value, 0.42022153528491, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.42022153528491 ]
class_pparam_controller.set_property: [ value, 0.41202481397343, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41202481397343 ]
class_pparam_controller.set_property: [ value, 0.39563137135048, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.39563137135048 ]
class_pparam_controller.set_property: [ value, 0.37104120741606, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.37104120741606 ]
class_pparam_controller.set_property: [ value, 0.34645104348163, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.34645104348163 ]
class_pparam_controller.set_property: [ value, 0.33825432217015, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.33825432217015 ]
class_pparam_controller.set_property: [ value, 0.33005760085868, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.33005760085868 ]
class_pparam_controller.set_property: [ value, 0.3218608795472, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.3218608795472 ]
class_pparam_controller.set_property: [ value, 0.30546743692425, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.30546743692425 ]
class_pparam_controller.set_property: [ value, 0.29727071561278, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.29727071561278 ]
class_pparam_controller.set_property: [ value, 0.2890739943013, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.2890739943013 ]
class_pparam_controller.set_property: [ value, 0.28087727298983, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.28087727298983 ]
class_pparam_controller.set_property: [ value, 0.2562871090554, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.2562871090554 ]
class_pparam_controller.set_property: [ value, 0.24742936183171, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.24742936183171 ]
class_pparam_controller.set_property: [ value, 0.23130032957364, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.23130032957364 ]
class_pparam_controller.set_property: [ value, 0.23091630499607, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.23091630499607 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_kind_controller: [ value, 2 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.25921819178852, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.25921819178852 ]
class_pparam_controller.set_property: [ value, 0.26865215405268, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.26865215405268 ]
class_pparam_controller.set_property: [ value, 0.28647186055163, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.28647186055163 ]
class_pparam_controller.set_property: [ value, 0.3142496383294, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.3142496383294 ]
class_pparam_controller.set_property: [ value, 0.32350889758866, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.32350889758866 ]
class_pparam_controller.set_property: [ value, 0.34000721408698, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.34000721408698 ]
class_pparam_controller.set_property: [ value, 0.3581890322688, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.3581890322688 ]
class_pparam_controller.set_property: [ value, 0.36727994135971, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.36727994135971 ]
class_pparam_controller.set_property: [ value, 0.37637085045062, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.37637085045062 ]
class_pparam_controller.set_property: [ value, 0.38546175954153, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.38546175954153 ]
class_pparam_controller.set_property: [ value, 0.39758297166274, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.39758297166274 ]
class_pparam_controller.set_property: [ value, 0.41016158801494, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41016158801494 ]
class_pparam_controller.set_property: [ value, 0.41959555027909, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41959555027909 ]
class_pparam_controller.set_property: [ value, 0.42902951254324, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.42902951254324 ]
class_pparam_controller.set_property: [ value, 0.43846347480739, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.43846347480739 ]
class_pparam_controller.set_property: [ value, 0.45207015114992, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.45207015114992 ]
class_pparam_controller.set_property: [ value, 0.4616855357653, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.4616855357653 ]
class_pparam_controller.set_property: [ value, 0.47130092038069, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.47130092038069 ]
class_pparam_controller.set_property: [ value, 0.48581826578039, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.48581826578039 ]
class_pparam_controller.set_property: [ value, 0.49562218734901, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.49562218734901 ]
class_pparam_controller.set_property: [ value, 0.51523003048627, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.51523003048627 ]
class_pparam_controller.set_property: [ value, 0.53091630499607, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.53091630499607 ]
class_pparam_controller.set_property: [ value, 0.53860861268838, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.53860861268838 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.50014707422684, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.50014707422684 ]
class_pparam_controller.set_property: [ value, 0.49562218734901, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.49562218734901 ]
class_pparam_controller.set_property: [ value, 0.48581826578039, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.48581826578039 ]
class_pparam_controller.set_property: [ value, 0.47601434421176, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.47601434421176 ]
class_pparam_controller.set_property: [ value, 0.46091630499607, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.46091630499607 ]
class_pparam_controller.set_property: [ value, 0.43091630499607, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.43091630499607 ]
class_pparam_controller.set_property: [ value, 0.40738689323137, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.40738689323137 ]
class_pparam_controller.set_property: [ value, 0.37514707422684, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.37514707422684 ]
class_pparam_controller.set_property: [ value, 0.36299177669418, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.36299177669418 ]
class_pparam_controller.set_property: [ value, 0.35355781443003, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.35355781443003 ]
class_pparam_controller.set_property: [ value, 0.33468988990173, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.33468988990173 ]
class_pparam_controller.set_property: [ value, 0.32525592763758, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.32525592763758 ]
class_pparam_controller.set_property: [ value, 0.3142496383294, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.3142496383294 ]
class_pparam_controller.set_property: [ value, 0.30499037907015, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.30499037907015 ]
class_pparam_controller.set_property: [ value, 0.29455266863244, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.29455266863244 ]
class_pparam_controller.set_property: [ value, 0.28546175954153, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.28546175954153 ]
class_pparam_controller.set_property: [ value, 0.27637085045062, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.27637085045062 ]
class_pparam_controller.set_property: [ value, 0.26727994135971, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.26727994135971 ]
class_pparam_controller.set_property: [ value, 0.24000721408698, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.24000721408698 ]
class_pparam_controller.set_property: [ value, 0.23091630499607, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.23091630499607 ]
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_kind_controller: [ value, 1 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_pparam_controller.set_property: [ value, 0.26229260935143, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.26229260935143 ]
class_pparam_controller.set_property: [ value, 0.27209653092006, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.27209653092006 ]
class_pparam_controller.set_property: [ value, 0.28190045248869, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.28190045248869 ]
class_pparam_controller.set_property: [ value, 0.29170437405732, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.29170437405732 ]
class_pparam_controller.set_property: [ value, 0.31131221719457, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.31131221719457 ]
class_pparam_controller.set_property: [ value, 0.34072398190045, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.34072398190045 ]
class_pparam_controller.set_property: [ value, 0.38974358974359, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.38974358974359 ]
class_pparam_controller.set_property: [ value, 0.40935143288084, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.40935143288084 ]
class_pparam_controller.set_property: [ value, 0.41915535444947, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.41915535444947 ]
class_pparam_controller.set_property: [ value, 0.43876319758673, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.43876319758673 ]
class_pparam_controller.set_property: [ value, 0.51719457013575, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.51719457013575 ]
class_pparam_controller.set_property: [ value, 0.52699849170437, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.52699849170437 ]
class_pparam_controller.set_property: [ value, 0.536802413273, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.536802413273 ]
class_pparam_controller.set_property: [ value, 0.55641025641026, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.55641025641026 ]
class_pparam_controller.set_property: [ value, 0.56621417797888, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.56621417797888 ]
class_pparam_controller.set_property: [ value, 0.59307692307692, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.59307692307692 ]
class_pparam_controller.set_property: [ value, 0.61307692307692, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.61307692307692 ]
class_pparam_controller.set_property: [ value, 0.62307692307692, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.62307692307692 ]
class_pparam_controller.set_property: [ value, 0.63307692307692, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.63307692307692 ]
class_pparam_controller.set_property: [ value, 0.63484162895928, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.63484162895928 ]
class_pparam_controller.set_property: [ value, 0.63653846153846, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.63653846153846 ]
********************* releasing synth
###########----- making note
########### making synth
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
done
********************* releasing synth
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
done
###########----- making note
########### making synth
********************* releasing synth
class_pparam_modmatrix_controller: [ modvalue, [ phase, 0 ] ]
class_passive_controller: update_arg: modosc_matrix
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.59024216524217, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.59024216524217 ]
class_pparam_controller.set_property: [ value, 0.59108391608392, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.59108391608392 ]
class_pparam_controller.set_property: [ value, 0.5729020979021, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.5729020979021 ]
class_pparam_controller.set_property: [ value, 0.58296703296703, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.58296703296703 ]
class_pparam_controller.set_property: [ value, 0.56636302294197, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.56636302294197 ]
class_pparam_controller.set_property: [ value, 0.55033156498674, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.55033156498674 ]
class_pparam_controller.set_property: [ value, 0.54171087533156, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.54171087533156 ]
class_pparam_controller.set_property: [ value, 0.53309018567639, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.53309018567639 ]
class_pparam_controller.set_property: [ value, 0.52446949602122, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.52446949602122 ]
class_pparam_controller.set_property: [ value, 0.51584880636605, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.51584880636605 ]
class_pparam_controller.set_property: [ value, 0.4986074270557, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.4986074270557 ]
class_pparam_controller.set_property: [ value, 0.48998673740053, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.48998673740053 ]
class_pparam_controller.set_property: [ value, 0.47274535809019, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.47274535809019 ]
class_pparam_controller.set_property: [ value, 0.45550397877984, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.45550397877984 ]
class_pparam_controller.set_property: [ value, 0.44355600539811, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.44355600539811 ]
class_pparam_controller.set_property: [ value, 0.43478407557355, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.43478407557355 ]
class_pparam_controller.set_property: [ value, 0.42601214574899, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.42601214574899 ]
class_pparam_controller.set_property: [ value, 0.3996963562753, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.3996963562753 ]
class_pparam_controller.set_property: [ value, 0.39092442645074, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.39092442645074 ]
class_pparam_controller.set_property: [ value, 0.38215249662618, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.38215249662618 ]
class_pparam_controller.set_property: [ value, 0.36460863697706, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.36460863697706 ]
class_pparam_controller.set_property: [ value, 0.3558367071525, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.3558367071525 ]
class_pparam_controller.set_property: [ value, 0.34706477732794, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.34706477732794 ]
class_pparam_controller.set_property: [ value, 0.28169975186104, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.28169975186104 ]
class_pparam_controller.set_property: [ value, 0.26557071960298, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.26557071960298 ]
class_pparam_controller.set_property: [ value, 0.25750620347395, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.25750620347395 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.19170061872156, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.19170061872156 ]
class_pparam_controller.set_property: [ value, 0.15248493244705, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.15248493244705 ]
class_pparam_controller.set_property: [ value, 0.14268101087842, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.14268101087842 ]
class_pparam_controller.set_property: [ value, 0.13476245884223, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.13476245884223 ]
class_pparam_controller.set_property: [ value, 0.12514707422684, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.12514707422684 ]
class_pparam_controller.set_property: [ value, 0.11553168961146, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.11553168961146 ]
class_pparam_controller.set_property: [ value, 0.10827479556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.10827479556211 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_kind_controller: [ value, 2 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_pparam_controller.set_property: [ value, 0.14827479556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.14827479556211 ]
class_pparam_controller.set_property: [ value, 0.16709832497387, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.16709832497387 ]
class_pparam_controller.set_property: [ value, 0.18670616811113, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.18670616811113 ]
class_pparam_controller.set_property: [ value, 0.20631401124838, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.20631401124838 ]
class_pparam_controller.set_property: [ value, 0.22148234273192, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.22148234273192 ]
class_pparam_controller.set_property: [ value, 0.23091630499607, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.23091630499607 ]
class_pparam_controller.set_property: [ value, 0.247163684451, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.247163684451 ]
class_pparam_controller.set_property: [ value, 0.27494146222878, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.27494146222878 ]
class_pparam_controller.set_property: [ value, 0.33049701778433, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.33049701778433 ]
class_pparam_controller.set_property: [ value, 0.34901553630285, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.34901553630285 ]
class_pparam_controller.set_property: [ value, 0.41959555027909, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41959555027909 ]
class_pparam_controller.set_property: [ value, 0.48563328612815, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.48563328612815 ]
class_pparam_controller.set_property: [ value, 0.52173633402365, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.52173633402365 ]
class_pparam_controller.set_property: [ value, 0.54096710325442, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.54096710325442 ]
class_pparam_controller.set_property: [ value, 0.5505824878698, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.5505824878698 ]
class_pparam_controller.set_property: [ value, 0.58904402633134, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.58904402633134 ]
class_pparam_controller.set_property: [ value, 0.66596710325442, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.66596710325442 ]
class_pparam_controller.set_property: [ value, 0.6755824878698, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.6755824878698 ]
class_pparam_controller.set_property: [ value, 0.68519787248519, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.68519787248519 ]
class_pparam_controller.set_property: [ value, 0.71404402633134, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.71404402633134 ]
class_pparam_controller.set_property: [ value, 0.75533361909152, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.75533361909152 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.77494146222878, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.77494146222878 ]
class_pparam_controller.set_property: [ value, 0.7847453837974, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.7847453837974 ]
class_pparam_controller.set_property: [ value, 0.79454930536603, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.79454930536603 ]
class_pparam_controller.set_property: [ value, 0.7847453837974, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.7847453837974 ]
class_pparam_controller.set_property: [ value, 0.77494146222878, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.77494146222878 ]
class_pparam_controller.set_property: [ value, 0.76513754066015, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.76513754066015 ]
###########----- making note
########### making synth
########### making fx
class_pparam_controller.set_property: [ value, 0.74827479556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.74827479556211 ]
class_pparam_controller.set_property: [ value, 0.71611793281701, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.71611793281701 ]
class_pparam_controller.set_property: [ value, 0.68519787248519, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.68519787248519 ]
class_pparam_controller.set_property: [ value, 0.65544460688286, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.65544460688286 ]
class_pparam_controller.set_property: [ value, 0.63605257333989, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.63605257333989 ]
class_pparam_controller.set_property: [ value, 0.61753405482137, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.61753405482137 ]
class_pparam_controller.set_property: [ value, 0.59009297738029, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.59009297738029 ]
class_pparam_controller.set_property: [ value, 0.58100206828938, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.58100206828938 ]
class_pparam_controller.set_property: [ value, 0.56282025010756, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.56282025010756 ]
class_pparam_controller.set_property: [ value, 0.54577479556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.54577479556211 ]
class_pparam_controller.set_property: [ value, 0.52932742714106, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.52932742714106 ]
class_pparam_controller.set_property: [ value, 0.51344720935521, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.51344720935521 ]
class_pparam_controller.set_property: [ value, 0.49620583004487, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.49620583004487 ]
class_pparam_controller.set_property: [ value, 0.47268157522313, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.47268157522313 ]
class_pparam_controller.set_property: [ value, 0.46420699895194, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.46420699895194 ]
class_pparam_controller.set_property: [ value, 0.44725784640957, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.44725784640957 ]
class_pparam_controller.set_property: [ value, 0.43878327013838, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.43878327013838 ]
class_pparam_controller.set_property: [ value, 0.43030869386719, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.43030869386719 ]
class_pparam_controller.set_property: [ value, 0.41660812889544, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41660812889544 ]
class_pparam_controller.set_property: [ value, 0.39994146222878, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.39994146222878 ]
class_pparam_controller.set_property: [ value, 0.37440382782017, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.37440382782017 ]
class_pparam_controller.set_property: [ value, 0.36633931169114, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.36633931169114 ]
class_pparam_controller.set_property: [ value, 0.35021027943308, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.35021027943308 ]
class_pparam_controller.set_property: [ value, 0.33049701778433, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.33049701778433 ]
class_pparam_controller.set_property: [ value, 0.32256050984782, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.32256050984782 ]
class_pparam_controller.set_property: [ value, 0.30358729556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.30358729556211 ]
class_pparam_controller.set_property: [ value, 0.28014979556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.28014979556211 ]
class_pparam_controller.set_property: [ value, 0.26452479556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.26452479556211 ]
class_pparam_controller.set_property: [ value, 0.25671229556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.25671229556211 ]
class_pparam_controller.set_property: [ value, 0.24889979556211, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.24889979556211 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_kind_controller: [ value, 3 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_pparam_controller.set_property: [ value, 0.64710678118655, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.64710678118655 ]
class_pparam_controller.set_property: [ value, 0.62056831964809, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.62056831964809 ]
class_pparam_controller.set_property: [ value, 0.5589586330384, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.5589586330384 ]
class_pparam_controller.set_property: [ value, 0.50710678118655, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.50710678118655 ]
class_pparam_controller.set_property: [ value, 0.49282106690083, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.49282106690083 ]
class_pparam_controller.set_property: [ value, 0.45272081627427, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.45272081627427 ]
class_pparam_controller.set_property: [ value, 0.4274457642374, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.4274457642374 ]
class_pparam_controller.set_property: [ value, 0.40202203542384, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.40202203542384 ]
class_pparam_controller.set_property: [ value, 0.37659830661028, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.37659830661028 ]
class_pparam_controller.set_property: [ value, 0.33422542525434, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.33422542525434 ]
class_pparam_controller.set_property: [ value, 0.27490339135604, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.27490339135604 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.10541186593231, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.10541186593231 ]
class_pparam_controller.set_property: [ value, 0.071513560847565, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.071513560847565 ]
class_pparam_controller.set_property: [ value, 0.063038984576378, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.063038984576378 ]
class_pparam_controller.set_property: [ value, 0.046089832034005, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.046089832034005 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.088462713389937, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.088462713389937 ]
class_pparam_controller.set_property: [ value, 0.14044011451988, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.14044011451988 ]
class_pparam_controller.set_property: [ value, 0.23130032957364, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.23130032957364 ]
class_pparam_controller.set_property: [ value, 0.50122442824537, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.50122442824537 ]
class_pparam_controller.set_property: [ value, 0.5187009840851, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.5187009840851 ]
class_pparam_controller.set_property: [ value, 0.54768649133148, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.54768649133148 ]
class_pparam_controller.set_property: [ value, 0.56217924495466, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.56217924495466 ]
class_pparam_controller.set_property: [ value, 0.57667199857785, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.57667199857785 ]
class_pparam_controller.set_property: [ value, 0.61290388263582, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.61290388263582 ]
class_pparam_controller.set_property: [ value, 0.62739663625901, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.62739663625901 ]
class_pparam_controller.set_property: [ value, 0.6418893898822, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.6418893898822 ]
class_pparam_controller.set_property: [ value, 0.69986040437495, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.69986040437495 ]
class_pparam_controller.set_property: [ value, 0.73609228843292, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.73609228843292 ]
class_pparam_controller.set_property: [ value, 0.75058504205611, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.75058504205611 ]
class_pparam_controller.set_property: [ value, 0.75783141886771, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.75783141886771 ]
class_pparam_controller.set_property: [ value, 0.7650777956793, true ]
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
pknob set_property: [ value, 0.7650777956793 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.52991452999413, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.47863247897476, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.4615384619683, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.45299145299941, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.43589743599296, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.41025641001761, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.3760683760047, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.35897435899824, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.32478632498533, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.30769230797887, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.28205128200352, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.26495726499707, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.24786324799061, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.23076923098415, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.22222222201526, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.19658119697124, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.18803418800235, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.17948717903346, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.162393162027, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.15384615398943, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11965811997652, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.11111111100763, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.10256410297006, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.094017094001174, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.068376068025827, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.05982905998826, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.051282051019371, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.034188034012914, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.017094017006457, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.0085470089688897, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.05982905998826, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.10256410297006, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.15384615398943, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.19658119697124, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.24786324799061, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.29059829097241, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.34188034199178, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.3760683760047, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.40170940198004, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.43589743599296, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.47008547000587, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.49572649598122, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.52991452999413, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.57264957297593, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.60683760698885, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.64102564100176, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.67521367501467, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.76923076901585, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.81196581199765, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.85470085497946, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.87179487198591, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.91452991496772, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.92307692300528, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.94017094001174, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.9572649570182, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.96581196598709, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 0.98290598299354, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
class_pparam_controller.set_property: [ value, 1, false ]
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_kind_controller: [ value, 1 ]
class_passive_controller: update_arg: routing_bypass_dest
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_pparam_kind_controller: [ value, 0 ]
class_passive_controller: update_arg: routing_bypass_dest
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_passive_controller: update_arg: osc3
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.61126090376097, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.61126090376097 ]
class_pparam_controller.set_property: [ value, 0.6210648253296, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.6210648253296 ]
class_pparam_controller.set_property: [ value, 0.64204521748646, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.64204521748646 ]
class_pparam_controller.set_property: [ value, 0.66204521748646, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.66204521748646 ]
class_pparam_controller.set_property: [ value, 0.67008443317274, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.67008443317274 ]
class_pparam_controller.set_property: [ value, 0.67988835474137, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.67988835474137 ]
class_pparam_controller.set_property: [ value, 0.68742983287108, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.68742983287108 ]
class_pparam_controller.set_property: [ value, 0.70666060210185, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.70666060210185 ]
class_pparam_controller.set_property: [ value, 0.72019336563461, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.72019336563461 ]
class_pparam_controller.set_property: [ value, 0.72659067203192, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.72659067203192 ]
class_pparam_controller.set_property: [ value, 0.74477249021374, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.74477249021374 ]
class_pparam_controller.set_property: [ value, 0.75061664605789, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.75061664605789 ]
class_pparam_controller.set_property: [ value, 0.75954521748646, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.75954521748646 ]
class_pparam_controller.set_property: [ value, 0.76502767362681, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.76502767362681 ]
class_pparam_controller.set_property: [ value, 0.78257153327594, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.78257153327594 ]
class_pparam_controller.set_property: [ value, 0.79618314852095, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.79618314852095 ]
class_pparam_controller.set_property: [ value, 0.81371188415313, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.81371188415313 ]
class_pparam_controller.set_property: [ value, 0.82204521748646, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.82204521748646 ]
class_pparam_controller.set_property: [ value, 0.8261435781422, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.8261435781422 ]
class_pparam_controller.set_property: [ value, 0.83434029945368, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.83434029945368 ]
class_pparam_controller.set_property: [ value, 0.85430328200259, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.85430328200259 ]
class_pparam_controller.set_property: [ value, 0.86110771748646, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.86110771748646 ]
class_pparam_controller.set_property: [ value, 0.87673271748646, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87673271748646 ]
class_pparam_controller.set_property: [ value, 0.87973752517877, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.87973752517877 ]
class_pparam_controller.set_property: [ value, 0.88742983287108, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.88742983287108 ]
class_pparam_controller.set_property: [ value, 0.89022703566828, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.89022703566828 ]
class_pparam_controller.set_property: [ value, 0.9053785508198, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.9053785508198 ]
class_pparam_controller.set_property: [ value, 0.91295430839555, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.91295430839555 ]
class_pparam_controller.set_property: [ value, 0.91532879957602, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.91532879957602 ]
class_pparam_controller.set_property: [ value, 0.92279148614318, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.92279148614318 ]
class_pparam_controller.set_property: [ value, 0.92498639395705, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.92498639395705 ]
class_pparam_controller.set_property: [ value, 0.92711768125458, true ]
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
pknob set_property: [ value, 0.92711768125458 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.45673348619999, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.45673348619999 ]
class_pparam_controller.set_property: [ value, 0.46565604512255, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.46565604512255 ]
class_pparam_controller.set_property: [ value, 0.47425994122645, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.47425994122645 ]
class_pparam_controller.set_property: [ value, 0.56222832530139, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.56222832530139 ]
class_pparam_controller.set_property: [ value, 0.58457100113428, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.58457100113428 ]
class_pparam_controller.set_property: [ value, 0.60372422694074, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.60372422694074 ]
class_pparam_controller.set_property: [ value, 0.6090126884792, true ]
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
pknob set_property: [ value, 0.6090126884792 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.48668991321525, true ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
pknob set_property: [ value, 0.48668991321525 ]
class_pparam_controller.set_property: [ value, 0.51747422694074, true ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
pknob set_property: [ value, 0.51747422694074 ]
class_pparam_controller.set_property: [ value, 0.55324345770997, true ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
pknob set_property: [ value, 0.55324345770997 ]
class_pparam_controller.set_property: [ value, 0.59562237508888, true ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
pknob set_property: [ value, 0.59562237508888 ]
class_pparam_controller.set_property: [ value, 0.66781320999158, true ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
pknob set_property: [ value, 0.66781320999158 ]
class_pparam_controller.set_property: [ value, 0.68476236253396, true ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
pknob set_property: [ value, 0.68476236253396 ]
class_pparam_controller.set_property: [ value, 0.69747422694074, true ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
pknob set_property: [ value, 0.69747422694074 ]
********************* releasing synth
###########----- making note
########### making synth
class_passive_controller: update_arg: noise
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth

a Main

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /n_set Node 1074 not found
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_kind_controller: [ value, 0 ]
class_passive_controller: update_arg: routing_bypass_osc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.29606960688286, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.29606960688286 ]
class_pparam_controller.set_property: [ value, 0.30445535111766, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.30445535111766 ]
class_pparam_controller.set_property: [ value, 0.31371461037692, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.31371461037692 ]
class_pparam_controller.set_property: [ value, 0.33818550984782, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.33818550984782 ]
class_pparam_controller.set_property: [ value, 0.35416295345685, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.35416295345685 ]
class_pparam_controller.set_property: [ value, 0.37170681310597, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.37170681310597 ]
class_pparam_controller.set_property: [ value, 0.38047874293053, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.38047874293053 ]
class_pparam_controller.set_property: [ value, 0.38925067275509, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.38925067275509 ]
class_pparam_controller.set_property: [ value, 0.39545151970004, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.39545151970004 ]
class_pparam_controller.set_property: [ value, 0.41269289901038, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.41269289901038 ]
class_pparam_controller.set_property: [ value, 0.42131358866556, true ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
pknob set_property: [ value, 0.42131358866556 ]
class_pparam_controller.set_property: [ value, 0.29750620347395, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.29750620347395 ]
class_pparam_controller.set_property: [ value, 0.31632973288571, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.31632973288571 ]
class_pparam_controller.set_property: [ value, 0.32613365445434, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.32613365445434 ]
class_pparam_controller.set_property: [ value, 0.33593757602296, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.33593757602296 ]
class_pparam_controller.set_property: [ value, 0.34574149759159, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.34574149759159 ]
class_pparam_controller.set_property: [ value, 0.35366004962779, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.35366004962779 ]
class_pparam_controller.set_property: [ value, 0.37289081885856, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.37289081885856 ]
class_pparam_controller.set_property: [ value, 0.38250620347395, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.38250620347395 ]
class_pparam_controller.set_property: [ value, 0.39212158808933, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.39212158808933 ]
class_pparam_controller.set_property: [ value, 0.39901563743621, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.39901563743621 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.41788356196451, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.41788356196451 ]
class_pparam_controller.set_property: [ value, 0.42731752422866, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.42731752422866 ]
class_pparam_controller.set_property: [ value, 0.43675148649281, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.43675148649281 ]
class_pparam_controller.set_property: [ value, 0.44618544875696, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.44618544875696 ]
class_pparam_controller.set_property: [ value, 0.46505337328527, true ]
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
pknob set_property: [ value, 0.46505337328527 ]
###########----- making note
########### making synth
nain1
nain2
-----------controller.get_menu_items_names: [ LFO, Performer, Stepper ]
filkindREFRESH++
class_popup_view: set_property: [ label, kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
nain3
nain3.1
prapri1
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_rate, 1 ]
pknob: set_controller: modulator1_rate
REFRESH++
REFRESH++
pknob set_property: [ label, Rate ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_amp, 1 ]
pknob: set_controller: modulator1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 80, 110 )
******************* vlayout_size: Point( 80, 160 )
soul
pknob: set_controller: modulator1_glidefade
REFRESH++
REFRESH++
pknob set_property: [ label, Glide/Fade ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
prapri2
class_lfo_frame: ctrl curve1: [ 0, ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'buffer': Buffer(5, 512, 1, 44100, nil), 
  'get_buffer': a Function, 'get_menu_items_names': a Function, 'main_controller': a Function, 'save_data': a Function, 'model': ( 'name': Curve1, 'uname': modulator1_curve1, 'indexes': [ 0, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 ), 
  'set_curve': a Function, 'new': a Function, 'get_curvebank': a Function, 'load_data': a Function ) ]
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
prapri3
-----------controller.get_menu_items_names: List[ known, line1, negline1, saw1, sin1, sin2, sin4, square1, triangle1 ]
REFRESH++
class_popup_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_popup_view: set_property: [ curve, sin1 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
REFRESH++
class_popup_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_curve_select_view: set_property: [ value, 4 ]
class_popup_view: set_property: [ curve, sin1 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
class_curve_select_view: set_property: [ curve, sin1 ]
-----------controller.get_menu_items_names: List[ known, line1, negline1, saw1, sin1, sin2, sin4, square1, triangle1 ]
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_popup_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
class_popup_view: set_property: [ curve, sin1 ]
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_popup_view: set_property: [ value, 4 ]
class_curve_select_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
class_popup_view: set_property: [ curve, sin1 ]
class_curve_select_view: set_property: [ curve, sin1 ]
prapri4
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Attack ]
class_ar_env_view: set_property: [ value, 0.1 ]
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Decay ]
class_ar_env_view: set_property: [ value, 0.1 ]
prapri5
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_env_attack, 0 ]
pknob: set_controller: modulator1_env_attack
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Attack ]
class_ar_env_view: set_property: [ value, 0.1 ]
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Attack ]
pknob set_property: [ label, Internal Env Attack ]
class_ar_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_env_decay, 0 ]
pknob: set_controller: modulator1_env_decay
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Decay ]
class_ar_env_view: set_property: [ value, 0.1 ]
REFRESH++
pknob set_property: [ label, Internal Env Decay ]
class_ar_env_view: set_property: [ label, Internal Env Decay ]
pknob set_property: [ value, 0.1 ]
class_ar_env_view: set_property: [ value, 0.1 ]
nain4
soul2
110, 90, 10, 100, 45, 55
********************* releasing synth
###########----- making note
########### making synth
soul2
108, 88, 10, 98, 44, 54
********************* releasing synth
###########----- making note
########### making synth
action!!!!: 1
class_perfstep_frame: set_right_panel: [ normal, performer ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_rate, 1 ]
pknob: set_controller: modulator1_rate
REFRESH++
REFRESH++
pknob set_property: [ label, Rate ]
pknob set_property: [ value, 440 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_amp, 1 ]
pknob: set_controller: modulator1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_ampmod
REFRESH++
REFRESH++
pknob set_property: [ label, Amp Mod ]
pknob set_property: [ value, 0.1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_glidefade
REFRESH++
REFRESH++
pknob set_property: [ label, Glide/Fade ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
REFRESH++
class_curvegraph_view: set_property: [ curve, [ sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ] ]
class_curvegraph_view: set_property: [ curve_amps, [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ] ]
REFRESH++
class_curvegraph_view: set_property: [ curve, [ sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ] ]
class_curvegraph_view: set_property: [ curve_amps, [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ] ]
class_pparam_kind_controller: [ value, 1 ]
class_passive_controller: update_arg: modulator1_kind
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
soul2
115, 95, 10, 105, 30.0416377716, 40.0416377716
soul2
115, 95, 10, 105, 47.5, 57.5
soul2
113, 93, 10, 103, 29.409182239566, 39.409182239566
soul2
113, 93, 10, 103, 46.5, 56.5
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ modulation_source, [ 0, mod, 4 ], true ]
class_passive_controller: update_arg: osc1_pitch
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), 
  ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), ([ macro, 1 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
pknob set_property: [ modulation_source, [ 0, mod, 4 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0, mod, 4 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, 5, [ 0, mod, 4 ] ]
class_mod_slot: mouseDownAction: buttonNumber: 1
move: [ 12, 10, 2, 0.02 ]
class_pparam_controller.set_property: [ range, [ 0, 0.02 ], true ]
pknob set_property: [ range, [ 0, 0.02 ] ]
move: [ 13, 11, 3, 0.03 ]
class_pparam_controller.set_property: [ range, [ 0, 0.03 ], true ]
pknob set_property: [ range, [ 0, 0.03 ] ]
move: [ 14, 12, 4, 0.04 ]
class_pparam_controller.set_property: [ range, [ 0, 0.04 ], true ]
pknob set_property: [ range, [ 0, 0.04 ] ]
move: [ 15, 12, 5, 0.05 ]
class_pparam_controller.set_property: [ range, [ 0, 0.05 ], true ]
pknob set_property: [ range, [ 0, 0.05 ] ]
move: [ 17, 12, 7, 0.07 ]
class_pparam_controller.set_property: [ range, [ 0, 0.07 ], true ]
pknob set_property: [ range, [ 0, 0.07 ] ]
move: [ 18, 12, 8, 0.08 ]
class_pparam_controller.set_property: [ range, [ 0, 0.08 ], true ]
pknob set_property: [ range, [ 0, 0.08 ] ]
move: [ 19, 12, 9, 0.09 ]
class_pparam_controller.set_property: [ range, [ 0, 0.09 ], true ]
pknob set_property: [ range, [ 0, 0.09 ] ]
move: [ 20, 12, 10, 0.1 ]
class_pparam_controller.set_property: [ range, [ 0, 0.1 ], true ]
pknob set_property: [ range, [ 0, 0.1 ] ]
move: [ 22, 12, 12, 0.12 ]
class_pparam_controller.set_property: [ range, [ 0, 0.12 ], true ]
pknob set_property: [ range, [ 0, 0.12 ] ]
move: [ 24, 12, 14, 0.14 ]
class_pparam_controller.set_property: [ range, [ 0, 0.14 ], true ]
pknob set_property: [ range, [ 0, 0.14 ] ]
move: [ 28, 12, 18, 0.18 ]
class_pparam_controller.set_property: [ range, [ 0, 0.18 ], true ]
pknob set_property: [ range, [ 0, 0.18 ] ]
move: [ 29, 12, 19, 0.19 ]
class_pparam_controller.set_property: [ range, [ 0, 0.19 ], true ]
pknob set_property: [ range, [ 0, 0.19 ] ]
move: [ 30, 12, 20, 0.2 ]
class_pparam_controller.set_property: [ range, [ 0, 0.2 ], true ]
pknob set_property: [ range, [ 0, 0.2 ] ]
move: [ 32, 12, 22, 0.22 ]
class_pparam_controller.set_property: [ range, [ 0, 0.22 ], true ]
pknob set_property: [ range, [ 0, 0.22 ] ]
move: [ 33, 12, 23, 0.23 ]
class_pparam_controller.set_property: [ range, [ 0, 0.23 ], true ]
pknob set_property: [ range, [ 0, 0.23 ] ]
move: [ 34, 12, 24, 0.24 ]
class_pparam_controller.set_property: [ range, [ 0, 0.24 ], true ]
pknob set_property: [ range, [ 0, 0.24 ] ]
move: [ 35, 13, 25, 0.25 ]
class_pparam_controller.set_property: [ range, [ 0, 0.25 ], true ]
pknob set_property: [ range, [ 0, 0.25 ] ]
move: [ 36, 14, 26, 0.26 ]
class_pparam_controller.set_property: [ range, [ 0, 0.26 ], true ]
pknob set_property: [ range, [ 0, 0.26 ] ]
move: [ 37, 14, 27, 0.27 ]
class_pparam_controller.set_property: [ range, [ 0, 0.27 ], true ]
pknob set_property: [ range, [ 0, 0.27 ] ]
move: [ 38, 14, 28, 0.28 ]
class_pparam_controller.set_property: [ range, [ 0, 0.28 ], true ]
pknob set_property: [ range, [ 0, 0.28 ] ]
move: [ 39, 14, 29, 0.29 ]
class_pparam_controller.set_property: [ range, [ 0, 0.29 ], true ]
pknob set_property: [ range, [ 0, 0.29 ] ]
move: [ 42, 14, 32, 0.32 ]
class_pparam_controller.set_property: [ range, [ 0, 0.32 ], true ]
pknob set_property: [ range, [ 0, 0.32 ] ]
move: [ 43, 14, 33, 0.33 ]
class_pparam_controller.set_property: [ range, [ 0, 0.33 ], true ]
pknob set_property: [ range, [ 0, 0.33 ] ]
move: [ 44, 14, 34, 0.34 ]
class_pparam_controller.set_property: [ range, [ 0, 0.34 ], true ]
pknob set_property: [ range, [ 0, 0.34 ] ]
********************* releasing synth
class_mod_slot: mouseUpAction: buttonNumber: nil
class_pparam_controller.set_property: [ update_range, [ 0, 0.34 ], true ]
class_passive_controller: update_arg: osc1_pitch
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
pknob set_property: [ update_range, [ 0, 0.34 ] ]
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.66770248701865, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.66770248701865 ]
class_pparam_controller.set_property: [ value, 0.63829072231277, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.63829072231277 ]
class_pparam_controller.set_property: [ value, 0.62848680074414, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.62848680074414 ]
class_pparam_controller.set_property: [ value, 0.61868287917552, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.61868287917552 ]
class_pparam_controller.set_property: [ value, 0.60887895760689, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60887895760689 ]
class_pparam_controller.set_property: [ value, 0.58927111446963, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.58927111446963 ]
class_pparam_controller.set_property: [ value, 0.57946719290101, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.57946719290101 ]
class_pparam_controller.set_property: [ value, 0.56966327133238, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.56966327133238 ]
class_pparam_controller.set_property: [ value, 0.55985934976375, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55985934976375 ]
class_pparam_controller.set_property: [ value, 0.5402515066265, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.5402515066265 ]
class_pparam_controller.set_property: [ value, 0.52731033015591, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.52731033015591 ]
class_pparam_controller.set_property: [ value, 0.51731033015591, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.51731033015591 ]
class_pparam_controller.set_property: [ value, 0.50731033015591, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50731033015591 ]
class_pparam_controller.set_property: [ value, 0.50103582035199, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50103582035199 ]
class_pparam_controller.set_property: [ value, 0.48538725323283, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.48538725323283 ]
class_pparam_controller.set_property: [ value, 0.46615648400206, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.46615648400206 ]
class_pparam_controller.set_property: [ value, 0.45146127355214, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.45146127355214 ]
class_pparam_controller.set_property: [ value, 0.44202731128798, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.44202731128798 ]
class_pparam_controller.set_property: [ value, 0.43259334902383, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.43259334902383 ]
class_pparam_controller.set_property: [ value, 0.39485749996723, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.39485749996723 ]
class_pparam_controller.set_property: [ value, 0.38542353770308, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.38542353770308 ]
class_pparam_controller.set_property: [ value, 0.37598957543893, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.37598957543893 ]
class_pparam_controller.set_property: [ value, 0.35712165091063, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.35712165091063 ]
class_pparam_controller.set_property: [ value, 0.34768768864648, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.34768768864648 ]
class_pparam_controller.set_property: [ value, 0.33825372638232, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.33825372638232 ]
class_pparam_controller.set_property: [ value, 0.32881976411817, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.32881976411817 ]
class_pparam_controller.set_property: [ value, 0.30995183958987, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.30995183958987 ]
class_pparam_controller.set_property: [ value, 0.29108391506157, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.29108391506157 ]
class_pparam_controller.set_property: [ value, 0.28164995279742, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.28164995279742 ]
class_pparam_controller.set_property: [ value, 0.26278202826912, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.26278202826912 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.36252406231313, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.36252406231313 ]
class_pparam_controller.set_property: [ value, 0.38104258083165, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.38104258083165 ]
class_pparam_controller.set_property: [ value, 0.39030184009091, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.39030184009091 ]
class_pparam_controller.set_property: [ value, 0.39804594783502, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.39804594783502 ]
class_pparam_controller.set_property: [ value, 0.39658490887398, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.39658490887398 ]
class_pparam_controller.set_property: [ value, 0.40394706426245, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.40394706426245 ]
class_pparam_controller.set_property: [ value, 0.41105535222373, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.41105535222373 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.41792268127108, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.41792268127108 ]
class_pparam_controller.set_property: [ value, 0.42639725754226, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.42639725754226 ]
class_pparam_controller.set_property: [ value, 0.43487183381345, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.43487183381345 ]
class_pparam_controller.set_property: [ value, 0.44122776601684, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.44122776601684 ]
class_pparam_controller.set_property: [ value, 0.4578944326835, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.4578944326835 ]
class_pparam_controller.set_property: [ value, 0.46622776601684, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.46622776601684 ]
class_pparam_controller.set_property: [ value, 0.47196547093487, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.47196547093487 ]
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.22504617921251, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.22504617921251 ]
class_pparam_controller.set_property: [ value, 0.21561221694836, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.21561221694836 ]
class_pparam_controller.set_property: [ value, 0.20722647271356, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.20722647271356 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.1979672134543, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.1979672134543 ]
class_pparam_controller.set_property: [ value, 0.17944869493578, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.17944869493578 ]
class_pparam_controller.set_property: [ value, 0.17018943567652, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.17018943567652 ]
class_pparam_controller.set_property: [ value, 0.16093017641726, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.16093017641726 ]
class_pparam_controller.set_property: [ value, 0.15167091715801, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.15167091715801 ]
class_pparam_controller.set_property: [ value, 0.1446002100873, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.1446002100873 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.48196547093487, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.48196547093487 ]
class_pparam_controller.set_property: [ value, 0.49196547093487, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.49196547093487 ]
class_pparam_controller.set_property: [ value, 0.50196547093487, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.50196547093487 ]
class_pparam_controller.set_property: [ value, 0.52004239401179, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.52004239401179 ]
class_pparam_controller.set_property: [ value, 0.52965777862718, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.52965777862718 ]
class_pparam_controller.set_property: [ value, 0.53927316324256, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.53927316324256 ]
class_pparam_controller.set_property: [ value, 0.55687113131223, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.55687113131223 ]
class_pparam_controller.set_property: [ value, 0.57573905584053, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.57573905584053 ]
class_pparam_controller.set_property: [ value, 0.58517301810468, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.58517301810468 ]
class_pparam_controller.set_property: [ value, 0.59460698036883, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.59460698036883 ]
class_pparam_controller.set_property: [ value, 0.60404094263298, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.60404094263298 ]
class_pparam_controller.set_property: [ value, 0.62290886716129, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.62290886716129 ]
class_pparam_controller.set_property: [ value, 0.63234282942544, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.63234282942544 ]
class_pparam_controller.set_property: [ value, 0.63863213760154, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.63863213760154 ]
class_pparam_controller.set_property: [ value, 0.6478913968608, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.6478913968608 ]
class_pparam_controller.set_property: [ value, 0.66640991537932, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.66640991537932 ]
class_pparam_controller.set_property: [ value, 0.67566917463857, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.67566917463857 ]
class_pparam_controller.set_property: [ value, 0.68492843389783, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.68492843389783 ]
class_pparam_controller.set_property: [ value, 0.69418769315709, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.69418769315709 ]
class_pparam_controller.set_property: [ value, 0.71270621167561, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.71270621167561 ]
class_pparam_controller.set_property: [ value, 0.72196547093487, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.72196547093487 ]
class_pparam_controller.set_property: [ value, 0.73122473019413, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.73122473019413 ]
class_pparam_controller.set_property: [ value, 0.75378365275305, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.75378365275305 ]
class_pparam_controller.set_property: [ value, 0.76287456184396, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.76287456184396 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.31622776389122, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.31622776389122 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.36082474235445 ]
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.51546391751617 ]
class_pparam_controller.set_property: [ value, 0.52577319554985, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.52577319554985 ]
soul2
113, 93, 10, 103, 48.896907186136, 58.896907186136
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 63.278350476176, 73.278350476176
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.60824739933014, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.60824739933014 ]
soul2
113, 93, 10, 103, 56.567008137703, 66.567008137703
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth

a Main

loading synth.sc
loading ui.sc
loading control.sc
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
p_effect: kind: reverb
p_effect: in sig: [ [ a FreeVerb, a FreeVerb ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
a Task
###########----- making note
########### making group
########### making synth
########### making fx
FAILURE /n_set Node 1015 not found
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.15421559470268, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.15421559470268 ]
class_pparam_controller.set_property: [ value, 0.1634681346156, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.1634681346156 ]
class_pparam_controller.set_property: [ value, 0.1823360591439, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.1823360591439 ]
class_pparam_controller.set_property: [ value, 0.19177002140805, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.19177002140805 ]
class_pparam_controller.set_property: [ value, 0.20229251777961, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.20229251777961 ]
class_pparam_controller.set_property: [ value, 0.21190790239499, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.21190790239499 ]
class_pparam_controller.set_property: [ value, 0.24263942577357, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.24263942577357 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.2646002100873, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.2646002100873 ]
class_pparam_controller.set_property: [ value, 0.2546002100873, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.2546002100873 ]
class_pparam_controller.set_property: [ value, 0.2446002100873, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.2446002100873 ]
class_pparam_controller.set_property: [ value, 0.2346002100873, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.2346002100873 ]
class_pparam_controller.set_property: [ value, 0.2246002100873, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.2246002100873 ]
class_pparam_controller.set_property: [ value, 0.21322766106769, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.21322766106769 ]
class_pparam_controller.set_property: [ value, 0.20229251777961, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.20229251777961 ]
class_pparam_controller.set_property: [ value, 0.19177002140805, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.19177002140805 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.1823360591439, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.1823360591439 ]
class_pparam_controller.set_property: [ value, 0.17290209687975, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.17290209687975 ]
class_pparam_controller.set_property: [ value, 0.16311872860582, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.16311872860582 ]
class_pparam_controller.set_property: [ value, 0.15385946934656, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.15385946934656 ]
class_pparam_controller.set_property: [ value, 0.1446002100873, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.1446002100873 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.13550930099639, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.13550930099639 ]
class_pparam_controller.set_property: [ value, 0.12641839190548, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.12641839190548 ]
class_pparam_controller.set_property: [ value, 0.099145664632753, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.099145664632753 ]
class_pparam_controller.set_property: [ value, 0.090054755541844, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.090054755541844 ]
class_pparam_controller.set_property: [ value, 0.074424771490807, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.074424771490807 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.065652841666246, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.065652841666246 ]
class_pparam_controller.set_property: [ value, 0.056880911841684, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.056880911841684 ]
class_pparam_controller.set_property: [ value, 0.049772623880402, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.049772623880402 ]
class_pparam_controller.set_property: [ value, 0.041151934225229, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.041151934225229 ]
###########----- making note
########### making synth
class_passive_controller: update_arg: fx1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
p_effect: kind: reverb
p_effect: in sig: [ [ an OutputProxy, an OutputProxy ], [ a FreeVerb, a FreeVerb ] ]
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_passive_controller: update_arg: fx2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_passive_controller: update_arg: osc2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_passive_controller: update_arg: insert1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_passive_controller: update_arg: insert2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 18, 65, 0, 0.1875, 0, 0.1875 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.1875, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/677400237' could not be opened.
********************* releasing synth
x,y, nx, ny, ox, oy: [ 19, 64, 0, 0.2, 0, 0.2 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 40, 59, 1, 0.2625, 1, 0.2625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-882411976)
done
x,y, nx, ny, ox, oy: [ 105, 44, 3, 0.45, 3, 0.45 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.45, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 118, 35, 3, 0.5625, 3, 0.5625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.5625, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 126, 29, 3, 0.6375, 3, 0.6375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-567183381' could not be opened.
x,y, nx, ny, ox, oy: [ 143, 29, 4, 0.6375, 4, 0.6375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 166, 28, 5, 0.65, 5, 0.65 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.65, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1005044735)
done
x,y, nx, ny, ox, oy: [ 174, 26, 5, 0.675, 5, 0.675 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1961778901' could not be opened.
x,y, nx, ny, ox, oy: [ 195, 21, 6, 0.7375, 6, 0.7375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.7375, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1661469529' could not be opened.
x,y, nx, ny, ox, oy: [ 196, 20, 6, 0.75, 6, 0.75 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.75, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 198, 18, 6, 0.775, 6, 0.775 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.775, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/513134416)
x,y, nx, ny, ox, oy: [ 202, 18, 6, 0.775, 6, 0.775 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.775, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-788857201)
done
x,y, nx, ny, ox, oy: [ 214, 16, 6, 0.8, 6, 0.8 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
File '/tmp/1362848660' could not be opened.
done
File '/tmp/-1372593083' could not be opened.
x,y, nx, ny, ox, oy: [ 251, 11, 7, 0.8625, 7, 0.8625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/824870151' could not be opened.
x,y, nx, ny, ox, oy: [ 272, 6, 8, 0.925, 8, 0.925 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 294, 5, 9, 0.9375, 9, 0.9375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.9375, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
###########----- making note
########### making synth
done
********************* releasing synth
###########----- making note
########### making synth
class_perfstep_frame: set_right_panel: [ curves, performer ]
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
ERROR: Message '*' not understood.
RECEIVER:
   false
ARGS:
   Integer 1

PROTECTED CALL STACK:
	Meta_MethodError:new	0xa4bb560
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = false
	Meta_DoesNotUnderstandError:new	0xa4bc6a0
		arg this = DoesNotUnderstandError
		arg receiver = false
		arg selector = *
		arg args = [ 1 ]
	Object:doesNotUnderstand	0x86f37e0
		arg this = false
		arg selector = *
		arg args = nil
	a FunctionDef	0xae33c10
		sourceCode = "<an open Function>"
		arg x = 0
		arg y = nil
	a FunctionDef	0xb02f5b0
		sourceCode = "{ arg offset, scale, ampmod, phase, fun;
				var x, y;
				var scalefun;
				scalefun = { arg x, y; 
					y = fun.(x/scale.x+phase)*ampmod;
					y = (1-y)*scale.y;
					y = y.trunc;
					y;
				};
				x = 0;
				y = scalefun.(x, y);
				Pen.lineTo(offset@y);
				scale.x.do { arg x;
					x = x+1;
					y = scalefun.(x, y);
					//x = x*scale.x;
					x = x+offset;
					//[x, y].debug(\"scaledplop\");
					Pen.lineTo(x@y);
				};

			}"
		arg offset = 0
		arg scale = Point( 50, 50 )
		arg ampmod = 1
		arg phase = 0
		arg fun = false
		var x = 0
		var y = nil
		var scalefun = a Function
	Integer:do	0x9129b20
		arg this = 1
		arg function = a Function
		var i = 0
	a FunctionDef	0xae29570
		sourceCode = "<an open Function>"
		arg uview = a JSCUserView
		var draw_band = a Function
		var numstep = 1
		var ampmods = [ 1 ]
	Meta_JPen:protRefresh	0xa2f7e60
		arg this = JPen
		arg func = a Function
		arg view = a JSCUserView
		arg server = a SwingOSC
		arg penID = 1879
		arg cmpID = 1878
		var bndl = nil
		var off = nil
		var stop = nil
		var len = nil
		var numCmd = nil
		var nextLen = nil
		var maxBndlSize = nil
		var floatSize = nil
	Function:prTry	0x953a760
		arg this = a Function
		var result = nil
		var thread = a Routine
		var next = nil
		var wasInProtectedFunc = true
	
CALL STACK:
	DoesNotUnderstandError:reportError   0xb871190
		arg this = <instance of DoesNotUnderstandError>
	< FunctionDef in Method JSCAbstractUserView:prSCViewNew >  (no arguments or variables)
	Float:do   0xb279250
		arg this = inf
		arg function = <instance of Function>
		var i = 0
	Routine:prStart   0xad7e070
		arg this = <instance of Routine>
		arg inval = 1353041391.8231
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#*]
ERROR: Message '*' not understood.
RECEIVER:
   false
ARGS:
   Integer 1

PROTECTED CALL STACK:
	Meta_MethodError:new	0xa4bb560
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = false
	Meta_DoesNotUnderstandError:new	0xa4bc6a0
		arg this = DoesNotUnderstandError
		arg receiver = false
		arg selector = *
		arg args = [ 1 ]
	Object:doesNotUnderstand	0x86f37e0
		arg this = false
		arg selector = *
		arg args = nil
	a FunctionDef	0xae33c10
		sourceCode = "<an open Function>"
		arg x = 0
		arg y = nil
	a FunctionDef	0xb02f5b0
		sourceCode = "{ arg offset, scale, ampmod, phase, fun;
				var x, y;
				var scalefun;
				scalefun = { arg x, y; 
					y = fun.(x/scale.x+phase)*ampmod;
					y = (1-y)*scale.y;
					y = y.trunc;
					y;
				};
				x = 0;
				y = scalefun.(x, y);
				Pen.lineTo(offset@y);
				scale.x.do { arg x;
					x = x+1;
					y = scalefun.(x, y);
					//x = x*scale.x;
					x = x+offset;
					//[x, y].debug(\"scaledplop\");
					Pen.lineTo(x@y);
				};

			}"
		arg offset = 0
		arg scale = Point( 50, 50 )
		arg ampmod = 1
		arg phase = 0
		arg fun = false
		var x = 0
		var y = nil
		var scalefun = a Function
	Integer:do	0x9129b20
		arg this = 1
		arg function = a Function
		var i = 0
	a FunctionDef	0xae29570
		sourceCode = "<an open Function>"
		arg uview = a JSCUserView
		var draw_band = a Function
		var numstep = 1
		var ampmods = [ 1 ]
	Meta_JPen:protRefresh	0xa2f7e60
		arg this = JPen
		arg func = a Function
		arg view = a JSCUserView
		arg server = a SwingOSC
		arg penID = 1879
		arg cmpID = 1878
		var bndl = nil
		var off = nil
		var stop = nil
		var len = nil
		var numCmd = nil
		var nextLen = nil
		var maxBndlSize = nil
		var floatSize = nil
	Function:prTry	0x953a760
		arg this = a Function
		var result = nil
		var thread = a Routine
		var next = nil
		var wasInProtectedFunc = true
	
CALL STACK:
	DoesNotUnderstandError:reportError   0xbb31db0
		arg this = <instance of DoesNotUnderstandError>
	< FunctionDef in Method JSCAbstractUserView:prSCViewNew >  (no arguments or variables)
	Float:do   0xb279250
		arg this = inf
		arg function = <instance of Function>
		var i = 1
	Routine:prStart   0xad7e070
		arg this = <instance of Routine>
		arg inval = 1353041391.8231
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#*]
********************* releasing synth
class_mini_curvegraph_view: mousedown: ( 'curve_shape': line1, 'change_curve_mode': true )
x,y, nx, ny, ox, oy: [ 42, 41, 1, 0.4875, 1, 0.4875 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1677633576' could not be opened.
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 143, 32, 4, 0.6, 4, 0.6 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 145, 32, 4, 0.6, 4, 0.6 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 158, 29, 4, 0.6375, 4, 0.6375 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1964901405)
done
File '/tmp/33485003' could not be opened.
x,y, nx, ny, ox, oy: [ 172, 24, 5, 0.7, 5, 0.7 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 175, 23, 5, 0.7125, 5, 0.7125 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-840910523' could not be opened.
x,y, nx, ny, ox, oy: [ 181, 22, 5, 0.725, 5, 0.725 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 199, 21, 6, 0.7375, 6, 0.7375 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 222, 19, 6, 0.7625, 6, 0.7625 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/2023143727)
done
File '/tmp/236533951' could not be opened.
x,y, nx, ny, ox, oy: [ 234, 18, 7, 0.775, 7, 0.775 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 245, 15, 7, 0.8125, 7, 0.8125 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/1099289815' could not be opened.
x,y, nx, ny, ox, oy: [ 248, 15, 7, 0.8125, 7, 0.8125 ]
class_pparam_controller.set_property: [ curve, [ sin1, line1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_mini_curvegraph_view: mousedown: ( 'curve_shape': sin4, 'change_curve_mode': true )
********************* releasing synth
class_mini_curvegraph_view: mousedown: ( 'curve_shape': square1, 'change_curve_mode': true )
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 10, 35, 0, 0.5625, 0, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, line1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 22, 35, 0, 0.5625, 0, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, line1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 31, 35, 0, 0.5625, 0, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, line1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-87256871)
done
x,y, nx, ny, ox, oy: [ 43, 35, 1, 0.5625, 1, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 44, 34, 1, 0.575, 1, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 48, 34, 1, 0.575, 1, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 51, 34, 1, 0.575, 1, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 59, 27, 1, 0.6625, 1, 0.6625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/202699231' could not be opened.
x,y, nx, ny, ox, oy: [ 59, 25, 1, 0.6875, 1, 0.6875 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
x,y, nx, ny, ox, oy: [ 51, 39, 1, 0.5125, 1, 0.5125 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-2108791695' could not be opened.
x,y, nx, ny, ox, oy: [ 52, 35, 1, 0.5625, 1, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 51, 28, 1, 0.65, 1, 0.65 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1506251772)
done
x,y, nx, ny, ox, oy: [ 48, 12, 1, 0.85, 1, 0.85 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 47, 5, 1, 0.9375, 1, 0.9375 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-411954765' could not be opened.
x,y, nx, ny, ox, oy: [ 47, 3, 1, 0.9625, 1, 0.9625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin1, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_mini_curvegraph_view: mousedown: ( 'curve_shape': sin2, 'change_curve_mode': true )
x,y, nx, ny, ox, oy: [ 86, 46, 2, 0.425, 2, 0.425 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin2, sin1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_mini_curvegraph_view: mousedown: ( 'curve_shape': triangle1, 'change_curve_mode': true )
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 114, 58, 3, 0.275, 3, 0.275 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin2, triangle1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_perfstep_frame: set_right_panel: [ normal, performer ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_rate, 1 ]
pknob: set_controller: modulator1_rate
REFRESH++
REFRESH++
pknob set_property: [ label, Rate ]
pknob set_property: [ value, 0.16525234754388 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_amp, 1 ]
pknob: set_controller: modulator1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.58197759710862 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_ampmod
REFRESH++
REFRESH++
pknob set_property: [ label, Amp Mod ]
pknob set_property: [ value, 0.36996489879188 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_glidefade
REFRESH++
REFRESH++
pknob set_property: [ label, Glide/Fade ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
soul2
115, 95, 10, 105, 57.783502936363, 67.783502936363
soul2
115, 95, 10, 105, 47.5, 57.5
soul2
113, 93, 10, 103, 56.567008137703, 66.567008137703
soul2
113, 93, 10, 103, 46.5, 56.5
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.051151934225229, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.051151934225229 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.061151934225229, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.061151934225229 ]
class_pparam_controller.set_property: [ value, 0.070563698931112, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.070563698931112 ]
class_pparam_controller.set_property: [ value, 0.090171542068367, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.090171542068367 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.051710003606828, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.051710003606828 ]
class_pparam_controller.set_property: [ value, 0.042094618991444, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.042094618991444 ]
class_pparam_controller.set_property: [ value, 0.032479234376059, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.032479234376059 ]
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_perfstep_frame: set_right_panel: [ curves, performer ]
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
ERROR: Message '*' not understood.
RECEIVER:
   false
ARGS:
   Integer 1

PROTECTED CALL STACK:
	Meta_MethodError:new	0xa4bb560
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = false
	Meta_DoesNotUnderstandError:new	0xa4bc6a0
		arg this = DoesNotUnderstandError
		arg receiver = false
		arg selector = *
		arg args = [ 1 ]
	Object:doesNotUnderstand	0x86f37e0
		arg this = false
		arg selector = *
		arg args = nil
	a FunctionDef	0xae33c10
		sourceCode = "<an open Function>"
		arg x = 0
		arg y = nil
	a FunctionDef	0xb02f5b0
		sourceCode = "{ arg offset, scale, ampmod, phase, fun;
				var x, y;
				var scalefun;
				scalefun = { arg x, y; 
					y = fun.(x/scale.x+phase)*ampmod;
					y = (1-y)*scale.y;
					y = y.trunc;
					y;
				};
				x = 0;
				y = scalefun.(x, y);
				Pen.lineTo(offset@y);
				scale.x.do { arg x;
					x = x+1;
					y = scalefun.(x, y);
					//x = x*scale.x;
					x = x+offset;
					//[x, y].debug(\"scaledplop\");
					Pen.lineTo(x@y);
				};

			}"
		arg offset = 0
		arg scale = Point( 50, 50 )
		arg ampmod = 1
		arg phase = 0
		arg fun = false
		var x = 0
		var y = nil
		var scalefun = a Function
	Integer:do	0x9129b20
		arg this = 1
		arg function = a Function
		var i = 0
	a FunctionDef	0xae29570
		sourceCode = "<an open Function>"
		arg uview = a JSCUserView
		var draw_band = a Function
		var numstep = 1
		var ampmods = [ 1 ]
	Meta_JPen:protRefresh	0xa2f7e60
		arg this = JPen
		arg func = a Function
		arg view = a JSCUserView
		arg server = a SwingOSC
		arg penID = 1942
		arg cmpID = 1941
		var bndl = nil
		var off = nil
		var stop = nil
		var len = nil
		var numCmd = nil
		var nextLen = nil
		var maxBndlSize = nil
		var floatSize = nil
	Function:prTry	0x953a760
		arg this = a Function
		var result = nil
		var thread = a Routine
		var next = nil
		var wasInProtectedFunc = true
	
CALL STACK:
	DoesNotUnderstandError:reportError   0xad6a0f0
		arg this = <instance of DoesNotUnderstandError>
	< FunctionDef in Method JSCAbstractUserView:prSCViewNew >  (no arguments or variables)
	Float:do   0xb8ba5d0
		arg this = inf
		arg function = <instance of Function>
		var i = 0
	Routine:prStart   0xb26bc90
		arg this = <instance of Routine>
		arg inval = 1353041433.1484
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#*]
ERROR: Message '*' not understood.
RECEIVER:
   false
ARGS:
   Integer 1

PROTECTED CALL STACK:
	Meta_MethodError:new	0xa4bb560
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = false
	Meta_DoesNotUnderstandError:new	0xa4bc6a0
		arg this = DoesNotUnderstandError
		arg receiver = false
		arg selector = *
		arg args = [ 1 ]
	Object:doesNotUnderstand	0x86f37e0
		arg this = false
		arg selector = *
		arg args = nil
	a FunctionDef	0xae33c10
		sourceCode = "<an open Function>"
		arg x = 0
		arg y = nil
	a FunctionDef	0xb02f5b0
		sourceCode = "{ arg offset, scale, ampmod, phase, fun;
				var x, y;
				var scalefun;
				scalefun = { arg x, y; 
					y = fun.(x/scale.x+phase)*ampmod;
					y = (1-y)*scale.y;
					y = y.trunc;
					y;
				};
				x = 0;
				y = scalefun.(x, y);
				Pen.lineTo(offset@y);
				scale.x.do { arg x;
					x = x+1;
					y = scalefun.(x, y);
					//x = x*scale.x;
					x = x+offset;
					//[x, y].debug(\"scaledplop\");
					Pen.lineTo(x@y);
				};

			}"
		arg offset = 0
		arg scale = Point( 50, 50 )
		arg ampmod = 1
		arg phase = 0
		arg fun = false
		var x = 0
		var y = nil
		var scalefun = a Function
	Integer:do	0x9129b20
		arg this = 1
		arg function = a Function
		var i = 0
	a FunctionDef	0xae29570
		sourceCode = "<an open Function>"
		arg uview = a JSCUserView
		var draw_band = a Function
		var numstep = 1
		var ampmods = [ 1 ]
	Meta_JPen:protRefresh	0xa2f7e60
		arg this = JPen
		arg func = a Function
		arg view = a JSCUserView
		arg server = a SwingOSC
		arg penID = 1942
		arg cmpID = 1941
		var bndl = nil
		var off = nil
		var stop = nil
		var len = nil
		var numCmd = nil
		var nextLen = nil
		var maxBndlSize = nil
		var floatSize = nil
	Function:prTry	0x953a760
		arg this = a Function
		var result = nil
		var thread = a Routine
		var next = nil
		var wasInProtectedFunc = true
	
CALL STACK:
	DoesNotUnderstandError:reportError   0xbd2f490
		arg this = <instance of DoesNotUnderstandError>
	< FunctionDef in Method JSCAbstractUserView:prSCViewNew >  (no arguments or variables)
	Float:do   0xb8ba5d0
		arg this = inf
		arg function = <instance of Function>
		var i = 1
	Routine:prStart   0xb26bc90
		arg this = <instance of Routine>
		arg inval = 1353041433.1484
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#*]
class_mini_curvegraph_view: mousedown: ( 'curve_shape': triangle1, 'change_curve_mode': true )
********************* releasing synth
x,y, nx, ny, ox, oy: [ 14, 50, 0, 0.375, 0, 0.375 ]
class_pparam_controller.set_property: [ curve, [ triangle1, square1, sin2, triangle1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 50, 44, 1, 0.45, 1, 0.45 ]
class_pparam_controller.set_property: [ curve, [ triangle1, triangle1, sin2, triangle1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/1321866157' could not be opened.
x,y, nx, ny, ox, oy: [ 79, 43, 2, 0.4625, 2, 0.4625 ]
class_pparam_controller.set_property: [ curve, [ triangle1, triangle1, triangle1, triangle1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_mini_curvegraph_view: mousedown: ( 'curve_shape': sin4, 'change_curve_mode': true )
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 20, 31, 0, 0.6125, 0, 0.6125 ]
class_pparam_controller.set_property: [ curve, [ sin4, triangle1, triangle1, triangle1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 52, 28, 1, 0.65, 1, 0.65 ]
class_pparam_controller.set_property: [ curve, [ sin4, sin4, triangle1, triangle1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
x,y, nx, ny, ox, oy: [ 72, 19, 2, 0.7625, 2, 0.7625 ]
class_pparam_controller.set_property: [ curve, [ sin4, sin4, sin4, triangle1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 105, 27, 3, 0.6625, 3, 0.6625 ]
class_pparam_controller.set_property: [ curve, [ sin4, sin4, sin4, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_perfstep_frame: set_right_panel: [ normal, performer ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_rate, 1 ]
pknob: set_controller: modulator1_rate
REFRESH++
REFRESH++
pknob set_property: [ label, Rate ]
pknob set_property: [ value, 0.14865290328316 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_amp, 1 ]
pknob: set_controller: modulator1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.58197759710862 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_ampmod
REFRESH++
REFRESH++
pknob set_property: [ label, Amp Mod ]
pknob set_property: [ value, 0.36996489879188 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_glidefade
REFRESH++
REFRESH++
pknob set_property: [ label, Glide/Fade ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
soul2
115, 95, 10, 105, 57.783502936363, 67.783502936363
soul2
115, 95, 10, 105, 47.5, 57.5
soul2
113, 93, 10, 103, 56.567008137703, 66.567008137703
soul2
113, 93, 10, 103, 46.5, 56.5
x,y, nx, ny, ox, oy: [ 22, 15, 0, 0.8125, 0, 0.8125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.9375, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 63.278350476176, 73.278350476176
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.98969072196633, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98969072196633 ]
soul2
113, 93, 10, 103, 92.041237142868, 102.04123714287
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 63.278350476176, 73.278350476176
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 55.608247445896, 65.608247445896
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.31958762928843, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31958762928843 ]
soul2
113, 93, 10, 103, 29.721649523824, 39.721649523824
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.1134020620957, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.1134020620957 ]
soul2
113, 93, 10, 103, 10.5463917749, 20.5463917749
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.099999999627471, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.099999999627471 ]
soul2
113, 93, 10, 103, 9.2999999653548, 19.299999965355
class_pparam_controller.set_property: [ value, 0.10000000149012, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10000000149012 ]
soul2
113, 93, 10, 103, 9.3000001385808, 19.300000138581
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
soul2
113, 93, 10, 103, 36.432989696972, 46.432989696972
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
********************* releasing synth
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_stepper_view: make_boxgrid: node states: 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.34, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.34
ret_range2: 0.34
normval, specrange, retrange2: [ 0.5, 128, 0.34 ]
ret_range3: 43.52
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 43.52, 'source': 4, 'norm_range': 0.34 )
range: 0.34
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
-----------controller.get_menu_items_names: [ no_preset, aaaa, azaz, olo, plop, ttt, uuuu ]
class_popup_view: set_property: [ value, 0 ]
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
class_save_preset_dialog: keyDownAction
********************* releasing synth
###########----- making note
########### making synth
action!!
class_presets_global_controller: save_current_preset_as_uname: ooooo
Instance of String {    (0xb13e0d0, gc=14, fmt=07, flg=00, set=03)
  indexed slots [5]
      0 : o
      1 : o
      2 : o
      3 : o
      4 : o
}
   Symbol 'no_preset'
Instance of String {    (0xadf0af0, gc=18, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : a
      2 : a
      3 : a
}
Instance of String {    (0xad7b2b0, gc=18, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : a
      1 : z
      2 : a
      3 : z
}
Instance of String {    (0x892de90, gc=18, fmt=07, flg=10, set=03)
  indexed slots [3]
      0 : o
      1 : l
      2 : o
}
Instance of String {    (0xadb81b0, gc=18, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : p
      1 : l
      2 : o
      3 : p
}
Instance of String {    (0xad23050, gc=18, fmt=07, flg=10, set=03)
  indexed slots [3]
      0 : t
      1 : t
      2 : t
}
Instance of String {    (0x89609f0, gc=18, fmt=07, flg=10, set=03)
  indexed slots [4]
      0 : u
      1 : u
      2 : u
      3 : u
}
class_popup_view: set_property: [ menu_items, nil ]
items, uname, index: [ [ no_preset, aaaa, azaz, olo, ooooo, plop, ttt, uuuu ], ooooo, 4 ]
class_popup_view: set_property: [ value, 4 ]
********************* releasing synth
class_presets_global_controller: [ value, 3 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, /tmp/-1367713976)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0.84979199999999 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 148.33068272406 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, nil)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0.7 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[  ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0.7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.500000309449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.998001 ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 2, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, nil)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_pparam_wavetable_controller: set_curve: custom: pathlist: List[ PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 01-03.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Add - Partials Range Odd/Add Partials Odd 03-31.wav), PathName(/home/ggz/Musique/archwavetable/Architecture Waveforms 2010 Wav24/Architecture Waveforms 2010 Wav24/Classic - Saw Filtered/Bandlimited Saw 032 Partials.wav) ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
load_sample_in_wavetable_buffer: resampling: [ 2048, 1024 ]
osc_wt_pos ctrl: (set_property -> a Function), (refresh -> a Function), (get_val -> a Function), (get_bus -> a Function), (main_controller -> a Function), 
  (save_data -> a Function), (model -> ( 'norm_val': 0, 'name': Wt-pos, 'transmit': bus, 'val': 0, 
  'spec': a ControlSpec(0, 1, 'linear', 0.01, 0, ""), 'kind': knob, 'numslot': 3, 'uname': osc1_wt_pos )), (bus -> Bus(control, 107, 1, localhost)), (new -> a Function), (update_val -> a Function), 
  (get_norm_val -> a Function), (set_val -> a Function), (load_data -> a Function)
class_passive_controller: update_arg: osc1_wt
modulation_manager: get_instr_modulation: slot_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[  ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0.7 )), ([ macro, 6 ] -> ( 'val': 0.7 )), ([ macro, 2 ] -> ( 'val': 0.7 )), ([ macro, 4 ] -> ( 'val': 0.7 )), ([ macro, 1 ] -> ( 'val': 0.7 )), 
  ([ macro, 7 ] -> ( 'val': 0.7 )), ([ macro, 3 ] -> ( 'val': 0.7 )), ([ macro, 5 ] -> ( 'val': 0.7 )),  ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ a BinaryOpUGen, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
p_effect: kind: freqshift
p_ins_effect: in sig: [ a BinaryOpUGen, a XFade2 ]
1 f1: a XFade2
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 19, 
  'osc1_pitch': 'c106' )
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 3 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 3 ]
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
###########----- making note
########### making synth
########### making fx
class_presets_global_controller: [ value, 4 ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(15, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator3_env_attack, 0 ]
class_pparam_controller: update_val: modulator3_env_attack
REFRESH++
before final_val
ext: [ modulator3_ampmod, 0 ]
class_pparam_controller: update_val: modulator3_ampmod
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
before final_val
ext: [ osc1_wt_pos, 0 ]
class_pparam_controller: update_val: osc1_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_amp, 0 ]
class_pparam_controller: update_val: osc2_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.177505486596 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_pitch, 0 ]
class_pparam_controller: update_val: modosc_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 439.99822684449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator2_glidefade, 0 ]
class_pparam_controller: update_val: modulator2_glidefade
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_sustain_time, 0 ]
class_pparam_controller: update_val: env1_sustain_time
REFRESH++
modulation_manager.set_external_value: [ [ macro, 7 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ] ]
REFRESH++
macro frame set_property: [ 7, label, Macro 8 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 7, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ osc1_intensity, 0 ]
class_pparam_controller: update_val: osc1_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ osc2_intensity, 0 ]
class_pparam_controller: update_val: osc2_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env2_sustain_time, 0 ]
class_pparam_controller: update_val: env2_sustain_time
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(18, 2048, 1, 44100, nil)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 4 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ] ]
REFRESH++
macro frame set_property: [ 4, label, Macro 5 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 4, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ pan, 0 ]
class_pparam_controller: update_val: pan
REFRESH++
pknob set_property: [ label, Pan ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ amp_mod, 0 ]
class_pparam_controller: update_val: amp_mod
REFRESH++
class_slot_column_view set_property: [ label, Amp Mod ]
class_slot_column_view set_property: [ value, 0.100000147984 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter2_arg2, 0 ]
class_pparam_controller: update_val: filter2_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 5 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ] ]
REFRESH++
macro frame set_property: [ 5, label, Macro 6 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 5, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_amp, 0 ]
class_pparam_controller: update_val: modulator3_amp
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ insert1_arg1, 0 ]
class_pparam_controller: update_val: insert1_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_filterfm, 0 ]
class_pparam_controller: update_val: modosc_filterfm
REFRESH++
before final_val
ext: [ osc2_wt_pos, 0 ]
class_pparam_controller: update_val: osc2_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env4_decay_level, 0 ]
class_pparam_controller: update_val: env4_decay_level
REFRESH++
before final_val
ext: [ env4_vel, 0 ]
class_pparam_controller: update_val: env4_vel
REFRESH++
before final_val
ext: [ modulator1_env_attack, 0 ]
class_pparam_controller: update_val: modulator1_env_attack
REFRESH++
before final_val
ext: [ insert2_arg1, 0 ]
class_pparam_controller: update_val: insert2_arg1
REFRESH++
pknob set_property: [ label, Wet/Dry ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env2_attack_level, 0 ]
class_pparam_controller: update_val: env2_attack_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env4_sustain_time, 0 ]
class_pparam_controller: update_val: env4_sustain_time
REFRESH++
before final_val
ext: [ env3_decay_time, 0 ]
class_pparam_controller: update_val: env3_decay_time
REFRESH++
before final_val
ext: [ env4_delay_time, 0 ]
class_pparam_controller: update_val: env4_delay_time
REFRESH++
before final_val
ext: [ modulator2_rate, 0 ]
class_pparam_controller: update_val: modulator2_rate
REFRESH++
before final_val
ext: [ fx1_arg3, 0 ]
class_pparam_controller: update_val: fx1_arg3
REFRESH++
pknob set_property: [ label, Damp ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_attack_time, 0 ]
class_pparam_controller: update_val: env3_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(2, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ modulator4_env_decay, 0 ]
class_pparam_controller: update_val: modulator4_env_decay
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ bypass_amp, 0 ]
class_pparam_controller: update_val: bypass_amp
REFRESH++
pknob set_property: [ label, Bypass Amp ]
pknob set_property: [ value, 1 ]
before final_val
ext: [ fx1_arg1, 0 ]
class_pparam_controller: update_val: fx1_arg1
REFRESH++
pknob set_property: [ label, Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
modulation_manager.set_external_value: [ [ macro, 6 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ] ]
REFRESH++
macro frame set_property: [ 6, label, Macro 7 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 6, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ modulator3_rate, 0 ]
class_pparam_controller: update_val: modulator3_rate
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(0, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc1_fader, 0 ]
class_pparam_controller: update_val: osc1_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
REFRESH++
before final_val
ext: [ modulator2_amp, 0 ]
class_pparam_controller: update_val: modulator2_amp
REFRESH++
before final_val
ext: [ eq_boost, 0 ]
class_pparam_controller: update_val: eq_boost
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ osc3_fader, 0 ]
class_pparam_controller: update_val: osc3_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ osc1_pitch, 0 ]
class_pparam_controller: update_val: osc1_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0.34 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0, mod, 4 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0, mod, 4 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, 5, [ 0, mod, 4 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(4, 2048, 1, 44100, nil)
REFRESH++
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(14, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
before final_val
ext: [ modulator4_glidefade, 0 ]
class_pparam_controller: update_val: modulator4_glidefade
REFRESH++
before final_val
ext: [ modulator4_ampmod, 0 ]
class_pparam_controller: update_val: modulator4_ampmod
REFRESH++
before final_val
ext: [ env1_decay_time, 0 ]
class_pparam_controller: update_val: env1_decay_time
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(12, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg4, 0 ]
class_pparam_controller: update_val: fx2_arg4
REFRESH++
before final_val
ext: [ env2_ktr, 0 ]
class_pparam_controller: update_val: env2_ktr
REFRESH++
before final_val
ext: [ env2_vel, 0 ]
class_pparam_controller: update_val: env2_vel
REFRESH++
before final_val
ext: [ bypass_mod, 0 ]
class_pparam_controller: update_val: bypass_mod
REFRESH++
class_slot_column_view set_property: [ label, Byp Mod ]
class_slot_column_view set_property: [ value, 439.99931023407 ]
class_slot_column_view set_property: [ range, [ 0, 0 ] ]
class_slot_column_view set_property: [ range, [ 1, 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 0 ] ]
class_slot_column_view set_property: [ modulation_source, [ 1 ] ]
before final_val
ext: [ env3_release_time, 0 ]
class_pparam_controller: update_val: env3_release_time
REFRESH++
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ insert2_arg2, 0 ]
class_pparam_controller: update_val: insert2_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(6, 512, 1, 44100, nil)
REFRESH++
before final_val
ext: [ env1_delay_time, 0 ]
class_pparam_controller: update_val: env1_delay_time
REFRESH++
before final_val
ext: [ env1_vel, 0 ]
class_pparam_controller: update_val: env1_vel
REFRESH++
before final_val
ext: [ env2_decay_level, 0 ]
class_pparam_controller: update_val: env2_decay_level
REFRESH++
before final_val
ext: [ fx1_arg4, 0 ]
class_pparam_controller: update_val: fx1_arg4
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_ktr, 0 ]
class_pparam_controller: update_val: env3_ktr
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(11, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ feedback_amp, 0 ]
class_pparam_controller: update_val: feedback_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_sustain_level, 0 ]
class_pparam_controller: update_val: env3_sustain_level
REFRESH++
before final_val
ext: [ osc2_pitch, 0 ]
class_pparam_controller: update_val: osc2_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_release_time, 0 ]
class_pparam_controller: update_val: env4_release_time
REFRESH++
before final_val
ext: [ eq_lowshelf, 0 ]
class_pparam_controller: update_val: eq_lowshelf
REFRESH++
before final_val
ext: [ noise_fader, 0 ]
class_pparam_controller: update_val: noise_fader
REFRESH++
pknob set_property: [ label, Noise fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_sustain_level, 0 ]
class_pparam_controller: update_val: env4_sustain_level
REFRESH++
modulation_manager.set_external_value: [ [ macro, 3 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ] ]
REFRESH++
macro frame set_property: [ 3, label, Macro 4 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 3, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
REFRESH++
before final_val
ext: [ noise_amp, 0 ]
class_pparam_controller: update_val: noise_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env3_decay_level, 0 ]
class_pparam_controller: update_val: env3_decay_level
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ noise_color, 0 ]
class_pparam_controller: update_val: noise_color
REFRESH++
pknob set_property: [ label, Color ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modosc_position, 0 ]
class_pparam_controller: update_val: modosc_position
REFRESH++
before final_val
ext: [ modosc_ring, 0 ]
class_pparam_controller: update_val: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
before final_val
ext: [ env3_vel, 0 ]
class_pparam_controller: update_val: env3_vel
REFRESH++
REFRESH++
before final_val
ext: [ filter_parseq, 0 ]
class_pparam_controller: update_val: filter_parseq
REFRESH++
pknob set_property: [ label, Par Seq ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ feedback_fader, 0 ]
class_pparam_controller: update_val: feedback_fader
REFRESH++
pknob set_property: [ label, Feedback fader ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
REFRESH++
before final_val
ext: [ modulator4_rate, 0 ]
class_pparam_controller: update_val: modulator4_rate
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ filter1_amp, 0 ]
class_pparam_controller: update_val: filter1_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
before final_val
ext: [ modulator2_env_decay, 0 ]
class_pparam_controller: update_val: modulator2_env_decay
REFRESH++
before final_val
ext: [ modosc_phase, 0 ]
class_pparam_controller: update_val: modosc_phase
REFRESH++
before final_val
ext: [ osc3_pitch, 0 ]
class_pparam_controller: update_val: osc3_pitch
REFRESH++
pknob set_property: [ label, Pitch ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg2, 0 ]
class_pparam_controller: update_val: filter1_arg2
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ filter_mix, 0 ]
class_pparam_controller: update_val: filter_mix
REFRESH++
pknob set_property: [ label, Filter Mix ]
pknob set_property: [ value, 0.5 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ osc3_wt_pos, 0 ]
class_pparam_controller: update_val: osc3_wt_pos
REFRESH++
pknob set_property: [ label, Wt-pos ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env2_delay_time, 0 ]
class_pparam_controller: update_val: env2_delay_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_level, 0 ]
class_pparam_controller: update_val: env1_attack_level
REFRESH++
before final_val
ext: [ modulator4_amp, 0 ]
class_pparam_controller: update_val: modulator4_amp
REFRESH++
before final_val
ext: [ fx2_arg2, 0 ]
class_pparam_controller: update_val: fx2_arg2
REFRESH++
before final_val
ext: [ modulator4_env_attack, 0 ]
class_pparam_controller: update_val: modulator4_env_attack
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ modulator3_env_decay, 0 ]
class_pparam_controller: update_val: modulator3_env_decay
REFRESH++
modulation_manager.set_external_value: [ [ macro, 1 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ] ]
REFRESH++
macro frame set_property: [ 1, label, Macro 2 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 1, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_amp, 0 ]
class_pparam_controller: update_val: filter2_amp
REFRESH++
pknob set_property: [ label, Filter Amp ]
pknob set_property: [ value, 0.100000147984 ]
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ osc2_fader, 0 ]
class_pparam_controller: update_val: osc2_fader
REFRESH++
pknob set_property: [ label, Filter output ]
pknob set_property: [ value, 0.5 ]
before final_val
ext: [ env4_attack_time, 0 ]
class_pparam_controller: update_val: env4_attack_time
REFRESH++
before final_val
ext: [ modulator3_glidefade, 0 ]
class_pparam_controller: update_val: modulator3_glidefade
REFRESH++
before final_val
ext: [ fx1_arg2, 0 ]
class_pparam_controller: update_val: fx1_arg2
REFRESH++
pknob set_property: [ label, Room ]
pknob set_property: [ value, 0.447474 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_decay_time, 0 ]
class_pparam_controller: update_val: env4_decay_time
REFRESH++
before final_val
ext: [ insert1_arg2, 0 ]
class_pparam_controller: update_val: insert1_arg2
REFRESH++
pknob set_property: [ label, Shift ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_attack_time, 0 ]
class_pparam_controller: update_val: env2_attack_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(16, 512, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env4_attack_level, 0 ]
class_pparam_controller: update_val: env4_attack_level
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(3, 2048, 1, 44100, nil)
REFRESH++
before final_val
ext: [ fx2_arg1, 0 ]
class_pparam_controller: update_val: fx2_arg1
REFRESH++
load_curvelist_in_buffer: size: 2048
buffer: Buffer(17, 2048, 1, 44100, nil)
REFRESH++
REFRESH++
before final_val
ext: [ env3_attack_level, 0 ]
class_pparam_controller: update_val: env3_attack_level
REFRESH++
before final_val
ext: [ filter2_arg1, 0 ]
class_pparam_controller: update_val: filter2_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 1342.9783009879 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
modulation_manager.set_external_value: [ [ macro, 0 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ] ]
REFRESH++
macro frame set_property: [ 0, label, Macro 1 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 0, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ filter2_arg3, 0 ]
class_pparam_controller: update_val: filter2_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ filter1_arg1, 0 ]
class_pparam_controller: update_val: filter1_arg1
REFRESH++
pknob set_property: [ label, Cutoff ]
pknob set_property: [ value, 2474.2979519987 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ env3_delay_time, 0 ]
class_pparam_controller: update_val: env3_delay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(9, 512, 1, 44100, /tmp/-1164802495)
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
filkindREFRESH++
class_popup_view: set_property: [ label, filter kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ modulator2_env_attack, 0 ]
class_pparam_controller: update_val: modulator2_env_attack
REFRESH++
before final_val
ext: [ env1_ktr, 0 ]
class_pparam_controller: update_val: env1_ktr
REFRESH++
before final_val
ext: [ filter1_arg3, 0 ]
class_pparam_controller: update_val: filter1_arg3
REFRESH++
pknob set_property: [ label, N/A ]
pknob set_property: [ value, 7773.2564459444 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env2_decay_time, 0 ]
class_pparam_controller: update_val: env2_decay_time
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(10, 512, 1, 44100, /tmp/254952877)
REFRESH++
before final_val
ext: [ env3_sustain_time, 0 ]
class_pparam_controller: update_val: env3_sustain_time
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ env1_attack_time, 0 ]
class_pparam_controller: update_val: env1_attack_time
REFRESH++
before final_val
ext: [ env2_release_time, 0 ]
class_pparam_controller: update_val: env2_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, Noise ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ env1_sustain_level, 0 ]
class_pparam_controller: update_val: env1_sustain_level
REFRESH++
before final_val
ext: [ eq_highshelf, 0 ]
class_pparam_controller: update_val: eq_highshelf
REFRESH++
before final_val
ext: [ osc1_amp, 0 ]
class_pparam_controller: update_val: osc1_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.216274292809 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
REFRESH++
before final_val
ext: [ osc3_intensity, 0 ]
class_pparam_controller: update_val: osc3_intensity
REFRESH++
pknob set_property: [ label, Intensity ]
pknob set_property: [ value, 439.99931023407 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ range, [ 2, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
pknob set_property: [ modulation_source, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 2 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 2 ] ]
before final_val
ext: [ modulator2_ampmod, 0 ]
class_pparam_controller: update_val: modulator2_ampmod
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/342449404)
REFRESH++
modulation_manager.set_external_value: [ [ macro, 2 ], 0 ]
modulation_manager.set_external_value: source_dict: [ Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ] ]
REFRESH++
macro frame set_property: [ 2, label, Macro 3 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
macro frame set_property: [ 2, value, 0 ]
macros: List[ ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ), ( 'label': a JSCTextField, 'knob': a JSCKnob ) ]
before final_val
ext: [ eq_freq, 0 ]
class_pparam_controller: update_val: eq_freq
REFRESH++
before final_val
ext: [ modulator1_env_decay, 0 ]
class_pparam_controller: update_val: modulator1_env_decay
REFRESH++
before final_val
ext: [ osc3_amp, 0 ]
class_pparam_controller: update_val: osc3_amp
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.585344346084 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
before final_val
ext: [ env4_ktr, 0 ]
class_pparam_controller: update_val: env4_ktr
REFRESH++
filkindREFRESH++
filkindREFRESH++2
filkindREFRESH++3
before final_val
ext: [ env1_decay_level, 0 ]
class_pparam_controller: update_val: env1_decay_level
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, fx kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
before final_val
ext: [ fx2_arg3, 0 ]
class_pparam_controller: update_val: fx2_arg3
REFRESH++
before final_val
ext: [ env1_release_time, 0 ]
class_pparam_controller: update_val: env1_release_time
REFRESH++
filkindREFRESH++
class_popup_view: set_property: [ label, insert kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 0 ]
filkindREFRESH++3
before final_val
ext: [ amp, 0 ]
class_pparam_controller: update_val: amp
REFRESH++
pknob set_property: [ label, Master Volume ]
pknob set_property: [ value, 0.859547785924 ]
class_modmatrix_view: set_property: [ value, ( 'filterfm': 0, 'phase': 0, 'ring': 0, 'position': 0 ) ]
modosc frame set_property: [ value, ( 'filterfm': 0, 'phase': 0, 'ring': 0, 'position': 0 ) ]
class_modmatrix_view: set_property: [ selected_modkind, 0 ]
modosc frame set_property: [ selected_modkind, 0 ]
pknob: set_controller: modosc_ring
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.100000147984 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ range, [ 1, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
pknob set_property: [ modulation_source, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 1 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 1 ] ]
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(1, 512, 1, 44100, /tmp/-1447581342)
REFRESH++
before final_val
ext: [ env2_sustain_level, 0 ]
class_pparam_controller: update_val: env2_sustain_level
REFRESH++
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/-644331920)
REFRESH++
REFRESH++
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
load_curve_in_wavetable_buffer: size: 1024
buffer: Buffer(13, 1024, 1, 44100, nil)
wtREFRESH++
class_popup_view: set_property: [ label, Wt ]
wtREFRESH++ 2
class_popup_view: set_property: [ value, 0 ]
wtREFRESH++ 3
muteREFRESH++
muteREFRESH++2
muteREFRESH++3
class_popup_view: set_property: [ value, 4 ]
********************* releasing synth
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
soul2
208, 188, 10, 198, 94, 104
208, 188, 10, 198, 94, 104
done
done
done
done
done
done
done
done
done
done
done
done
done
done
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
nain1
nain2
-----------controller.get_menu_items_names: [ LFO, Performer, Stepper ]
filkindREFRESH++
class_popup_view: set_property: [ label, kind ]
filkindREFRESH++2
class_popup_view: set_property: [ value, 1 ]
filkindREFRESH++3
nain3
nain3.1
class_perfstep_frame: set_right_panel: [ normal, performer ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_rate, 1 ]
pknob: set_controller: modulator1_rate
REFRESH++
REFRESH++
pknob set_property: [ label, Rate ]
pknob set_property: [ value, 0.14865247801588 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_amp, 1 ]
pknob: set_controller: modulator1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.581978265625 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_ampmod
REFRESH++
REFRESH++
pknob set_property: [ label, Amp Mod ]
pknob set_property: [ value, 0.369964413009 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_glidefade
REFRESH++
REFRESH++
pknob set_property: [ label, Glide/Fade ]
pknob set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
REFRESH++
class_curvegraph_view: set_property: [ curve, [ sin4, sin4, sin4, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ] ]
class_curvegraph_view: set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.9375, 1, 1, 1, 1, 1, 1 ] ]
REFRESH++
class_curvegraph_view: set_property: [ curve, [ sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ] ]
class_curvegraph_view: set_property: [ curve_amps, [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ] ]
nain4
soul2
115, 95, 10, 105, 57.783465, 67.783465
soul2
115, 95, 10, 105, 95, 105
********************* releasing synth
soul2
113, 93, 10, 103, 56.566971, 66.566971
soul2
113, 93, 10, 103, 93, 103
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_mod_slot: mouseDownAction: buttonNumber: 1
move: [ 4, 6, -4, 0.3 ]
class_pparam_controller.set_property: [ range, [ 0, 0.3 ], true ]
pknob set_property: [ range, [ 0, 0.3 ] ]
move: [ 3, 6, -5, 0.29 ]
class_pparam_controller.set_property: [ range, [ 0, 0.29 ], true ]
pknob set_property: [ range, [ 0, 0.29 ] ]
class_mod_slot: mouseUpAction: buttonNumber: nil
class_pparam_controller.set_property: [ update_range, [ 0, 0.29 ], true ]
class_passive_controller: update_arg: osc1_pitch
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
pknob set_property: [ update_range, [ 0, 0.29 ] ]
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 55.608247445896, 65.608247445896
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.52577319554985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52577319554985 ]
soul2
113, 93, 10, 103, 48.896907186136, 58.896907186136
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.31958762928843, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31958762928843 ]
soul2
113, 93, 10, 103, 29.721649523824, 39.721649523824
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.28865979425609, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28865979425609 ]
class_pparam_controller.set_property: [ value, 0.26804123725742, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26804123725742 ]
soul2
113, 93, 10, 103, 24.92783506494, 34.92783506494
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.16494845319539, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16494845319539 ]
soul2
113, 93, 10, 103, 15.340206147172, 25.340206147172
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 55.608247445896, 65.608247445896
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
********************* releasing synth
###########----- making note
########### making synth
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_stepper_view: make_boxgrid: node states: 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
class_stepper_view: make_boxgrid: node states: 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
class_stepper_view: make_boxgrid: node states: 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps1, value, [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps1
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_stepper_view: make_boxgrid: node states: 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
class_stepper_view: make_boxgrid: node states: 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
class_pparam_steps_controller.set_property: [ modulator1_steps2, value, [ 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], false ]
class_passive_controller: update_arg: modulator1_steps2
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.29, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.29
ret_range2: 0.29
normval, specrange, retrange2: [ 0.5, 128, 0.29 ]
ret_range3: 37.12
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 37.12, 'source': 4, 'norm_range': 0.29 )
range: 0.29
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
********************* releasing synth
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.12371134012938, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.12371134012938 ]
soul2
113, 93, 10, 103, 11.505154632032, 21.505154632032
class_pparam_controller.set_property: [ value, 0.1134020620957, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.1134020620957 ]
soul2
113, 93, 10, 103, 10.5463917749, 20.5463917749
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.010309278033674, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010309278033674 ]
soul2
113, 93, 10, 103, 0.95876285713166, 10.958762857132
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
class_pparam_controller.set_property: [ value, 0.1134020620957, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.1134020620957 ]
soul2
113, 93, 10, 103, 10.5463917749, 20.5463917749
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.16494845319539, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16494845319539 ]
soul2
113, 93, 10, 103, 15.340206147172, 25.340206147172
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.26804123725742, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26804123725742 ]
soul2
113, 93, 10, 103, 24.92783506494, 34.92783506494
class_pparam_controller.set_property: [ value, 0.28865979425609, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28865979425609 ]
soul2
113, 93, 10, 103, 26.845360865816, 36.845360865816
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.31958762928843, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31958762928843 ]
soul2
113, 93, 10, 103, 29.721649523824, 39.721649523824
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.8865979379043, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.8865979379043 ]
soul2
113, 93, 10, 103, 82.4536082251, 92.4536082251
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.26804123725742, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26804123725742 ]
soul2
113, 93, 10, 103, 24.92783506494, 34.92783506494
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
###########----- making note
########### making synth
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.061855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.061855670064688 ]
soul2
113, 93, 10, 103, 5.752577316016, 15.752577316016
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.012479, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.012479 ]
class_pparam_controller.set_property: [ value, 0.002479, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.002479 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0 ]
class_pparam_controller.set_property: [ value, 0.012871156862745, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.012871156862745 ]
class_pparam_controller.set_property: [ value, 0.032479, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.032479 ]
class_pparam_controller.set_property: [ value, 0.042282921568627, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.042282921568627 ]
class_pparam_controller.set_property: [ value, 0.061890764705882, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.061890764705882 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.090171307692308, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.090171307692308 ]
class_pparam_controller.set_property: [ value, 0.099786692307692, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.099786692307692 ]
class_pparam_controller.set_property: [ value, 0.10940207692308, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.10940207692308 ]
class_pparam_controller.set_property: [ value, 0.12863284615385, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.12863284615385 ]
class_pparam_controller.set_property: [ value, 0.15512050943396, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.15512050943396 ]
class_pparam_controller.set_property: [ value, 0.17398843396226, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.17398843396226 ]
class_pparam_controller.set_property: [ value, 0.20229032075472, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.20229032075472 ]
class_pparam_controller.set_property: [ value, 0.23059220754717, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.23059220754717 ]
class_pparam_controller.set_property: [ value, 0.24002616981132, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.24002616981132 ]
class_pparam_controller.set_property: [ value, 0.24946013207547, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.24946013207547 ]
class_pparam_controller.set_property: [ value, 0.26832805660377, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.26832805660377 ]
class_pparam_controller.set_property: [ value, 0.27776201886792, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.27776201886792 ]
class_pparam_controller.set_property: [ value, 0.28719598113208, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.28719598113208 ]
class_pparam_controller.set_property: [ value, 0.29662994339623, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.29662994339623 ]
class_pparam_controller.set_property: [ value, 0.32493183018868, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.32493183018868 ]
class_pparam_controller.set_property: [ value, 0.33436579245283, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.33436579245283 ]
class_pparam_controller.set_property: [ value, 0.34379975471698, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.34379975471698 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.37210164150943, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.37210164150943 ]
class_pparam_controller.set_property: [ value, 0.38153560377358, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.38153560377358 ]
class_pparam_controller.set_property: [ value, 0.39096956603774, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.39096956603774 ]
class_pparam_controller.set_property: [ value, 0.40983749056604, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.40983749056604 ]
class_pparam_controller.set_property: [ value, 0.41210862962963, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.41210862962963 ]
class_pparam_controller.set_property: [ value, 0.42136788888889, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.42136788888889 ]
class_pparam_controller.set_property: [ value, 0.43062714814815, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.43062714814815 ]
class_pparam_controller.set_property: [ value, 0.45840492592593, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.45840492592593 ]
class_pparam_controller.set_property: [ value, 0.46766418518519, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.46766418518519 ]
class_pparam_controller.set_property: [ value, 0.47692344444444, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.47692344444444 ]
class_pparam_controller.set_property: [ value, 0.49544196296296, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.49544196296296 ]
class_pparam_controller.set_property: [ value, 0.50470122222222, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50470122222222 ]
class_pparam_controller.set_property: [ value, 0.50520627272727, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50520627272727 ]
class_pparam_controller.set_property: [ value, 0.50569328571429, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50569328571429 ]
class_pparam_controller.set_property: [ value, 0.52370707017544, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.52370707017544 ]
class_pparam_controller.set_property: [ value, 0.532479, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.532479 ]
class_pparam_controller.set_property: [ value, 0.55834106896552, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55834106896552 ]
class_pparam_controller.set_property: [ value, 0.55790272881356, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55790272881356 ]
class_pparam_controller.set_property: [ value, 0.56637730508475, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.56637730508475 ]
class_pparam_controller.set_property: [ value, 0.58332645762712, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.58332645762712 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.59180103389831, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.59180103389831 ]
class_pparam_controller.set_property: [ value, 0.60027561016949, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60027561016949 ]
class_pparam_controller.set_property: [ value, 0.60875018644068, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60875018644068 ]
class_pparam_controller.set_property: [ value, 0.62414566666667, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.62414566666667 ]
class_pparam_controller.set_property: [ value, 0.62264293442623, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.62264293442623 ]
class_pparam_controller.set_property: [ value, 0.62118867741935, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.62118867741935 ]
class_pparam_controller.set_property: [ value, 0.63731770967742, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.63731770967742 ]
class_pparam_controller.set_property: [ value, 0.6356536031746, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6356536031746 ]
class_pparam_controller.set_property: [ value, 0.64359011111111, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.64359011111111 ]
class_pparam_controller.set_property: [ value, 0.65152661904762, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.65152661904762 ]
class_pparam_controller.set_property: [ value, 0.6496665, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6496665 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.657479, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.657479 ]
class_pparam_controller.set_property: [ value, 0.6652915, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6652915 ]
class_pparam_controller.set_property: [ value, 0.673104, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.673104 ]
class_pparam_controller.set_property: [ value, 0.6809165, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6809165 ]
class_pparam_controller.set_property: [ value, 0.6965415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6965415 ]
class_pparam_controller.set_property: [ value, 0.704354, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.704354 ]
class_pparam_controller.set_property: [ value, 0.7121665, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.7121665 ]
class_pparam_controller.set_property: [ value, 0.719979, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.719979 ]
class_pparam_controller.set_property: [ value, 0.735604, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.735604 ]
class_pparam_controller.set_property: [ value, 0.7590415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.7590415 ]
class_pparam_controller.set_property: [ value, 0.7746665, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.7746665 ]
class_pparam_controller.set_property: [ value, 0.782479, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.782479 ]
class_pparam_controller.set_property: [ value, 0.78632515384615, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.78632515384615 ]
class_pparam_controller.set_property: [ value, 0.782479, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.782479 ]
class_pparam_controller.set_property: [ value, 0.79005475757576, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.79005475757576 ]
class_pparam_controller.set_property: [ value, 0.78621034328358, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.78621034328358 ]
class_pparam_controller.set_property: [ value, 0.79367302985075, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.79367302985075 ]
class_pparam_controller.set_property: [ value, 0.80113571641791, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.80113571641791 ]
class_pparam_controller.set_property: [ value, 0.81189076470588, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.81189076470588 ]
class_pparam_controller.set_property: [ value, 0.80784131884058, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.80784131884058 ]
class_pparam_controller.set_property: [ value, 0.81508769565217, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.81508769565217 ]
class_pparam_controller.set_property: [ value, 0.80712688732394, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.80712688732394 ]
class_pparam_controller.set_property: [ value, 0.81416914084507, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.81416914084507 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.77495345457056, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.77495345457056 ]
class_pparam_controller.set_property: [ value, 0.76514953300193, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.76514953300193 ]
class_pparam_controller.set_property: [ value, 0.75534561143331, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.75534561143331 ]
class_pparam_controller.set_property: [ value, 0.73869744273186, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.73869744273186 ]
class_pparam_controller.set_property: [ value, 0.72926348046771, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.72926348046771 ]
class_pparam_controller.set_property: [ value, 0.71982951820356, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.71982951820356 ]
class_pparam_controller.set_property: [ value, 0.71231728899322, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.71231728899322 ]
class_pparam_controller.set_property: [ value, 0.70305802973396, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.70305802973396 ]
class_pparam_controller.set_property: [ value, 0.68689641357234, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.68689641357234 ]
class_pparam_controller.set_property: [ value, 0.67780550448143, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.67780550448143 ]
class_pparam_controller.set_property: [ value, 0.67131199798793, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.67131199798793 ]
class_pparam_controller.set_property: [ value, 0.66238342655936, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.66238342655936 ]
class_pparam_controller.set_property: [ value, 0.63873054435384, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.63873054435384 ]
class_pparam_controller.set_property: [ value, 0.63313465808645, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.63313465808645 ]
class_pparam_controller.set_property: [ value, 0.62772846287897, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.62772846287897 ]
class_pparam_controller.set_property: [ value, 0.60583580751174, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60583580751174 ]
class_pparam_controller.set_property: [ value, 0.60105438674671, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60105438674671 ]
class_pparam_controller.set_property: [ value, 0.59285766543523, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.59285766543523 ]
class_pparam_controller.set_property: [ value, 0.57646422281228, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.57646422281228 ]
class_pparam_controller.set_property: [ value, 0.56826750150081, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.56826750150081 ]
class_pparam_controller.set_property: [ value, 0.55187405887786, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55187405887786 ]
class_pparam_controller.set_property: [ value, 0.54804010858701, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.54804010858701 ]
class_pparam_controller.set_property: [ value, 0.5443278710038, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.5443278710038 ]
class_pparam_controller.set_property: [ value, 0.53291914084507, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.53291914084507 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.52510664084507, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.52510664084507 ]
class_pparam_controller.set_property: [ value, 0.50948164084507, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50948164084507 ]
class_pparam_controller.set_property: [ value, 0.50166914084507, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50166914084507 ]
class_pparam_controller.set_property: [ value, 0.49385664084507, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.49385664084507 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.48385664084507, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.48385664084507 ]
class_pparam_controller.set_property: [ value, 0.47385664084507, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.47385664084507 ]
class_pparam_controller.set_property: [ value, 0.46444487613919, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.46444487613919 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.45539510238353, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.45539510238353 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.44577971776815, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.44577971776815 ]
class_pparam_controller.set_property: [ value, 0.43616433315276, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.43616433315276 ]
class_pparam_controller.set_property: [ value, 0.42522918986468, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.42522918986468 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
soul2
113, 93, 10, 103, 36.432989696972, 46.432989696972
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 55.608247445896, 65.608247445896
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
class_pparam_controller.set_property: [ value, 0.63917523622513, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917523622513 ]
soul2
113, 93, 10, 103, 59.443296968937, 69.443296968937
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.96907216310501, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216310501 ]
soul2
113, 93, 10, 103, 90.123711168766, 100.12371116877
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.72365931372549, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.72365931372549 ]
class_pparam_controller.set_property: [ value, 0.71385539215686, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.71385539215686 ]
class_pparam_controller.set_property: [ value, 0.70405147058824, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.70405147058824 ]
class_pparam_controller.set_property: [ value, 0.69424754901961, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.69424754901961 ]
class_pparam_controller.set_property: [ value, 0.66483578431373, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.66483578431373 ]
class_pparam_controller.set_property: [ value, 0.632875, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.632875 ]
class_pparam_controller.set_property: [ value, 0.612875, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.612875 ]
class_pparam_controller.set_property: [ value, 0.60601225490196, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.60601225490196 ]
class_pparam_controller.set_property: [ value, 0.59620833333333, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.59620833333333 ]
class_pparam_controller.set_property: [ value, 0.57660049019608, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.57660049019608 ]
class_pparam_controller.set_property: [ value, 0.56095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.56095192307692 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.63917523622513, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917523622513 ]
soul2
113, 93, 10, 103, 59.443296968937, 69.443296968937
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.46369072832622, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.46369072832622 ]
class_pparam_controller.set_property: [ value, 0.48292149755699, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.48292149755699 ]
class_pparam_controller.set_property: [ value, 0.49126692571373, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.49126692571373 ]
class_pparam_controller.set_property: [ value, 0.51613828077377, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.51613828077377 ]
class_pparam_controller.set_property: [ value, 0.53432009895559, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.53432009895559 ]
class_pparam_controller.set_property: [ value, 0.5434110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.5434110080465 ]
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.58262669432101, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.58262669432101 ]
class_pparam_controller.set_property: [ value, 0.59243061588963, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.59243061588963 ]
class_pparam_controller.set_property: [ value, 0.60223453745826, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60223453745826 ]
class_pparam_controller.set_property: [ value, 0.61203845902689, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.61203845902689 ]
class_pparam_controller.set_property: [ value, 0.6334110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6334110080465 ]
class_pparam_controller.set_property: [ value, 0.6434110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6434110080465 ]
class_pparam_controller.set_property: [ value, 0.6534110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6534110080465 ]
class_pparam_controller.set_property: [ value, 0.6734110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.6734110080465 ]
class_pparam_controller.set_property: [ value, 0.69725716189265, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.69725716189265 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.70725716189265, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.70725716189265 ]
class_pparam_controller.set_property: [ value, 0.71725716189265, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.71725716189265 ]
class_pparam_controller.set_property: [ value, 0.72725716189265, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.72725716189265 ]
class_pparam_controller.set_property: [ value, 0.74725716189265, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.74725716189265 ]
class_pparam_controller.set_property: [ value, 0.75725716189265, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.75725716189265 ]
class_pparam_controller.set_property: [ value, 0.76588461287304, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.76588461287304 ]
class_pparam_controller.set_property: [ value, 0.77418023881573, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.77418023881573 ]
class_pparam_controller.set_property: [ value, 0.7934110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.7934110080465 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.8034110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.8034110080465 ]
class_pparam_controller.set_property: [ value, 0.8134110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.8134110080465 ]
class_pparam_controller.set_property: [ value, 0.8334110080465, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.8334110080465 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.79419532177199, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.79419532177199 ]
class_pparam_controller.set_property: [ value, 0.77680723446159, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.77680723446159 ]
class_pparam_controller.set_property: [ value, 0.76859619323168, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.76859619323168 ]
class_pparam_controller.set_property: [ value, 0.75007767471316, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.75007767471316 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.73084690548239, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.73084690548239 ]
class_pparam_controller.set_property: [ value, 0.72123152086701, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.72123152086701 ]
class_pparam_controller.set_property: [ value, 0.70200075163624, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.70200075163624 ]
class_pparam_controller.set_property: [ value, 0.69347390112826, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.69347390112826 ]
class_pparam_controller.set_property: [ value, 0.68526285989835, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.68526285989835 ]
class_pparam_controller.set_property: [ value, 0.67735040198589, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.67735040198589 ]
class_pparam_controller.set_property: [ value, 0.65916858380407, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.65916858380407 ]
class_pparam_controller.set_property: [ value, 0.65007767471316, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.65007767471316 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.97938144207001, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144207001 ]
soul2
113, 93, 10, 103, 91.082474112511, 101.08247411251
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 55.608247445896, 65.608247445896
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.28865979425609, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28865979425609 ]
soul2
113, 93, 10, 103, 26.845360865816, 36.845360865816
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.26804123725742, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26804123725742 ]
soul2
113, 93, 10, 103, 24.92783506494, 34.92783506494
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.12371134012938, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.12371134012938 ]
soul2
113, 93, 10, 103, 11.505154632032, 21.505154632032
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.02061855699867, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.02061855699867 ]
soul2
113, 93, 10, 103, 1.9175258008763, 11.917525800876
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.02061855699867, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.02061855699867 ]
soul2
113, 93, 10, 103, 1.9175258008763, 11.917525800876
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.061855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.061855670064688 ]
soul2
113, 93, 10, 103, 5.752577316016, 15.752577316016
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.1134020620957, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.1134020620957 ]
soul2
113, 93, 10, 103, 10.5463917749, 20.5463917749
class_pparam_controller.set_property: [ value, 0.12371134012938, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.12371134012938 ]
soul2
113, 93, 10, 103, 11.505154632032, 21.505154632032
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.16494845319539, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16494845319539 ]
soul2
113, 93, 10, 103, 15.340206147172, 25.340206147172
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
class_pparam_controller.set_property: [ value, 0.26804123725742, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26804123725742 ]
soul2
113, 93, 10, 103, 24.92783506494, 34.92783506494
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.31958762928843, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31958762928843 ]
soul2
113, 93, 10, 103, 29.721649523824, 39.721649523824
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.77319586277008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319586277008 ]
soul2
113, 93, 10, 103, 71.907215237617, 81.907215237617
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 11, 61, 0, 0.2375, 0, 0.2375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 50, 25, 1, 0.6875, 1, 0.6875 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
********************* releasing synth
x,y, nx, ny, ox, oy: [ 86, 67, 2, 0.1625, 2, 0.1625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
File '/tmp/-1377924159' could not be opened.
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 115, 33, 3, 0.5875, 3, 0.5875 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 145, 15, 4, 0.8125, 4, 0.8125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 170, 59, 5, 0.2625, 5, 0.2625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 0.2625, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
********************* releasing synth
x,y, nx, ny, ox, oy: [ 315, 44, 9, 0.45, 9, 0.45 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 0.2625, 1, 1, 1, 0.45, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 258, 35, 8, 0.5625, 8, 0.5625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 0.2625, 1, 1, 0.5625, 0.45, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 254, 37, 7, 0.5375, 7, 0.5375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 0.2625, 1, 0.5375, 0.5625, 0.45, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 201, 38, 6, 0.525, 6, 0.525 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 0.2625, 0.525, 0.5375, 0.5625, 0.45, 1, 1, 1, 1, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
File '/tmp/309271747' could not be opened.
x,y, nx, ny, ox, oy: [ 416, 36, 13, 0.55, 13, 0.55 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 0.2625, 0.525, 0.5375, 0.5625, 0.45, 1, 1, 1, 0.55, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 367, 50, 11, 0.375, 11, 0.375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 0.2625, 0.525, 0.5375, 0.5625, 0.45, 1, 0.375, 1, 0.55, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
********************* releasing synth
x,y, nx, ny, ox, oy: [ 487, 40, 15, 0.5, 15, 0.5 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.2375, 0.6875, 0.1625, 0.5875, 0.8125, 0.2625, 0.525, 0.5375, 0.5625, 0.45, 1, 0.375, 1, 0.55, 1, 0.5 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(8, 2048, 1, 44100, nil)
done
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 426, 54, 13, 0.325, 13, 0.325 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.9375, 1, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1379129763)
done
x,y, nx, ny, ox, oy: [ 333, 47, 10, 0.4125, 10, 0.4125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.9375, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 328, 47, 10, 0.4125, 10, 0.4125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.9375, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 325, 47, 10, 0.4125, 10, 0.4125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.9375, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1539372685)
x,y, nx, ny, ox, oy: [ 321, 47, 10, 0.4125, 10, 0.4125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.9375, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1215326376)
done
x,y, nx, ny, ox, oy: [ 319, 47, 9, 0.4125, 9, 0.4125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.4125, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
File '/tmp/-1089755699' could not be opened.
done
x,y, nx, ny, ox, oy: [ 316, 47, 9, 0.4125, 9, 0.4125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.4125, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/1950467936' could not be opened.
File '/tmp/-1768585203' could not be opened.
x,y, nx, ny, ox, oy: [ 309, 46, 9, 0.425, 9, 0.425 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.425, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/1762862370' could not be opened.
x,y, nx, ny, ox, oy: [ 308, 46, 9, 0.425, 9, 0.425 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.425, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/1655051444' could not be opened.
x,y, nx, ny, ox, oy: [ 295, 34, 9, 0.575, 9, 0.575 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.575, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1166615989' could not be opened.
x,y, nx, ny, ox, oy: [ 290, 28, 9, 0.65, 9, 0.65 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.4125, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 339, 28, 10, 0.65, 10, 0.65 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.65, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 343, 30, 10, 0.625, 10, 0.625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 1, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/723884842' could not be opened.
x,y, nx, ny, ox, oy: [ 379, 30, 11, 0.625, 11, 0.625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 1, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 408, 30, 12, 0.625, 12, 0.625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 1, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/2145680956)
done
x,y, nx, ny, ox, oy: [ 470, 22, 14, 0.725, 14, 0.725 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.725, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-903290807' could not be opened.
x,y, nx, ny, ox, oy: [ 471, 21, 14, 0.7375, 14, 0.7375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.7375, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 475, 17, 14, 0.7875, 14, 0.7875 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.7875, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/713600121)
done
File '/tmp/210003965' could not be opened.
********************* releasing synth
x,y, nx, ny, ox, oy: [ 479, 15, 14, 0.8125, 14, 0.8125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.8125, 1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/1497914548' could not be opened.
x,y, nx, ny, ox, oy: [ 500, 8, 15, 0.9, 15, 0.9 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/1773665503' could not be opened.
x,y, nx, ny, ox, oy: [ 501, 8, 15, 0.9, 15, 0.9 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
doneFile '/tmp/1722387818' could not be opened.

x,y, nx, ny, ox, oy: [ 503, 8, 15, 0.9, 15, 0.9 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 476, 10, 14, 0.875, 14, 0.875 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.875, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 464, 13, 14, 0.8375, 14, 0.8375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.8375, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1126172662)
x,y, nx, ny, ox, oy: [ 453, 15, 14, 0.8125, 14, 0.8125 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.325, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/1816932195)
x,y, nx, ny, ox, oy: [ 434, 17, 13, 0.7875, 13, 0.7875 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.7875, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-692355818)
done
File '/tmp/-521214753' could not be opened.
x,y, nx, ny, ox, oy: [ 419, 18, 13, 0.775, 13, 0.775 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.625, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1343291758' could not be opened.
x,y, nx, ny, ox, oy: [ 411, 21, 12, 0.7375, 12, 0.7375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.7375, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1930726133' could not be opened.
x,y, nx, ny, ox, oy: [ 394, 28, 12, 0.65, 12, 0.65 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 369, 37, 11, 0.5375, 11, 0.5375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.5375, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 354, 43, 11, 0.4625, 11, 0.4625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.625, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-79050622' could not be opened.
x,y, nx, ny, ox, oy: [ 327, 48, 10, 0.4, 10, 0.4 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.925, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 285, 54, 8, 0.325, 8, 0.325 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.325, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 272, 56, 8, 0.3, 8, 0.3 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.3, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 269, 60, 8, 0.25, 8, 0.25 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.25, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 266, 64, 8, 0.2, 8, 0.2 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.2, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/897454889)
###########----- making note
########### making synth
done
File '/tmp/-668012059' could not be opened.
x,y, nx, ny, ox, oy: [ 266, 65, 8, 0.1875, 8, 0.1875 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.1875, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-669207022' could not be opened.
x,y, nx, ny, ox, oy: [ 267, 67, 8, 0.1625, 8, 0.1625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.1625, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1191539726' could not be opened.
x,y, nx, ny, ox, oy: [ 266, 67, 8, 0.1625, 8, 0.1625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.1625, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 265, 68, 8, 0.15, 8, 0.15 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.15, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1628363569)
done
x,y, nx, ny, ox, oy: [ 264, 69, 8, 0.1375, 8, 0.1375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.1375, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 267, 67, 8, 0.1625, 8, 0.1625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.1625, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 268, 66, 8, 0.175, 8, 0.175 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.175, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/172382909)
x,y, nx, ny, ox, oy: [ 271, 66, 8, 0.175, 8, 0.175 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.175, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1909269415)
done
x,y, nx, ny, ox, oy: [ 274, 64, 8, 0.2, 8, 0.2 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.2, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 276, 64, 8, 0.2, 8, 0.2 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.2, 0.65, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1958866715)
done
File '/tmp/774334181' could not be opened.
x,y, nx, ny, ox, oy: [ 288, 62, 9, 0.225, 9, 0.225 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.2, 0.225, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1708641480' could not be opened.
x,y, nx, ny, ox, oy: [ 292, 61, 9, 0.2375, 9, 0.2375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.2, 0.2375, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-842500248' could not be opened.
x,y, nx, ny, ox, oy: [ 299, 61, 9, 0.2375, 9, 0.2375 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.2, 0.2375, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 306, 59, 9, 0.2625, 9, 0.2625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.2, 0.2625, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-866704541)
done
x,y, nx, ny, ox, oy: [ 307, 59, 9, 0.2625, 9, 0.2625 ]
class_pparam_controller.set_property: [ curve_amps, [ 0.8125, 0.2625, 1, 0.6375, 0.6375, 0.675, 0.8, 0.8625, 0.2, 0.2625, 0.4, 0.4625, 0.65, 0.775, 0.8125, 0.9 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.93814432993531, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93814432993531 ]
soul2
113, 93, 10, 103, 87.247422683984, 97.247422683984
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 0.98969072196633, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98969072196633 ]
soul2
113, 93, 10, 103, 92.041237142868, 102.04123714287
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.8865979379043, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.8865979379043 ]
soul2
113, 93, 10, 103, 82.4536082251, 92.4536082251
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 63.278350476176, 73.278350476176
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 55.608247445896, 65.608247445896
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.31958762928843, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31958762928843 ]
soul2
113, 93, 10, 103, 29.721649523824, 39.721649523824
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.16494845319539, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16494845319539 ]
soul2
113, 93, 10, 103, 15.340206147172, 25.340206147172
class_pparam_controller.set_property: [ value, 0.12371134012938, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.12371134012938 ]
class_pparam_controller.set_property: [ value, 0.1134020620957, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.1134020620957 ]
soul2
113, 93, 10, 103, 10.5463917749, 20.5463917749
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.02061855699867, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.02061855699867 ]
soul2
113, 93, 10, 103, 1.9175258008763, 11.917525800876
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.061855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.061855670064688 ]
soul2
113, 93, 10, 103, 5.752577316016, 15.752577316016
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.12371134012938, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.12371134012938 ]
soul2
113, 93, 10, 103, 11.505154632032, 21.505154632032
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
class_pparam_controller.set_property: [ value, 0.26804123725742, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26804123725742 ]
soul2
113, 93, 10, 103, 24.92783506494, 34.92783506494
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.31958762928843, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31958762928843 ]
soul2
113, 93, 10, 103, 29.721649523824, 39.721649523824
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
class_pparam_controller.set_property: [ value, 0.8865979379043, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.8865979379043 ]
soul2
113, 93, 10, 103, 82.4536082251, 92.4536082251
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.64007767471316, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.64007767471316 ]
class_pparam_controller.set_property: [ value, 0.63007767471316, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.63007767471316 ]
class_pparam_controller.set_property: [ value, 0.62066591000728, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.62066591000728 ]
class_pparam_controller.set_property: [ value, 0.61086198843865, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.61086198843865 ]
class_pparam_controller.set_property: [ value, 0.60105806687003, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60105806687003 ]
class_pparam_controller.set_property: [ value, 0.5912541453014, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.5912541453014 ]
class_pparam_controller.set_property: [ value, 0.58276998240547, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.58276998240547 ]
class_pparam_controller.set_property: [ value, 0.5635392131747, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.5635392131747 ]
class_pparam_controller.set_property: [ value, 0.55573805207165, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55573805207165 ]
class_pparam_controller.set_property: [ value, 0.5463040898075, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.5463040898075 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.48748056039574, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.48748056039574 ]
class_pparam_controller.set_property: [ value, 0.47767663882711, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.47767663882711 ]
class_pparam_controller.set_property: [ value, 0.46787271725848, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.46787271725848 ]
class_pparam_controller.set_property: [ value, 0.45806879568986, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.45806879568986 ]
class_pparam_controller.set_property: [ value, 0.4384609525526, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.4384609525526 ]
class_pparam_controller.set_property: [ value, 0.42865703098397, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.42865703098397 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.41885310941535, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.41885310941535 ]
class_pparam_controller.set_property: [ value, 0.40904918784672, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.40904918784672 ]
class_pparam_controller.set_property: [ value, 0.39904918784672, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.39904918784672 ]
class_pparam_controller.set_property: [ value, 0.38904918784672, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.38904918784672 ]
class_pparam_controller.set_property: [ value, 0.36002958000358, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.36002958000358 ]
class_pparam_controller.set_property: [ value, 0.35135688015441, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.35135688015441 ]
class_pparam_controller.set_property: [ value, 0.34301145199766, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.34301145199766 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 63.278350476176, 73.278350476176
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.52577319554985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52577319554985 ]
soul2
113, 93, 10, 103, 48.896907186136, 58.896907186136
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.40206184983253, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206184983253 ]
soul2
113, 93, 10, 103, 37.391752034426, 47.391752034426
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.02061855699867, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.02061855699867 ]
soul2
113, 93, 10, 103, 1.9175258008763, 11.917525800876
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.93814432993531, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93814432993531 ]
soul2
113, 93, 10, 103, 87.247422683984, 97.247422683984
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.98969072196633, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98969072196633 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 55.608247445896, 65.608247445896
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.61855667829514, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855667829514 ]
soul2
113, 93, 10, 103, 57.525771081448, 67.525771081448
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.8865979379043, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.8865979379043 ]
soul2
113, 93, 10, 103, 82.4536082251, 92.4536082251
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.93814432993531, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.93814432993531 ]
soul2
113, 93, 10, 103, 87.247422683984, 97.247422683984
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 0.98969072196633, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 0.98969072196633 ]
soul2
113, 93, 10, 103, 92.041237142868, 102.04123714287
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_ampmod, 0 ]
class_pparam_controller: update_val: modulator1_ampmod
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.57095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.57095192307692 ]
class_pparam_controller.set_property: [ value, 0.58095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.58095192307692 ]
class_pparam_controller.set_property: [ value, 0.60095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.60095192307692 ]
class_pparam_controller.set_property: [ value, 0.61095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.61095192307692 ]
class_pparam_controller.set_property: [ value, 0.62095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.62095192307692 ]
class_pparam_controller.set_property: [ value, 0.63095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.63095192307692 ]
class_pparam_controller.set_property: [ value, 0.65095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.65095192307692 ]
class_pparam_controller.set_property: [ value, 0.6589911387632, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.6589911387632 ]
class_pparam_controller.set_property: [ value, 0.65710576923077, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.65710576923077 ]
class_pparam_controller.set_property: [ value, 0.65529154571843, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.65529154571843 ]
class_pparam_controller.set_property: [ value, 0.65354451566952, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.65354451566952 ]
class_pparam_controller.set_property: [ value, 0.65186101398601, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.65186101398601 ]
class_pparam_controller.set_property: [ value, 0.64130906593407, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.64130906593407 ]
class_pparam_controller.set_property: [ value, 0.63989929149798, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.63989929149798 ]
class_pparam_controller.set_property: [ value, 0.64715881962865, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.64715881962865 ]
class_pparam_controller.set_property: [ value, 0.65577950928382, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.65577950928382 ]
class_pparam_controller.set_property: [ value, 0.66440019893899, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.66440019893899 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.68807056714472, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.68807056714472 ]
class_pparam_controller.set_property: [ value, 0.69654514341591, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.69654514341591 ]
class_pparam_controller.set_property: [ value, 0.70261858974359, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.70261858974359 ]
class_pparam_controller.set_property: [ value, 0.71928525641026, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.71928525641026 ]
class_pparam_controller.set_property: [ value, 0.72761858974359, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.72761858974359 ]
class_pparam_controller.set_property: [ value, 0.73595192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.73595192307692 ]
class_pparam_controller.set_property: [ value, 0.74428525641026, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.74428525641026 ]
class_pparam_controller.set_property: [ value, 0.76095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.76095192307692 ]
class_pparam_controller.set_property: [ value, 0.76586995586381, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.76586995586381 ]
class_pparam_controller.set_property: [ value, 0.77406667717528, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.77406667717528 ]
class_pparam_controller.set_property: [ value, 0.78226339848676, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.78226339848676 ]
class_pparam_controller.set_property: [ value, 0.79865684110971, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.79865684110971 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.80685356242119, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.80685356242119 ]
class_pparam_controller.set_property: [ value, 0.81095192307692, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.81095192307692 ]
class_pparam_controller.set_property: [ value, 0.81492017704518, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.81492017704518 ]
class_pparam_controller.set_property: [ value, 0.82708095533499, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.82708095533499 ]
class_pparam_controller.set_property: [ value, 0.83514547146402, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.83514547146402 ]
class_pparam_controller.set_property: [ value, 0.84320998759305, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.84320998759305 ]
class_pparam_controller.set_property: [ value, 0.85127450372208, true ]
before final_val
ext: [ modulator1_amp, 0 ]
class_pparam_controller: update_val: modulator1_amp
pknob set_property: [ value, 0.85127450372208 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
class_mod_slot: mouseDownAction: buttonNumber: 1
move: [ 12, 1, -1, 0.28 ]
class_pparam_controller.set_property: [ range, [ 0, 0.28 ], true ]
pknob set_property: [ range, [ 0, 0.28 ] ]
move: [ 11, 1, -2, 0.27 ]
class_pparam_controller.set_property: [ range, [ 0, 0.27 ], true ]
pknob set_property: [ range, [ 0, 0.27 ] ]
###########----- making note
########### making synth
move: [ 10, 1, -3, 0.26 ]
class_pparam_controller.set_property: [ range, [ 0, 0.26 ], true ]
pknob set_property: [ range, [ 0, 0.26 ] ]
move: [ 9, 1, -4, 0.25 ]
class_pparam_controller.set_property: [ range, [ 0, 0.25 ], true ]
pknob set_property: [ range, [ 0, 0.25 ] ]
move: [ 8, 1, -5, 0.24 ]
class_pparam_controller.set_property: [ range, [ 0, 0.24 ], true ]
pknob set_property: [ range, [ 0, 0.24 ] ]
move: [ 6, 1, -7, 0.22 ]
class_pparam_controller.set_property: [ range, [ 0, 0.22 ], true ]
pknob set_property: [ range, [ 0, 0.22 ] ]
move: [ 5, 1, -8, 0.21 ]
class_pparam_controller.set_property: [ range, [ 0, 0.21 ], true ]
pknob set_property: [ range, [ 0, 0.21 ] ]
move: [ 4, 1, -9, 0.2 ]
class_pparam_controller.set_property: [ range, [ 0, 0.2 ], true ]
pknob set_property: [ range, [ 0, 0.2 ] ]
move: [ 3, 1, -10, 0.19 ]
class_pparam_controller.set_property: [ range, [ 0, 0.19 ], true ]
pknob set_property: [ range, [ 0, 0.19 ] ]
class_mod_slot: mouseUpAction: buttonNumber: nil
class_pparam_controller.set_property: [ update_range, [ 0, 0.19 ], true ]
class_passive_controller: update_arg: osc1_pitch
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.19, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.19
ret_range2: 0.19
normval, specrange, retrange2: [ 0.5, 128, 0.19 ]
ret_range3: 24.32
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 24.32, 'source': 4, 'norm_range': 0.19 )
range: 0.19
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
pknob set_property: [ update_range, [ 0, 0.19 ] ]
class_mod_slot: mouseDownAction: buttonNumber: 1
move: [ 11, 9, -1, 0.18 ]
class_pparam_controller.set_property: [ range, [ 0, 0.18 ], true ]
pknob set_property: [ range, [ 0, 0.18 ] ]
move: [ 10, 9, -2, 0.17 ]
class_pparam_controller.set_property: [ range, [ 0, 0.17 ], true ]
pknob set_property: [ range, [ 0, 0.17 ] ]
move: [ 8, 8, -4, 0.15 ]
class_pparam_controller.set_property: [ range, [ 0, 0.15 ], true ]
pknob set_property: [ range, [ 0, 0.15 ] ]
move: [ 4, 7, -8, 0.11 ]
class_pparam_controller.set_property: [ range, [ 0, 0.11 ], true ]
pknob set_property: [ range, [ 0, 0.11 ] ]
move: [ 3, 7, -9, 0.1 ]
class_pparam_controller.set_property: [ range, [ 0, 0.1 ], true ]
pknob set_property: [ range, [ 0, 0.1 ] ]
********************* releasing synth
class_mod_slot: mouseUpAction: buttonNumber: nil
class_pparam_controller.set_property: [ update_range, [ 0, 0.1 ], true ]
class_passive_controller: update_arg: osc1_pitch
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.1, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.1
ret_range2: 0.1
normval, specrange, retrange2: [ 0.5, 128, 0.1 ]
ret_range3: 12.8
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 12.8, 'source': 4, 'norm_range': 0.1 )
range: 0.1
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
pknob set_property: [ update_range, [ 0, 0.1 ] ]
###########----- making note
########### making synth
########### making fx
class_mod_slot: mouseDownAction: buttonNumber: 1
move: [ 9, 9, 6, 0.16 ]
class_pparam_controller.set_property: [ range, [ 0, 0.16 ], true ]
pknob set_property: [ range, [ 0, 0.16 ] ]
move: [ 10, 9, 7, 0.17 ]
class_pparam_controller.set_property: [ range, [ 0, 0.17 ], true ]
pknob set_property: [ range, [ 0, 0.17 ] ]
move: [ 11, 9, 8, 0.18 ]
class_pparam_controller.set_property: [ range, [ 0, 0.18 ], true ]
pknob set_property: [ range, [ 0, 0.18 ] ]
move: [ 12, 9, 9, 0.19 ]
class_pparam_controller.set_property: [ range, [ 0, 0.19 ], true ]
pknob set_property: [ range, [ 0, 0.19 ] ]
move: [ 13, 10, 10, 0.2 ]
class_pparam_controller.set_property: [ range, [ 0, 0.2 ], true ]
pknob set_property: [ range, [ 0, 0.2 ] ]
move: [ 14, 11, 11, 0.21 ]
class_pparam_controller.set_property: [ range, [ 0, 0.21 ], true ]
pknob set_property: [ range, [ 0, 0.21 ] ]
move: [ 15, 12, 12, 0.22 ]
class_pparam_controller.set_property: [ range, [ 0, 0.22 ], true ]
pknob set_property: [ range, [ 0, 0.22 ] ]
move: [ 16, 12, 13, 0.23 ]
class_pparam_controller.set_property: [ range, [ 0, 0.23 ], true ]
pknob set_property: [ range, [ 0, 0.23 ] ]
move: [ 17, 12, 14, 0.24 ]
class_pparam_controller.set_property: [ range, [ 0, 0.24 ], true ]
pknob set_property: [ range, [ 0, 0.24 ] ]
move: [ 19, 14, 16, 0.26 ]
class_pparam_controller.set_property: [ range, [ 0, 0.26 ], true ]
pknob set_property: [ range, [ 0, 0.26 ] ]
move: [ 20, 14, 17, 0.27 ]
class_pparam_controller.set_property: [ range, [ 0, 0.27 ], true ]
pknob set_property: [ range, [ 0, 0.27 ] ]
move: [ 24, 16, 21, 0.31 ]
class_pparam_controller.set_property: [ range, [ 0, 0.31 ], true ]
pknob set_property: [ range, [ 0, 0.31 ] ]
move: [ 25, 16, 22, 0.32 ]
class_pparam_controller.set_property: [ range, [ 0, 0.32 ], true ]
pknob set_property: [ range, [ 0, 0.32 ] ]
move: [ 26, 17, 23, 0.33 ]
class_pparam_controller.set_property: [ range, [ 0, 0.33 ], true ]
pknob set_property: [ range, [ 0, 0.33 ] ]
********************* releasing synth
move: [ 28, 19, 25, 0.35 ]
class_pparam_controller.set_property: [ range, [ 0, 0.35 ], true ]
pknob set_property: [ range, [ 0, 0.35 ] ]
move: [ 29, 19, 26, 0.36 ]
class_pparam_controller.set_property: [ range, [ 0, 0.36 ], true ]
pknob set_property: [ range, [ 0, 0.36 ] ]
move: [ 30, 19, 27, 0.37 ]
class_pparam_controller.set_property: [ range, [ 0, 0.37 ], true ]
pknob set_property: [ range, [ 0, 0.37 ] ]
move: [ 31, 20, 28, 0.38 ]
class_pparam_controller.set_property: [ range, [ 0, 0.38 ], true ]
pknob set_property: [ range, [ 0, 0.38 ] ]
move: [ 32, 20, 29, 0.39 ]
class_pparam_controller.set_property: [ range, [ 0, 0.39 ], true ]
pknob set_property: [ range, [ 0, 0.39 ] ]
move: [ 34, 20, 31, 0.41 ]
class_pparam_controller.set_property: [ range, [ 0, 0.41 ], true ]
pknob set_property: [ range, [ 0, 0.41 ] ]
move: [ 35, 20, 32, 0.42 ]
class_pparam_controller.set_property: [ range, [ 0, 0.42 ], true ]
pknob set_property: [ range, [ 0, 0.42 ] ]
class_mod_slot: mouseUpAction: buttonNumber: nil
class_pparam_controller.set_property: [ update_range, [ 0, 0.42 ], true ]
class_passive_controller: update_arg: osc1_pitch
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.42, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.42
ret_range2: 0.42
normval, specrange, retrange2: [ 0.5, 128, 0.42 ]
ret_range3: 53.76
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: performer
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 53.76, 'source': 4, 'norm_range': 0.42 )
range: 0.42
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'env1_delay_time': 'c128', 
  'osc2_intensity': 'c9', 'modulator1_curve2': 8, 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 7, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
pknob set_property: [ update_range, [ 0, 0.42 ] ]
###########----- making note
########### making synth
########### making fx
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.30454991353612, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.30454991353612 ]
class_pparam_controller.set_property: [ value, 0.29584164067691, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.29584164067691 ]
class_pparam_controller.set_property: [ value, 0.28640767841276, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.28640767841276 ]
class_pparam_controller.set_property: [ value, 0.27697371614861, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.27697371614861 ]
class_pparam_controller.set_property: [ value, 0.2581057916203, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.2581057916203 ]
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_perfstep_frame: set_right_panel: [ curves, performer ]
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
********************* releasing synth
ERROR: Message '*' not understood.
RECEIVER:
   false
ARGS:
   Integer 1

PROTECTED CALL STACK:
	Meta_MethodError:new	0xa4bb560
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = false
	Meta_DoesNotUnderstandError:new	0xa4bc6a0
		arg this = DoesNotUnderstandError
		arg receiver = false
		arg selector = *
		arg args = [ 1 ]
	Object:doesNotUnderstand	0x86f37e0
		arg this = false
		arg selector = *
		arg args = nil
	a FunctionDef	0xae33c10
		sourceCode = "<an open Function>"
		arg x = 0
		arg y = nil
	a FunctionDef	0xb02f5b0
		sourceCode = "{ arg offset, scale, ampmod, phase, fun;
				var x, y;
				var scalefun;
				scalefun = { arg x, y; 
					y = fun.(x/scale.x+phase)*ampmod;
					y = (1-y)*scale.y;
					y = y.trunc;
					y;
				};
				x = 0;
				y = scalefun.(x, y);
				Pen.lineTo(offset@y);
				scale.x.do { arg x;
					x = x+1;
					y = scalefun.(x, y);
					//x = x*scale.x;
					x = x+offset;
					//[x, y].debug(\"scaledplop\");
					Pen.lineTo(x@y);
				};

			}"
		arg offset = 0
		arg scale = Point( 50, 50 )
		arg ampmod = 1
		arg phase = 0
		arg fun = false
		var x = 0
		var y = nil
		var scalefun = a Function
	Integer:do	0x9129b20
		arg this = 1
		arg function = a Function
		var i = 0
	a FunctionDef	0xae29570
		sourceCode = "<an open Function>"
		arg uview = a JSCUserView
		var draw_band = a Function
		var numstep = 1
		var ampmods = [ 1 ]
	Meta_JPen:protRefresh	0xa2f7e60
		arg this = JPen
		arg func = a Function
		arg view = a JSCUserView
		arg server = a SwingOSC
		arg penID = 2093
		arg cmpID = 2092
		var bndl = nil
		var off = nil
		var stop = nil
		var len = nil
		var numCmd = nil
		var nextLen = nil
		var maxBndlSize = nil
		var floatSize = nil
	Function:prTry	0x953a760
		arg this = a Function
		var result = nil
		var thread = a Routine
		var next = nil
		var wasInProtectedFunc = true
	
CALL STACK:
	DoesNotUnderstandError:reportError   0xb5ef230
		arg this = <instance of DoesNotUnderstandError>
	< FunctionDef in Method JSCAbstractUserView:prSCViewNew >  (no arguments or variables)
	Float:do   0xa964710
		arg this = inf
		arg function = <instance of Function>
		var i = 0
	Routine:prStart   0xc235910
		arg this = <instance of Routine>
		arg inval = 1353041929.7077
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#*]
ERROR: Message '*' not understood.
RECEIVER:
   false
ARGS:
   Integer 1

PROTECTED CALL STACK:
	Meta_MethodError:new	0xa4bb560
		arg this = DoesNotUnderstandError
		arg what = nil
		arg receiver = false
	Meta_DoesNotUnderstandError:new	0xa4bc6a0
		arg this = DoesNotUnderstandError
		arg receiver = false
		arg selector = *
		arg args = [ 1 ]
	Object:doesNotUnderstand	0x86f37e0
		arg this = false
		arg selector = *
		arg args = nil
	a FunctionDef	0xae33c10
		sourceCode = "<an open Function>"
		arg x = 0
		arg y = nil
	a FunctionDef	0xb02f5b0
		sourceCode = "{ arg offset, scale, ampmod, phase, fun;
				var x, y;
				var scalefun;
				scalefun = { arg x, y; 
					y = fun.(x/scale.x+phase)*ampmod;
					y = (1-y)*scale.y;
					y = y.trunc;
					y;
				};
				x = 0;
				y = scalefun.(x, y);
				Pen.lineTo(offset@y);
				scale.x.do { arg x;
					x = x+1;
					y = scalefun.(x, y);
					//x = x*scale.x;
					x = x+offset;
					//[x, y].debug(\"scaledplop\");
					Pen.lineTo(x@y);
				};

			}"
		arg offset = 0
		arg scale = Point( 50, 50 )
		arg ampmod = 1
		arg phase = 0
		arg fun = false
		var x = 0
		var y = nil
		var scalefun = a Function
	Integer:do	0x9129b20
		arg this = 1
		arg function = a Function
		var i = 0
	a FunctionDef	0xae29570
		sourceCode = "<an open Function>"
		arg uview = a JSCUserView
		var draw_band = a Function
		var numstep = 1
		var ampmods = [ 1 ]
	Meta_JPen:protRefresh	0xa2f7e60
		arg this = JPen
		arg func = a Function
		arg view = a JSCUserView
		arg server = a SwingOSC
		arg penID = 2093
		arg cmpID = 2092
		var bndl = nil
		var off = nil
		var stop = nil
		var len = nil
		var numCmd = nil
		var nextLen = nil
		var maxBndlSize = nil
		var floatSize = nil
	Function:prTry	0x953a760
		arg this = a Function
		var result = nil
		var thread = a Routine
		var next = nil
		var wasInProtectedFunc = true
	
CALL STACK:
	DoesNotUnderstandError:reportError   0xb6ec450
		arg this = <instance of DoesNotUnderstandError>
	< FunctionDef in Method JSCAbstractUserView:prSCViewNew >  (no arguments or variables)
	Float:do   0xa964710
		arg this = inf
		arg function = <instance of Function>
		var i = 1
	Routine:prStart   0xc235910
		arg this = <instance of Routine>
		arg inval = 1353041929.7077
For advice: [http://supercollider.sf.net/wiki/index.php/DoesNotUnderstandError#*]
class_mini_curvegraph_view: mousedown: ( 'curve_shape': square1, 'change_curve_mode': true )
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 24, 33, 0, 0.5875, 0, 0.5875 ]
class_pparam_controller.set_property: [ curve, [ square1, sin4, sin4, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1812844121' could not be opened.
x,y, nx, ny, ox, oy: [ 33, 35, 1, 0.5625, 1, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin4, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/1928549048' could not be opened.
x,y, nx, ny, ox, oy: [ 40, 35, 1, 0.5625, 1, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin4, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 49, 35, 1, 0.5625, 1, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, sin4, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1115747365)
done
x,y, nx, ny, ox, oy: [ 73, 35, 2, 0.5625, 2, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 89, 35, 2, 0.5625, 2, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 90, 35, 2, 0.5625, 2, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, sin4, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/-1761371269)
done
File '/tmp/122996715' could not be opened.
x,y, nx, ny, ox, oy: [ 110, 35, 3, 0.5625, 3, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1903792586' could not be opened.
x,y, nx, ny, ox, oy: [ 126, 35, 3, 0.5625, 3, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, line1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/2025320390' could not be opened.
x,y, nx, ny, ox, oy: [ 129, 34, 4, 0.575, 4, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, square1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
x,y, nx, ny, ox, oy: [ 136, 34, 4, 0.575, 4, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, square1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
x,y, nx, ny, ox, oy: [ 146, 34, 4, 0.575, 4, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, square1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, /tmp/130756010)
done
x,y, nx, ny, ox, oy: [ 151, 34, 4, 0.575, 4, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, square1, line1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 164, 34, 5, 0.575, 5, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, square1, square1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1648540619' could not be opened.
x,y, nx, ny, ox, oy: [ 165, 34, 5, 0.575, 5, 0.575 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, square1, square1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/-1524416403' could not be opened.
x,y, nx, ny, ox, oy: [ 166, 35, 5, 0.5625, 5, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, square1, square1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
x,y, nx, ny, ox, oy: [ 168, 35, 5, 0.5625, 5, 0.5625 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, square1, square1, square1, square1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_mini_curvegraph_view: mousedown: ( 'curve_shape': triangle1, 'change_curve_mode': true )
x,y, nx, ny, ox, oy: [ 87, 42, 2, 0.475, 2, 0.475 ]
class_pparam_controller.set_property: [ curve, [ square1, square1, triangle1, square1, square1, square1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
###########----- making note
########### making synth
x,y, nx, ny, ox, oy: [ 16, 32, 0, 0.6, 0, 0.6 ]
class_pparam_controller.set_property: [ curve, [ triangle1, square1, triangle1, square1, square1, square1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
********************* releasing synth
x,y, nx, ny, ox, oy: [ 170, 45, 5, 0.4375, 5, 0.4375 ]
class_pparam_controller.set_property: [ curve, [ triangle1, square1, triangle1, square1, square1, triangle1, line1, line1, sin1, sin1, sin1, sin1, sin1, sin1, sin1, sin1 ], false ]
load_curvelist_in_buffer: size: 2048
buffer: Buffer(7, 2048, 1, 44100, nil)
done
File '/tmp/292303008' could not be opened.
###########----- making note
########### making synth
********************* releasing synth
class_perfstep_frame: set_right_panel: [ normal, performer ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_rate, 1 ]
pknob: set_controller: modulator1_rate
REFRESH++
REFRESH++
pknob set_property: [ label, Rate ]
pknob set_property: [ value, 2.334675594449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_amp, 1 ]
pknob: set_controller: modulator1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.72466828068728 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_ampmod
REFRESH++
REFRESH++
pknob set_property: [ label, Amp Mod ]
pknob set_property: [ value, 1 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 50, 115 )
******************* vlayout_size: Point( 50, 165 )
soul
pknob: set_controller: modulator1_glidefade
REFRESH++
REFRESH++
pknob set_property: [ label, Glide/Fade ]
pknob set_property: [ value, 0.61855667829514 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
soul2
115, 95, 10, 105, 95, 105
soul2
115, 95, 10, 105, 58.762884438038, 68.762884438038
###########----- making note
########### making synth
soul2
113, 93, 10, 103, 93, 103
soul2
113, 93, 10, 103, 57.525771081448, 67.525771081448
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
********************* releasing synth
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.28865979425609, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28865979425609 ]
soul2
113, 93, 10, 103, 26.845360865816, 36.845360865816
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.02061855699867, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.02061855699867 ]
soul2
113, 93, 10, 103, 1.9175258008763, 11.917525800876
class_pparam_controller.set_property: [ value, 0.010309278033674, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010309278033674 ]
soul2
113, 93, 10, 103, 0.95876285713166, 10.958762857132
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.010309278033674, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010309278033674 ]
soul2
113, 93, 10, 103, 0.95876285713166, 10.958762857132
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.061855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.061855670064688 ]
soul2
113, 93, 10, 103, 5.752577316016, 15.752577316016
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.1134020620957, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.1134020620957 ]
soul2
113, 93, 10, 103, 10.5463917749, 20.5463917749
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.16494845319539, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16494845319539 ]
soul2
113, 93, 10, 103, 15.340206147172, 25.340206147172
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.28865979425609, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28865979425609 ]
soul2
113, 93, 10, 103, 26.845360865816, 36.845360865816
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.31958762928843, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31958762928843 ]
soul2
113, 93, 10, 103, 29.721649523824, 39.721649523824
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
soul2
113, 93, 10, 103, 36.432989696972, 46.432989696972
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.52577319554985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52577319554985 ]
soul2
113, 93, 10, 103, 48.896907186136, 58.896907186136
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
soul2
113, 93, 10, 103, 36.432989696972, 46.432989696972
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 63.278350476176, 73.278350476176
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.8865979379043, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.8865979379043 ]
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.93814432993531, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93814432993531 ]
soul2
113, 93, 10, 103, 87.247422683984, 97.247422683984
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.98969072196633, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98969072196633 ]
soul2
113, 93, 10, 103, 92.041237142868, 102.04123714287
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 0.94845360796899, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94845360796899 ]
soul2
113, 93, 10, 103, 88.206185541116, 98.206185541116
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
soul2
113, 93, 10, 103, 36.432989696972, 46.432989696972
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.28865979425609, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28865979425609 ]
soul2
113, 93, 10, 103, 26.845360865816, 36.845360865816
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.02061855699867, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.02061855699867 ]
soul2
113, 93, 10, 103, 1.9175258008763, 11.917525800876
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.010309278033674, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010309278033674 ]
soul2
113, 93, 10, 103, 0.95876285713166, 10.958762857132
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.061855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.061855670064688 ]
soul2
113, 93, 10, 103, 5.752577316016, 15.752577316016
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.1134020620957, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.1134020620957 ]
soul2
113, 93, 10, 103, 10.5463917749, 20.5463917749
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.16494845319539, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16494845319539 ]
soul2
113, 93, 10, 103, 15.340206147172, 25.340206147172
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.26804123725742, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26804123725742 ]
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.48453608248383, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48453608248383 ]
soul2
113, 93, 10, 103, 45.061855670996, 55.061855670996
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.52577319554985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52577319554985 ]
soul2
113, 93, 10, 103, 48.896907186136, 58.896907186136
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.59793814457953, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59793814457953 ]
soul2
113, 93, 10, 103, 55.608247445896, 65.608247445896
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 63.278350476176, 73.278350476176
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.8865979379043, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.8865979379043 ]
soul2
113, 93, 10, 103, 82.4536082251, 92.4536082251
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.93814432993531, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93814432993531 ]
soul2
113, 93, 10, 103, 87.247422683984, 97.247422683984
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 0.98969072196633, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98969072196633 ]
soul2
113, 93, 10, 103, 92.041237142868, 102.04123714287
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.96907216496766, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96907216496766 ]
soul2
113, 93, 10, 103, 90.123711341992, 100.12371134199
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.79381443280727, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79381443280727 ]
soul2
113, 93, 10, 103, 73.824742251076, 83.824742251076
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.70103092771024, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70103092771024 ]
soul2
113, 93, 10, 103, 65.195876277052, 75.195876277052
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.64948453567922, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64948453567922 ]
soul2
113, 93, 10, 103, 60.402061818168, 70.402061818168
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.6082474226132, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.6082474226132 ]
soul2
113, 93, 10, 103, 56.567010303028, 66.567010303028
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.53608247451484, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53608247451484 ]
soul2
113, 93, 10, 103, 49.85567012988, 59.85567012988
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.40206185542047, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40206185542047 ]
soul2
113, 93, 10, 103, 37.391752554104, 47.391752554104
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.28865979425609, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28865979425609 ]
soul2
113, 93, 10, 103, 26.845360865816, 36.845360865816
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.24742268025875, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.24742268025875 ]
soul2
113, 93, 10, 103, 23.010309264064, 33.010309264064
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.12371134012938, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.12371134012938 ]
soul2
113, 93, 10, 103, 11.505154632032, 21.505154632032
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.02061855699867, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.02061855699867 ]
soul2
113, 93, 10, 103, 1.9175258008763, 11.917525800876
********************* releasing synth
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
class_pparam_controller.set_property: [ value, 0.010309278033674, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010309278033674 ]
soul2
113, 93, 10, 103, 0.95876285713166, 10.958762857132
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.041237113066018, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.041237113066018 ]
soul2
113, 93, 10, 103, 3.8350515151396, 13.83505151514
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.092783505097032, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.092783505097032 ]
soul2
113, 93, 10, 103, 8.6288659740239, 18.628865974024
class_pparam_controller.set_property: [ value, 0.14432989712805, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14432989712805 ]
soul2
113, 93, 10, 103, 13.422680432908, 23.422680432908
class_pparam_controller.set_property: [ value, 0.16494845319539, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16494845319539 ]
soul2
113, 93, 10, 103, 15.340206147172, 25.340206147172
class_pparam_controller.set_property: [ value, 0.19587628822774, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19587628822774 ]
soul2
113, 93, 10, 103, 18.21649480518, 28.21649480518
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.29896907228976, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29896907228976 ]
soul2
113, 93, 10, 103, 27.804123722948, 37.804123722948
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.31958762928843, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31958762928843 ]
soul2
113, 93, 10, 103, 29.721649523824, 39.721649523824
class_pparam_controller.set_property: [ value, 0.34020618535578, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34020618535578 ]
soul2
113, 93, 10, 103, 31.639175238088, 41.639175238088
class_pparam_controller.set_property: [ value, 0.35051546432078, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35051546432078 ]
soul2
113, 93, 10, 103, 32.597938181832, 42.597938181832
class_pparam_controller.set_property: [ value, 0.36082474235445, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36082474235445 ]
soul2
113, 93, 10, 103, 33.556701038964, 43.556701038964
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
soul2
113, 93, 10, 103, 36.432989696972, 46.432989696972
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.42268041241914, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42268041241914 ]
soul2
113, 93, 10, 103, 39.30927835498, 49.30927835498
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.45360824745148, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45360824745148 ]
soul2
113, 93, 10, 103, 42.185567012988, 52.185567012988
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.4948453605175, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.4948453605175 ]
soul2
113, 93, 10, 103, 46.020618528128, 56.020618528128
class_pparam_controller.set_property: [ value, 0.5051546394825, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5051546394825 ]
soul2
113, 93, 10, 103, 46.979381471872, 56.979381471872
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.52577319554985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52577319554985 ]
soul2
113, 93, 10, 103, 48.896907186136, 58.896907186136
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.55670103058219, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55670103058219 ]
soul2
113, 93, 10, 103, 51.773195844144, 61.773195844144
class_pparam_controller.set_property: [ value, 0.56701030954719, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56701030954719 ]
soul2
113, 93, 10, 103, 52.731958787888, 62.731958787888
class_pparam_controller.set_property: [ value, 0.57731958758086, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57731958758086 ]
soul2
113, 93, 10, 103, 53.69072164502, 63.69072164502
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.65979381464422, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65979381464422 ]
soul2
113, 93, 10, 103, 61.360824761912, 71.360824761912
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 63.278350476176, 73.278350476176
class_pparam_controller.set_property: [ value, 0.71134020574391, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71134020574391 ]
soul2
113, 93, 10, 103, 66.154639134184, 76.154639134184
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.75257731974125, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75257731974125 ]
soul2
113, 93, 10, 103, 69.989690735936, 79.989690735936
class_pparam_controller.set_property: [ value, 0.76288659777492, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76288659777492 ]
soul2
113, 93, 10, 103, 70.948453593068, 80.948453593068
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
class_pparam_controller.set_property: [ value, 0.81443298980594, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81443298980594 ]
soul2
113, 93, 10, 103, 75.742268051952, 85.742268051952
class_pparam_controller.set_property: [ value, 0.83505154680461, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83505154680461 ]
soul2
113, 93, 10, 103, 77.659793852828, 87.659793852828
class_pparam_controller.set_property: [ value, 0.86597938183695, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86597938183695 ]
soul2
113, 93, 10, 103, 80.536082510836, 90.536082510836
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.91752577293664, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91752577293664 ]
soul2
113, 93, 10, 103, 85.329896883108, 95.329896883108
class_pparam_controller.set_property: [ value, 0.93814432993531, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93814432993531 ]
soul2
113, 93, 10, 103, 87.247422683984, 97.247422683984
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.98969072196633, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98969072196633 ]
soul2
113, 93, 10, 103, 92.041237142868, 102.04123714287
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
113, 93, 10, 103, 93, 103
class_pparam_controller.set_property: [ value, 0.97938144300133, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97938144300133 ]
soul2
113, 93, 10, 103, 91.082474199124, 101.08247419912
class_pparam_controller.set_property: [ value, 0.95876288693398, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95876288693398 ]
soul2
113, 93, 10, 103, 89.16494848486, 99.16494848486
class_pparam_controller.set_property: [ value, 0.93814432993531, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93814432993531 ]
soul2
113, 93, 10, 103, 86.288659826852, 96.288659826852
class_pparam_controller.set_property: [ value, 0.92783505190164, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92783505190164 ]
class_pparam_controller.set_property: [ value, 0.90721649490297, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90721649490297 ]
soul2
113, 93, 10, 103, 84.371134025976, 94.371134025976
class_pparam_controller.set_property: [ value, 0.89690721686929, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89690721686929 ]
soul2
113, 93, 10, 103, 83.412371168844, 93.412371168844
class_pparam_controller.set_property: [ value, 0.87628865987062, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.87628865987062 ]
soul2
113, 93, 10, 103, 81.494845367968, 91.494845367968
class_pparam_controller.set_property: [ value, 0.85567010287195, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85567010287195 ]
soul2
113, 93, 10, 103, 79.577319567092, 89.577319567092
class_pparam_controller.set_property: [ value, 0.84536082483828, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84536082483828 ]
soul2
113, 93, 10, 103, 78.61855670996, 88.61855670996
class_pparam_controller.set_property: [ value, 0.82474226783961, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82474226783961 ]
soul2
113, 93, 10, 103, 76.701030909084, 86.701030909084
class_pparam_controller.set_property: [ value, 0.80412371177226, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80412371177226 ]
soul2
113, 93, 10, 103, 74.78350519482, 84.78350519482
class_pparam_controller.set_property: [ value, 0.78350515477359, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78350515477359 ]
soul2
113, 93, 10, 103, 72.865979393944, 82.865979393944
class_pparam_controller.set_property: [ value, 0.77319587673992, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77319587673992 ]
soul2
113, 93, 10, 103, 71.907216536812, 81.907216536812
class_pparam_controller.set_property: [ value, 0.74226804077625, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.74226804077625 ]
soul2
113, 93, 10, 103, 69.030927792192, 79.030927792192
class_pparam_controller.set_property: [ value, 0.73195876274258, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73195876274258 ]
soul2
113, 93, 10, 103, 68.07216493506, 78.07216493506
class_pparam_controller.set_property: [ value, 0.72164948470891, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72164948470891 ]
soul2
113, 93, 10, 103, 67.113402077928, 77.113402077928
class_pparam_controller.set_property: [ value, 0.69072164967656, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69072164967656 ]
soul2
113, 93, 10, 103, 64.23711341992, 74.23711341992
class_pparam_controller.set_property: [ value, 0.68041237071157, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68041237071157 ]
soul2
113, 93, 10, 103, 62.319587619044, 72.319587619044
class_pparam_controller.set_property: [ value, 0.67010309267789, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67010309267789 ]
class_pparam_controller.set_property: [ value, 0.63917525764555, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63917525764555 ]
soul2
113, 93, 10, 103, 59.443298961036, 69.443298961036
class_pparam_controller.set_property: [ value, 0.62886597961187, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.62886597961187 ]
soul2
113, 93, 10, 103, 58.484536103904, 68.484536103904
class_pparam_controller.set_property: [ value, 0.61855670064688, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61855670064688 ]
soul2
113, 93, 10, 103, 57.52577316016, 67.52577316016
class_pparam_controller.set_property: [ value, 0.58762886561453, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58762886561453 ]
soul2
113, 93, 10, 103, 54.649484502152, 64.649484502152
class_pparam_controller.set_property: [ value, 0.54639175254852, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54639175254852 ]
soul2
113, 93, 10, 103, 50.814432987012, 60.814432987012
class_pparam_controller.set_property: [ value, 0.52577319554985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52577319554985 ]
soul2
113, 93, 10, 103, 48.896907186136, 58.896907186136
class_pparam_controller.set_property: [ value, 0.51546391751617, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51546391751617 ]
soul2
113, 93, 10, 103, 47.938144329004, 57.938144329004
class_pparam_controller.set_property: [ value, 0.47422680445015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47422680445015 ]
soul2
113, 93, 10, 103, 44.103092813864, 54.103092813864
class_pparam_controller.set_property: [ value, 0.46391752548516, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46391752548516 ]
soul2
113, 93, 10, 103, 43.14432987012, 53.14432987012
class_pparam_controller.set_property: [ value, 0.44329896941781, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44329896941781 ]
soul2
113, 93, 10, 103, 41.226804155856, 51.226804155856
class_pparam_controller.set_property: [ value, 0.43298969045281, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43298969045281 ]
soul2
113, 93, 10, 103, 40.268041212112, 50.268041212112
class_pparam_controller.set_property: [ value, 0.41237113438547, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41237113438547 ]
soul2
113, 93, 10, 103, 38.350515497848, 48.350515497848
class_pparam_controller.set_property: [ value, 0.3917525773868, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.3917525773868 ]
soul2
113, 93, 10, 103, 36.432989696972, 46.432989696972
class_pparam_controller.set_property: [ value, 0.38144329935312, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38144329935312 ]
soul2
113, 93, 10, 103, 35.47422683984, 45.47422683984
class_pparam_controller.set_property: [ value, 0.37113402038813, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.37113402038813 ]
soul2
113, 93, 10, 103, 34.515463896096, 44.515463896096
class_pparam_controller.set_property: [ value, 0.32989690732211, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32989690732211 ]
soul2
113, 93, 10, 103, 30.680412380956, 40.680412380956
class_pparam_controller.set_property: [ value, 0.30927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30927835032344 ]
soul2
113, 93, 10, 103, 28.76288658008, 38.76288658008
class_pparam_controller.set_property: [ value, 0.27835051529109, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27835051529109 ]
soul2
113, 93, 10, 103, 25.886597922072, 35.886597922072
class_pparam_controller.set_property: [ value, 0.26804123725742, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26804123725742 ]
soul2
113, 93, 10, 103, 24.92783506494, 34.92783506494
class_pparam_controller.set_property: [ value, 0.25773195922375, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25773195922375 ]
soul2
113, 93, 10, 103, 23.969072207808, 33.969072207808
class_pparam_controller.set_property: [ value, 0.23711340222508, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23711340222508 ]
soul2
113, 93, 10, 103, 22.051546406932, 32.051546406932
class_pparam_controller.set_property: [ value, 0.22680412326008, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22680412326008 ]
soul2
113, 93, 10, 103, 21.092783463188, 31.092783463188
class_pparam_controller.set_property: [ value, 0.21649484522641, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21649484522641 ]
soul2
113, 93, 10, 103, 20.134020606056, 30.134020606056
class_pparam_controller.set_property: [ value, 0.20618556719273, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20618556719273 ]
soul2
113, 93, 10, 103, 19.175257748924, 29.175257748924
class_pparam_controller.set_property: [ value, 0.18556701019406, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18556701019406 ]
soul2
113, 93, 10, 103, 17.257731948048, 27.257731948048
class_pparam_controller.set_property: [ value, 0.17525773216039, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17525773216039 ]
soul2
113, 93, 10, 103, 16.298969090916, 26.298969090916
class_pparam_controller.set_property: [ value, 0.16494845319539, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16494845319539 ]
soul2
113, 93, 10, 103, 15.340206147172, 25.340206147172
class_pparam_controller.set_property: [ value, 0.15463917516172, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15463917516172 ]
soul2
113, 93, 10, 103, 14.38144329004, 24.38144329004
class_pparam_controller.set_property: [ value, 0.13402061816305, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13402061816305 ]
soul2
113, 93, 10, 103, 12.463917489164, 22.463917489164
class_pparam_controller.set_property: [ value, 0.12371134012938, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.12371134012938 ]
********************* releasing synth
soul2
113, 93, 10, 103, 11.505154632032, 21.505154632032
class_pparam_controller.set_property: [ value, 0.1134020620957, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.1134020620957 ]
soul2
113, 93, 10, 103, 10.5463917749, 20.5463917749
class_pparam_controller.set_property: [ value, 0.10309278313071, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10309278313071 ]
soul2
113, 93, 10, 103, 9.5876288311556, 19.587628831156
class_pparam_controller.set_property: [ value, 0.082474227063358, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.082474227063358 ]
soul2
113, 93, 10, 103, 7.6701031168923, 17.670103116892
class_pparam_controller.set_property: [ value, 0.072164948098361, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.072164948098361 ]
soul2
113, 93, 10, 103, 6.7113401731476, 16.711340173148
class_pparam_controller.set_property: [ value, 0.051546392031014, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.051546392031014 ]
soul2
113, 93, 10, 103, 4.7938144588843, 14.793814458884
class_pparam_controller.set_property: [ value, 0.030927835032344, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.030927835032344 ]
soul2
113, 93, 10, 103, 2.876288658008, 12.876288658008
class_pparam_controller.set_property: [ value, 0.02061855699867, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.02061855699867 ]
soul2
113, 93, 10, 103, 1.9175258008763, 11.917525800876
class_pparam_controller.set_property: [ value, 0.010309278033674, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010309278033674 ]
soul2
113, 93, 10, 103, 0.95876285713166, 10.958762857132
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
113, 93, 10, 103, 0, 10
###########----- making note
########### making synth
********************* releasing synth
action!!!!: 0
prapri1
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_rate, 1 ]
pknob: set_controller: modulator1_rate
REFRESH++
REFRESH++
pknob set_property: [ label, Rate ]
pknob set_property: [ value, 2.334675594449 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_amp, 1 ]
pknob: set_controller: modulator1_amp
REFRESH++
REFRESH++
pknob set_property: [ label, Amp ]
pknob set_property: [ value, 0.72466828068728 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
******************* slider_size: Point( 80, 110 )
******************* vlayout_size: Point( 80, 160 )
soul
pknob: set_controller: modulator1_glidefade
REFRESH++
REFRESH++
pknob set_property: [ label, Glide/Fade ]
pknob set_property: [ value, 0 ]
pknob set_property: [ range, [ 0, 0 ] ]
pknob set_property: [ modulation_source, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, [ 0 ] ]
pknob set_property: modulation_source: [ a JSCDragSink, , [ 0 ] ]
prapri2
class_lfo_frame: ctrl curve1: [ 0, ( 'set_property': a Function, 'refresh': a Function, 'get_val': a Function, 'buffer': Buffer(5, 512, 1, 44100, /tmp/1114892943), 
  'get_buffer': a Function, 'get_menu_items_names': a Function, 'main_controller': a Function, 'save_data': a Function, 'model': ( 'name': Curve1, 'uname': modulator1_curve1, 'indexes': [ 0, 0 ], 'kind': curve, 
  'transmit': curve, 'curve': sin1 ), 
  'set_curve': a Function, 'new': a Function, 'get_curvebank': a Function, 'load_data': a Function ) ]
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
class_simple_curvegraph_view: curvebank: ( 'triangle1': a Function, 'square1': a Function, 'line1': a Function, 'sin4': a Function, 
  'negline1': a Function, 'known': false, 'sin2': a Function, 'sin1': a Function, 'saw1': a Function )
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
prapri3
-----------controller.get_menu_items_names: List[ known, line1, negline1, saw1, sin1, sin2, sin4, square1, triangle1 ]
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_popup_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
class_popup_view: set_property: [ curve, sin1 ]
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_popup_view: set_property: [ value, 4 ]
class_curve_select_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
class_popup_view: set_property: [ curve, sin1 ]
class_curve_select_view: set_property: [ curve, sin1 ]
-----------controller.get_menu_items_names: List[ known, line1, negline1, saw1, sin1, sin2, sin4, square1, triangle1 ]
REFRESH++
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_popup_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
class_popup_view: set_property: [ curve, sin1 ]
REFRESH++
class_curve_select_view: set_property: [ value, 4 ]
class_popup_view: set_property: [ value, 4 ]
class_simple_curvegraph_view: set_property: [ value, 4 ]
class_curve_select_view: set_property: [ curve, sin1 ]
class_popup_view: set_property: [ curve, sin1 ]
class_simple_curvegraph_view: set_property: [ curve, sin1 ]
prapri4
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Attack ]
class_ar_env_view: set_property: [ value, 0.1 ]
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Decay ]
class_ar_env_view: set_property: [ value, 0.1 ]
prapri5
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_env_attack, 0 ]
pknob: set_controller: modulator1_env_attack
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Attack ]
class_ar_env_view: set_property: [ value, 0.1 ]
REFRESH++
pknob set_property: [ label, Internal Env Attack ]
class_ar_env_view: set_property: [ label, Internal Env Attack ]
pknob set_property: [ value, 0.1 ]
class_ar_env_view: set_property: [ value, 0.1 ]
HAHAH 1
HAHAH 2
------- uname, numslot: [ modulator1_env_decay, 0 ]
pknob: set_controller: modulator1_env_decay
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Decay ]
class_ar_env_view: set_property: [ value, 0.1 ]
REFRESH++
class_ar_env_view: set_property: [ label, Internal Env Decay ]
pknob set_property: [ label, Internal Env Decay ]
class_ar_env_view: set_property: [ value, 0.1 ]
pknob set_property: [ value, 0.1 ]
class_pparam_kind_controller: [ value, 0 ]
class_passive_controller: update_arg: modulator1_kind
modulation_manager: get_instr_modulation: slot_dict: Dictionary[ ([ osc1_pitch, 0 ] -> [ mod, 4 ]) ]
modulation_manager: get_instr_modulation: source_dict: Dictionary[ ([ mod, 4 ] -> Set[ [ osc1_pitch, 0 ] ]) ]
modulation_manager: get_instr_modulation: modulation_dict: Dictionary[ ([ macro, 0 ] -> ( 'val': 0 )), ([ macro, 6 ] -> ( 'val': 0 )), ([ osc1_pitch, 0 ] -> ( 'range': 0.42, 'muted': false )), ([ macro, 2 ] -> ( 'val': 0 )), ([ macro, 4 ] -> ( 'val': 0 )), 
  ([ macro, 1 ] -> ( 'val': 0 )), ([ macro, 3 ] -> ( 'val': 0 )), ([ macro, 7 ] -> ( 'val': 0 )), ([ macro, 5 ] -> ( 'val': 0 )) ]
modulation_manager: get_instr_modulation: external_dict: Dictionary[  ]
srckindmod: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotnil: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
modulnotmuted: [ [ osc1_pitch, 0 ], [ mod, 4 ] ]
ret_range: 0.42
ret_range2: 0.42
normval, specrange, retrange2: [ 0.5, 128, 0.42 ]
ret_range3: 53.76
------ passive: BEGIN
------ passive: osc1_wt: an OutputProxy
modulation_bus: [ an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy, an OutputProxy ]
modulation_fxbus: [ 18, 19, 20, 21, 22, 23, 24, 25 ]
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
p_modulator: lfo
modulate: [ osc1_pitch, 0 ]
mod: ( 'range': 53.76, 'source': 4, 'norm_range': 0.42 )
range: 0.42
------ passive: modulation osc 3
------ passive: modulation osc 4
------ passive: gen
p_oscillator: frq, detune, amp: [ an OutputProxy, a Clip, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
p_oscillator: frq, detune, amp: [ an OutputProxy, an OutputProxy, an OutputProxy ]
------ passive: gen 5
------ passive: gen faders
------ passive: filters
0 f1: a BinaryOpUGen
1 f1: a BinaryOpUGen
p_filter: kind: lpf
2 f1: a LPF
3 f1: a LPF
4 f1: a LPF
------ passive: filters 3: an OutputProxy
------ passive: filters 4
0 f1, f2: [ a LPF, a BinaryOpUGen ]
p_filter: kind: lpf
------ passive: filters 6: an OutputProxy
f1, f2: [ a BinaryOpUGen, a BinaryOpUGen ]
------ passive: pan
------ passive: pan: an OutputProxy
------ passive: fx
passive_fx: BEGIN
------ passive: END
( 'modulator2_curve1': 15, 'osc2_fader': 'c11', 'modulator4_env_attack': 'c86', 'modulator4_glidefade': 'c82', 
  'modulator3_glidefade': 'c35', 'modulator3_ampmod': 'c34', 'fx1_arg2': 'c74', 'env4_decay_time': 'c17', 'insert1_arg2': 'c91', 
  'fx2_arg4': 'c44', 'modulator4_ampmod': 'c81', 'osc2_amp': 'c10', 'osc1_wt_pos': 'c107', 'env2_attack_time': 'c25', 
  'env2_vel': 'c22', 'modulator2_glidefade': 'c119', 'env3_release_time': 'c72', 'fx2_arg1': 'c41', 'macro8_control': 'c103', 
  'osc1_intensity': 'c108', 'env3_attack_level': 'c67', 'filter2_arg3': 'c94', 'filter1_arg1': 'c136', 'modulator1_curve2': 6, 
  'osc2_intensity': 'c9', 'env1_delay_time': 'c128', 'env3_delay_time': 'c65', 'modulator4_curve1': 9, 'env3_sustain_level': 'c71', 
  'pan': 'c6', 'env4_release_time': 'c21', 'osc2_pitch': 'c7', 'modulator2_env_attack': 'c123', 'noise_fader': 'c2', 
  'env4_sustain_level': 'c20', 'env1_ktr': 'c127', 'filter1_arg3': 'c138', 'macro4_control': 'c99', 'env3_decay_level': 'c69', 
  'noise_amp': 'c1', 'env2_release_time': 'c31', 'macro6_control': 'c101', 'modosc_ring': 'c46', 'osc3_intensity': 'c113', 
  'env3_vel': 'c63', 'modosc_filterfm': 'c49', 'env4_decay_level': 'c18', 'env4_vel': 'c12', 'osc3_amp': 'c114', 
  'filter_parseq': 'c104', 'feedback_fader': 'c78', 'modulator2_rate': 'c116', 'fx1_arg3': 'c75', 'modulator4_rate': 'c79', 
  'env3_attack_time': 'c66', 'filter1_amp': 'c139', 'modulator2_env_decay': 'c124', 'env1_release_time': 'c135', 'fx1_arg1': 'c73', 
  'osc3_wt_pos': 'c112', 'env2_delay_time': 'c24', 'modulator3_curve1': 1, 'env1_attack_level': 'c130', 'osc1_fader': 'c110', 
  'fx2_arg2': 'c42', 'modulator2_amp': 'c117', 'filter2_amp': 'c95', 'osc3_wt': 14, 'env4_attack_time': 'c15', 
  'modulator3_env_attack': 'c39', 'gate': 1, 'env1_decay_time': 'c131', 'modulator2_curve2': 16, 'env2_ktr': 'c23', 
  'modosc_pitch': 'c45', 'bypass_mod': 'c88', 'env4_attack_level': 'c16', 'env1_sustain_time': 'c133', 'filter2_arg1': 'c92', 
  'insert2_arg2': 'c4', 'macro1_control': 'c96', 'env2_decay_level': 'c28', 'env2_sustain_time': 'c29', 'fx1_arg4': 'c76', 
  'env3_ktr': 'c64', 'env1_vel': 'c126', 'feedback_amp': 'c77', 'macro5_control': 'c100', 'eq_lowshelf': 'c50', 
  'amp_mod': 'c5', 'modulator1_rate': 'c54', 'env2_decay_time': 'c27', 'modulator4_curve2': 10, 'filter2_arg2': 'c93', 
  'env3_sustain_time': 'c70', 'noise_color': 'c0', 'modosc_position': 'c48', 'env1_attack_time': 'c129', 'env1_sustain_level': 'c134', 
  'eq_highshelf': 'c53', 'modulator3_amp': 'c33', 'modulator1_ampmod': 'c56', 'osc1_amp': 'c109', 'modulator2_ampmod': 'c118', 
  'insert1_arg1': 'c90', 'osc2_wt_pos': 'c8', 'macro3_control': 'c98', 'eq_freq': 'c52', 'modulator1_env_decay': 'c62', 
  'modulator1_env_attack': 'c61', 'insert2_arg1': 'c3', 'env4_ktr': 'c13', 'env2_attack_level': 'c26', 'env1_decay_level': 'c132', 
  'env4_sustain_time': 'c19', 'env3_decay_time': 'c68', 'env4_delay_time': 'c14', 'modulator1_amp': 'c55', 'fx2_arg3': 'c43', 
  'modosc_phase': 'c47', 'osc3_pitch': 'c111', 'modulator3_curve2': 2, 'filter1_arg2': 'c137', 'amp': 'c125', 
  'modulator4_env_decay': 'c87', 'bypass_amp': 'c89', 'macro7_control': 'c102', 'modulator3_rate': 'c32', 'filter_mix': 'c105', 
  'osc2_wt': 0, 'env2_sustain_level': 'c30', 'modulator1_curve1': 5, 'modulator4_amp': 'c80', 'modulator1_glidefade': 'c57', 
  'eq_boost': 'c51', 'modulator3_env_decay': 'c40', 'osc3_fader': 'c115', 'macro2_control': 'c97', 'osc1_wt': 13, 
  'osc1_pitch': 'c106' )
###########----- making note
########### making synth
########### making fx
soul2
110, 90, 10, 100, 0, 10
soul2
108, 88, 10, 98, 0, 10
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.27771363475756, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.27771363475756 ]
class_pparam_controller.set_property: [ value, 0.28751755632619, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.28751755632619 ]
class_pparam_controller.set_property: [ value, 0.29732147789481, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.29732147789481 ]
class_pparam_controller.set_property: [ value, 0.30712539946344, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.30712539946344 ]
class_pparam_controller.set_property: [ value, 0.35614500730658, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.35614500730658 ]
class_pparam_controller.set_property: [ value, 0.36387502238953, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.36387502238953 ]
class_pparam_controller.set_property: [ value, 0.39272117623569, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.39272117623569 ]
class_pparam_controller.set_property: [ value, 0.40233656085107, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.40233656085107 ]
class_pparam_controller.set_property: [ value, 0.41195194546646, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.41195194546646 ]
class_pparam_controller.set_property: [ value, 0.43118271469723, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.43118271469723 ]
class_pparam_controller.set_property: [ value, 0.44079809931261, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.44079809931261 ]
class_pparam_controller.set_property: [ value, 0.450413483928, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.450413483928 ]
class_pparam_controller.set_property: [ value, 0.46002886854338, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.46002886854338 ]
class_pparam_controller.set_property: [ value, 0.47925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.47925963777415 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.43925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.43925963777415 ]
class_pparam_controller.set_property: [ value, 0.42925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.42925963777415 ]
class_pparam_controller.set_property: [ value, 0.41925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.41925963777415 ]
class_pparam_controller.set_property: [ value, 0.39925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.39925963777415 ]
class_pparam_controller.set_property: [ value, 0.38925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.38925963777415 ]
class_pparam_controller.set_property: [ value, 0.37925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.37925963777415 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.36925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.36925963777415 ]
class_pparam_controller.set_property: [ value, 0.33925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.33925963777415 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ curve, saw1, true ]
load_curve_in_wavetable_buffer: size: 512
buffer: Buffer(5, 512, 1, 44100, /tmp/1114892943)
class_simple_curvegraph_view: set_property: [ curve, saw1 ]
class_popup_view: set_property: [ curve, saw1 ]
class_curve_select_view: set_property: [ curve, saw1 ]
done
class_pparam_controller.set_property: [ value, 0.35925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.35925963777415 ]
class_pparam_controller.set_property: [ value, 0.36925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.36925963777415 ]
class_pparam_controller.set_property: [ value, 0.37925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.37925963777415 ]
class_pparam_controller.set_property: [ value, 0.38925963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.38925963777415 ]
class_pparam_controller.set_property: [ value, 0.39808316718591, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.39808316718591 ]
class_pparam_controller.set_property: [ value, 0.40788708875454, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.40788708875454 ]
class_pparam_controller.set_property: [ value, 0.41769101032317, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.41769101032317 ]
class_pparam_controller.set_property: [ value, 0.4274949318918, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.4274949318918 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.45464425315876, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.45464425315876 ]
class_pparam_controller.set_property: [ value, 0.46425963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.46425963777415 ]
class_pparam_controller.set_property: [ value, 0.47387502238953, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.47387502238953 ]
class_pparam_controller.set_property: [ value, 0.48076907173641, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.48076907173641 ]
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.49963699626472, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.49963699626472 ]
class_pparam_controller.set_property: [ value, 0.50592630444082, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50592630444082 ]
class_pparam_controller.set_property: [ value, 0.50289600141051, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50289600141051 ]
class_pparam_controller.set_property: [ value, 0.49997392348844, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.49997392348844 ]
class_pparam_controller.set_property: [ value, 0.50592630444082, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.50592630444082 ]
class_pparam_controller.set_property: [ value, 0.51469823426538, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.51469823426538 ]
class_pparam_controller.set_property: [ value, 0.52029412053277, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.52029412053277 ]
class_pparam_controller.set_property: [ value, 0.53753549984311, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.53753549984311 ]
class_pparam_controller.set_property: [ value, 0.54615618949829, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.54615618949829 ]
class_pparam_controller.set_property: [ value, 0.55592630444082, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55592630444082 ]
class_pparam_controller.set_property: [ value, 0.56425963777415, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.56425963777415 ]
class_pparam_controller.set_property: [ value, 0.57259297110748, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.57259297110748 ]
class_pparam_controller.set_property: [ value, 0.58092630444082, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.58092630444082 ]
class_pparam_controller.set_property: [ value, 0.59335799842989, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.59335799842989 ]
class_pparam_controller.set_property: [ value, 0.61345318616125, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.61345318616125 ]
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.56537626308432, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.56537626308432 ]
class_pparam_controller.set_property: [ value, 0.55684941257634, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55684941257634 ]
class_pparam_controller.set_property: [ value, 0.54863837134643, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.54863837134643 ]
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.55863837134643, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55863837134643 ]
class_pparam_controller.set_property: [ value, 0.57863837134643, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.57863837134643 ]
class_pparam_controller.set_property: [ value, 0.58863837134643, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.58863837134643 ]
class_pparam_controller.set_property: [ value, 0.59863837134643, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.59863837134643 ]
class_pparam_controller.set_property: [ value, 0.60863837134643, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60863837134643 ]
class_pparam_controller.set_property: [ value, 0.62556144826951, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.62556144826951 ]
###########----- making note
########### making synth
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.61556144826951, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.61556144826951 ]
class_pparam_controller.set_property: [ value, 0.60556144826951, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.60556144826951 ]
class_pparam_controller.set_property: [ value, 0.59556144826951, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.59556144826951 ]
class_pparam_controller.set_property: [ value, 0.57654184042637, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.57654184042637 ]
class_pparam_controller.set_property: [ value, 0.55693399728912, true ]
before final_val
ext: [ modulator1_rate, 0 ]
class_pparam_controller: update_val: modulator1_rate
pknob set_property: [ value, 0.55693399728912 ]
###########----- making note
########### making synth
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
soul2
108, 88, 10, 98, 21.043478243053, 31.043478243053
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.40217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40217391308397 ]
soul2
108, 88, 10, 98, 35.391304351389, 45.391304351389
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 54.521739162505, 64.521739162505
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.67391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67391304392368 ]
soul2
108, 88, 10, 98, 59.304347865283, 69.304347865283
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.72826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72826086916029 ]
soul2
108, 88, 10, 98, 64.086956486106, 74.086956486106
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.78260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78260869532824 ]
soul2
108, 88, 10, 98, 68.869565188885, 78.869565188885
class_pparam_controller.set_property: [ value, 0.80434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80434782616794 ]
soul2
108, 88, 10, 98, 70.782608702779, 80.782608702779
class_pparam_controller.set_property: [ value, 0.81521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81521739158779 ]
soul2
108, 88, 10, 98, 71.739130459726, 81.739130459726
class_pparam_controller.set_property: [ value, 0.83695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83695652149618 ]
soul2
108, 88, 10, 98, 73.652173891664, 83.652173891664
class_pparam_controller.set_property: [ value, 0.85869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85869565233588 ]
soul2
108, 88, 10, 98, 75.565217405558, 85.565217405558
class_pparam_controller.set_property: [ value, 0.86956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86956521775573 ]
soul2
108, 88, 10, 98, 76.521739162505, 86.521739162505
class_pparam_controller.set_property: [ value, 0.88043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.88043478224427 ]
soul2
108, 88, 10, 98, 77.478260837495, 87.478260837495
class_pparam_controller.set_property: [ value, 0.89130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89130434766412 ]
soul2
108, 88, 10, 98, 78.434782594442, 88.434782594442
class_pparam_controller.set_property: [ value, 0.91304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91304347850382 ]
soul2
108, 88, 10, 98, 80.347826108336, 90.347826108336
class_pparam_controller.set_property: [ value, 0.92391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92391304392368 ]
soul2
108, 88, 10, 98, 81.304347865283, 91.304347865283
class_pparam_controller.set_property: [ value, 0.93478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93478260841221 ]
soul2
108, 88, 10, 98, 82.260869540274, 92.260869540274
class_pparam_controller.set_property: [ value, 0.94565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94565217383206 ]
soul2
108, 88, 10, 98, 83.217391297221, 93.217391297221
class_pparam_controller.set_property: [ value, 0.96739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96739130467176 ]
soul2
108, 88, 10, 98, 85.130434811115, 95.130434811115
class_pparam_controller.set_property: [ value, 0.97826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97826086916029 ]
soul2
108, 88, 10, 98, 86.086956486106, 96.086956486106
class_pparam_controller.set_property: [ value, 0.98913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98913043458015 ]
soul2
108, 88, 10, 98, 87.043478243053, 97.043478243053
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
108, 88, 10, 98, 88, 98
class_pparam_controller.set_property: [ value, 0.98913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98913043458015 ]
soul2
108, 88, 10, 98, 87.043478243053, 97.043478243053
class_pparam_controller.set_property: [ value, 0.97826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97826086916029 ]
soul2
108, 88, 10, 98, 86.086956486106, 96.086956486106
class_pparam_controller.set_property: [ value, 0.96739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96739130467176 ]
soul2
108, 88, 10, 98, 85.130434811115, 95.130434811115
class_pparam_controller.set_property: [ value, 0.94565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94565217383206 ]
soul2
108, 88, 10, 98, 83.217391297221, 93.217391297221
class_pparam_controller.set_property: [ value, 0.93478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93478260841221 ]
soul2
108, 88, 10, 98, 82.260869540274, 92.260869540274
class_pparam_controller.set_property: [ value, 0.92391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92391304392368 ]
soul2
108, 88, 10, 98, 81.304347865283, 91.304347865283
class_pparam_controller.set_property: [ value, 0.91304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91304347850382 ]
soul2
108, 88, 10, 98, 80.347826108336, 90.347826108336
class_pparam_controller.set_property: [ value, 0.90217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90217391308397 ]
soul2
108, 88, 10, 98, 79.391304351389, 89.391304351389
class_pparam_controller.set_property: [ value, 0.88043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.88043478224427 ]
soul2
108, 88, 10, 98, 77.478260837495, 87.478260837495
class_pparam_controller.set_property: [ value, 0.86956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86956521775573 ]
soul2
108, 88, 10, 98, 76.521739162505, 86.521739162505
class_pparam_controller.set_property: [ value, 0.85869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85869565233588 ]
soul2
108, 88, 10, 98, 75.565217405558, 85.565217405558
class_pparam_controller.set_property: [ value, 0.84782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84782608691603 ]
soul2
108, 88, 10, 98, 74.608695648611, 84.608695648611
class_pparam_controller.set_property: [ value, 0.82608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82608695607632 ]
soul2
108, 88, 10, 98, 72.695652134717, 82.695652134717
class_pparam_controller.set_property: [ value, 0.81521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81521739158779 ]
soul2
108, 88, 10, 98, 71.739130459726, 81.739130459726
class_pparam_controller.set_property: [ value, 0.80434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80434782616794 ]
soul2
108, 88, 10, 98, 70.782608702779, 80.782608702779
class_pparam_controller.set_property: [ value, 0.78260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78260869532824 ]
soul2
108, 88, 10, 98, 68.869565188885, 78.869565188885
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.73913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73913043458015 ]
soul2
108, 88, 10, 98, 65.043478243053, 75.043478243053
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.68478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68478260841221 ]
soul2
108, 88, 10, 98, 60.260869540274, 70.260869540274
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.63043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63043478224427 ]
soul2
108, 88, 10, 98, 55.478260837495, 65.478260837495
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
soul2
108, 88, 10, 98, 36.347826108336, 46.347826108336
class_pparam_controller.set_property: [ value, 0.40217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40217391308397 ]
soul2
108, 88, 10, 98, 35.391304351389, 45.391304351389
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
soul2
108, 88, 10, 98, 12.434782594442, 22.434782594442
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.40217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40217391308397 ]
soul2
108, 88, 10, 98, 35.391304351389, 45.391304351389
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
soul2
108, 88, 10, 98, 49.739130459726, 59.739130459726
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 54.521739162505, 64.521739162505
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.67391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67391304392368 ]
soul2
108, 88, 10, 98, 59.304347865283, 69.304347865283
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.72826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72826086916029 ]
soul2
108, 88, 10, 98, 64.086956486106, 74.086956486106
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.78260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78260869532824 ]
soul2
108, 88, 10, 98, 68.869565188885, 78.869565188885
class_pparam_controller.set_property: [ value, 0.81521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81521739158779 ]
soul2
108, 88, 10, 98, 71.739130459726, 81.739130459726
class_pparam_controller.set_property: [ value, 0.82608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82608695607632 ]
soul2
108, 88, 10, 98, 72.695652134717, 82.695652134717
class_pparam_controller.set_property: [ value, 0.83695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83695652149618 ]
soul2
108, 88, 10, 98, 73.652173891664, 83.652173891664
class_pparam_controller.set_property: [ value, 0.85869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85869565233588 ]
soul2
108, 88, 10, 98, 75.565217405558, 85.565217405558
class_pparam_controller.set_property: [ value, 0.86956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86956521775573 ]
soul2
108, 88, 10, 98, 76.521739162505, 86.521739162505
class_pparam_controller.set_property: [ value, 0.88043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.88043478224427 ]
soul2
108, 88, 10, 98, 77.478260837495, 87.478260837495
class_pparam_controller.set_property: [ value, 0.89130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89130434766412 ]
soul2
108, 88, 10, 98, 78.434782594442, 88.434782594442
class_pparam_controller.set_property: [ value, 0.91304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91304347850382 ]
soul2
108, 88, 10, 98, 80.347826108336, 90.347826108336
class_pparam_controller.set_property: [ value, 0.92391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92391304392368 ]
soul2
108, 88, 10, 98, 81.304347865283, 91.304347865283
class_pparam_controller.set_property: [ value, 0.93478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93478260841221 ]
soul2
108, 88, 10, 98, 82.260869540274, 92.260869540274
class_pparam_controller.set_property: [ value, 0.94565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94565217383206 ]
soul2
108, 88, 10, 98, 83.217391297221, 93.217391297221
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.96739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96739130467176 ]
soul2
108, 88, 10, 98, 85.130434811115, 95.130434811115
class_pparam_controller.set_property: [ value, 0.98913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98913043458015 ]
soul2
108, 88, 10, 98, 87.043478243053, 97.043478243053
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
108, 88, 10, 98, 88, 98
class_pparam_controller.set_property: [ value, 0.98913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98913043458015 ]
soul2
108, 88, 10, 98, 87.043478243053, 97.043478243053
class_pparam_controller.set_property: [ value, 0.97826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97826086916029 ]
soul2
108, 88, 10, 98, 86.086956486106, 96.086956486106
class_pparam_controller.set_property: [ value, 0.96739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96739130467176 ]
soul2
108, 88, 10, 98, 85.130434811115, 95.130434811115
class_pparam_controller.set_property: [ value, 0.95652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95652173925191 ]
soul2
108, 88, 10, 98, 84.173913054168, 94.173913054168
class_pparam_controller.set_property: [ value, 0.93478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93478260841221 ]
class_pparam_controller.set_property: [ value, 0.92391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92391304392368 ]
soul2
108, 88, 10, 98, 81.304347865283, 91.304347865283
class_pparam_controller.set_property: [ value, 0.91304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91304347850382 ]
soul2
108, 88, 10, 98, 80.347826108336, 90.347826108336
class_pparam_controller.set_property: [ value, 0.90217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90217391308397 ]
soul2
108, 88, 10, 98, 79.391304351389, 89.391304351389
class_pparam_controller.set_property: [ value, 0.88043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.88043478224427 ]
soul2
108, 88, 10, 98, 77.478260837495, 87.478260837495
class_pparam_controller.set_property: [ value, 0.86956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86956521775573 ]
soul2
108, 88, 10, 98, 76.521739162505, 86.521739162505
class_pparam_controller.set_property: [ value, 0.85869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85869565233588 ]
soul2
108, 88, 10, 98, 75.565217405558, 85.565217405558
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.84782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84782608691603 ]
soul2
108, 88, 10, 98, 74.608695648611, 84.608695648611
class_pparam_controller.set_property: [ value, 0.82608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82608695607632 ]
soul2
108, 88, 10, 98, 72.695652134717, 82.695652134717
class_pparam_controller.set_property: [ value, 0.81521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81521739158779 ]
soul2
108, 88, 10, 98, 71.739130459726, 81.739130459726
class_pparam_controller.set_property: [ value, 0.80434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80434782616794 ]
soul2
108, 88, 10, 98, 70.782608702779, 80.782608702779
class_pparam_controller.set_property: [ value, 0.79347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79347826074809 ]
soul2
108, 88, 10, 98, 69.826086945832, 79.826086945832
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.73913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73913043458015 ]
soul2
108, 88, 10, 98, 65.043478243053, 75.043478243053
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.68478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68478260841221 ]
soul2
108, 88, 10, 98, 60.260869540274, 70.260869540274
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.63043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63043478224427 ]
soul2
108, 88, 10, 98, 55.478260837495, 65.478260837495
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
soul2
108, 88, 10, 98, 49.739130459726, 59.739130459726
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.45652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45652173925191 ]
soul2
108, 88, 10, 98, 40.173913054168, 50.173913054168
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
soul2
108, 88, 10, 98, 36.347826108336, 46.347826108336
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
soul2
108, 88, 10, 98, 12.434782594442, 22.434782594442
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
soul2
108, 88, 10, 98, 21.043478243053, 31.043478243053
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.40217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40217391308397 ]
soul2
108, 88, 10, 98, 35.391304351389, 45.391304351389
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.45652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45652173925191 ]
soul2
108, 88, 10, 98, 40.173913054168, 50.173913054168
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
soul2
108, 88, 10, 98, 49.739130459726, 59.739130459726
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 54.521739162505, 64.521739162505
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.67391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67391304392368 ]
soul2
108, 88, 10, 98, 59.304347865283, 69.304347865283
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.72826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72826086916029 ]
soul2
108, 88, 10, 98, 64.086956486106, 74.086956486106
class_pparam_controller.set_property: [ value, 0.73913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73913043458015 ]
soul2
108, 88, 10, 98, 65.043478243053, 75.043478243053
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.78260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78260869532824 ]
soul2
108, 88, 10, 98, 68.869565188885, 78.869565188885
class_pparam_controller.set_property: [ value, 0.80434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80434782616794 ]
soul2
108, 88, 10, 98, 70.782608702779, 80.782608702779
class_pparam_controller.set_property: [ value, 0.81521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81521739158779 ]
soul2
108, 88, 10, 98, 71.739130459726, 81.739130459726
class_pparam_controller.set_property: [ value, 0.82608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82608695607632 ]
soul2
108, 88, 10, 98, 72.695652134717, 82.695652134717
class_pparam_controller.set_property: [ value, 0.83695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.83695652149618 ]
soul2
108, 88, 10, 98, 73.652173891664, 83.652173891664
class_pparam_controller.set_property: [ value, 0.85869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85869565233588 ]
soul2
108, 88, 10, 98, 75.565217405558, 85.565217405558
class_pparam_controller.set_property: [ value, 0.86956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86956521775573 ]
soul2
108, 88, 10, 98, 76.521739162505, 86.521739162505
class_pparam_controller.set_property: [ value, 0.88043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.88043478224427 ]
soul2
108, 88, 10, 98, 77.478260837495, 87.478260837495
class_pparam_controller.set_property: [ value, 0.89130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89130434766412 ]
soul2
108, 88, 10, 98, 78.434782594442, 88.434782594442
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.91304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91304347850382 ]
soul2
108, 88, 10, 98, 80.347826108336, 90.347826108336
class_pparam_controller.set_property: [ value, 0.92391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92391304392368 ]
soul2
108, 88, 10, 98, 81.304347865283, 91.304347865283
class_pparam_controller.set_property: [ value, 0.93478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93478260841221 ]
soul2
108, 88, 10, 98, 82.260869540274, 92.260869540274
class_pparam_controller.set_property: [ value, 0.94565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.94565217383206 ]
soul2
108, 88, 10, 98, 83.217391297221, 93.217391297221
class_pparam_controller.set_property: [ value, 0.96739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.96739130467176 ]
soul2
108, 88, 10, 98, 85.130434811115, 95.130434811115
class_pparam_controller.set_property: [ value, 0.97826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97826086916029 ]
soul2
108, 88, 10, 98, 86.086956486106, 96.086956486106
class_pparam_controller.set_property: [ value, 0.98913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98913043458015 ]
soul2
108, 88, 10, 98, 87.043478243053, 97.043478243053
class_pparam_controller.set_property: [ value, 1, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 1 ]
soul2
108, 88, 10, 98, 88, 98
class_pparam_controller.set_property: [ value, 0.98913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.98913043458015 ]
soul2
108, 88, 10, 98, 87.043478243053, 97.043478243053
class_pparam_controller.set_property: [ value, 0.97826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.97826086916029 ]
soul2
108, 88, 10, 98, 86.086956486106, 96.086956486106
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.95652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.95652173925191 ]
soul2
108, 88, 10, 98, 84.173913054168, 94.173913054168
class_pparam_controller.set_property: [ value, 0.93478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.93478260841221 ]
soul2
108, 88, 10, 98, 82.260869540274, 92.260869540274
class_pparam_controller.set_property: [ value, 0.92391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.92391304392368 ]
soul2
108, 88, 10, 98, 81.304347865283, 91.304347865283
class_pparam_controller.set_property: [ value, 0.91304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91304347850382 ]
soul2
108, 88, 10, 98, 80.347826108336, 90.347826108336
class_pparam_controller.set_property: [ value, 0.90217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.90217391308397 ]
soul2
108, 88, 10, 98, 79.391304351389, 89.391304351389
class_pparam_controller.set_property: [ value, 0.88043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.88043478224427 ]
soul2
108, 88, 10, 98, 77.478260837495, 87.478260837495
class_pparam_controller.set_property: [ value, 0.86956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86956521775573 ]
soul2
108, 88, 10, 98, 76.521739162505, 86.521739162505
class_pparam_controller.set_property: [ value, 0.85869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85869565233588 ]
soul2
108, 88, 10, 98, 75.565217405558, 85.565217405558
class_pparam_controller.set_property: [ value, 0.84782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84782608691603 ]
soul2
108, 88, 10, 98, 74.608695648611, 84.608695648611
class_pparam_controller.set_property: [ value, 0.82608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82608695607632 ]
soul2
108, 88, 10, 98, 72.695652134717, 82.695652134717
class_pparam_controller.set_property: [ value, 0.80434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80434782616794 ]
soul2
108, 88, 10, 98, 70.782608702779, 80.782608702779
class_pparam_controller.set_property: [ value, 0.79347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79347826074809 ]
soul2
108, 88, 10, 98, 69.826086945832, 79.826086945832
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.72826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72826086916029 ]
soul2
108, 88, 10, 98, 64.086956486106, 74.086956486106
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.68478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68478260841221 ]
soul2
108, 88, 10, 98, 60.260869540274, 70.260869540274
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.63043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63043478224427 ]
soul2
108, 88, 10, 98, 55.478260837495, 65.478260837495
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
soul2
108, 88, 10, 98, 36.347826108336, 46.347826108336
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
soul2
108, 88, 10, 98, 12.434782594442, 22.434782594442
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.40217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40217391308397 ]
soul2
108, 88, 10, 98, 35.391304351389, 45.391304351389
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.45652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45652173925191 ]
soul2
108, 88, 10, 98, 40.173913054168, 50.173913054168
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
soul2
108, 88, 10, 98, 49.739130459726, 59.739130459726
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 54.521739162505, 64.521739162505
class_pparam_controller.set_property: [ value, 0.63043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63043478224427 ]
soul2
108, 88, 10, 98, 55.478260837495, 65.478260837495
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
soul2
108, 88, 10, 98, 36.347826108336, 46.347826108336
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
soul2
108, 88, 10, 98, 21.043478243053, 31.043478243053
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
soul2
108, 88, 10, 98, 12.434782594442, 22.434782594442
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
soul2
108, 88, 10, 98, 21.043478243053, 31.043478243053
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.40217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40217391308397 ]
soul2
108, 88, 10, 98, 35.391304351389, 45.391304351389
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.45652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45652173925191 ]
soul2
108, 88, 10, 98, 40.173913054168, 50.173913054168
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 49.739130459726, 59.739130459726
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 54.521739162505, 64.521739162505
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.67391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67391304392368 ]
soul2
108, 88, 10, 98, 59.304347865283, 69.304347865283
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.72826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72826086916029 ]
soul2
108, 88, 10, 98, 64.086956486106, 74.086956486106
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.78260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78260869532824 ]
soul2
108, 88, 10, 98, 68.869565188885, 78.869565188885
class_pparam_controller.set_property: [ value, 0.80434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80434782616794 ]
soul2
108, 88, 10, 98, 70.782608702779, 80.782608702779
class_pparam_controller.set_property: [ value, 0.81521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81521739158779 ]
soul2
108, 88, 10, 98, 71.739130459726, 81.739130459726
class_pparam_controller.set_property: [ value, 0.80434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80434782616794 ]
soul2
108, 88, 10, 98, 70.782608702779, 80.782608702779
class_pparam_controller.set_property: [ value, 0.79347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79347826074809 ]
soul2
108, 88, 10, 98, 69.826086945832, 79.826086945832
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.73913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73913043458015 ]
soul2
108, 88, 10, 98, 65.043478243053, 75.043478243053
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.68478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68478260841221 ]
soul2
108, 88, 10, 98, 60.260869540274, 70.260869540274
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.63043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63043478224427 ]
soul2
108, 88, 10, 98, 55.478260837495, 65.478260837495
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.45652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45652173925191 ]
soul2
108, 88, 10, 98, 40.173913054168, 50.173913054168
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
soul2
108, 88, 10, 98, 36.347826108336, 46.347826108336
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.40217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40217391308397 ]
soul2
108, 88, 10, 98, 35.391304351389, 45.391304351389
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
class_pparam_controller.set_property: [ value, 0.45652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45652173925191 ]
soul2
108, 88, 10, 98, 40.173913054168, 50.173913054168
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
soul2
108, 88, 10, 98, 12.434782594442, 22.434782594442
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
soul2
108, 88, 10, 98, 21.043478243053, 31.043478243053
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 36.347826108336, 46.347826108336
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
class_pparam_controller.set_property: [ value, 0.45652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45652173925191 ]
soul2
108, 88, 10, 98, 40.173913054168, 50.173913054168
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
soul2
108, 88, 10, 98, 49.739130459726, 59.739130459726
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 54.521739162505, 64.521739162505
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.67391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67391304392368 ]
soul2
108, 88, 10, 98, 59.304347865283, 69.304347865283
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.72826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72826086916029 ]
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.78260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78260869532824 ]
soul2
108, 88, 10, 98, 70.782608702779, 80.782608702779
class_pparam_controller.set_property: [ value, 0.80434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.80434782616794 ]
class_pparam_controller.set_property: [ value, 0.82608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.82608695607632 ]
soul2
108, 88, 10, 98, 72.695652134717, 82.695652134717
class_pparam_controller.set_property: [ value, 0.85869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85869565233588 ]
class_pparam_controller.set_property: [ value, 0.86956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.86956521775573 ]
soul2
108, 88, 10, 98, 76.521739162505, 86.521739162505
class_pparam_controller.set_property: [ value, 0.88043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.88043478224427 ]
soul2
108, 88, 10, 98, 77.478260837495, 87.478260837495
class_pparam_controller.set_property: [ value, 0.89130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.89130434766412 ]
soul2
108, 88, 10, 98, 78.434782594442, 88.434782594442
class_pparam_controller.set_property: [ value, 0.91304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.91304347850382 ]
soul2
108, 88, 10, 98, 80.347826108336, 90.347826108336
class_pparam_controller.set_property: [ value, 0.88043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.88043478224427 ]
soul2
108, 88, 10, 98, 77.478260837495, 87.478260837495
class_pparam_controller.set_property: [ value, 0.85869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.85869565233588 ]
soul2
108, 88, 10, 98, 75.565217405558, 85.565217405558
class_pparam_controller.set_property: [ value, 0.84782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.84782608691603 ]
soul2
108, 88, 10, 98, 74.608695648611, 84.608695648611
class_pparam_controller.set_property: [ value, 0.81521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.81521739158779 ]
class_pparam_controller.set_property: [ value, 0.79347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.79347826074809 ]
soul2
108, 88, 10, 98, 69.826086945832, 79.826086945832
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
class_pparam_controller.set_property: [ value, 0.73913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73913043458015 ]
soul2
108, 88, 10, 98, 65.043478243053, 75.043478243053
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
soul2
108, 88, 10, 98, 62.173913054168, 72.173913054168
class_pparam_controller.set_property: [ value, 0.68478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68478260841221 ]
soul2
108, 88, 10, 98, 60.260869540274, 70.260869540274
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
soul2
108, 88, 10, 98, 12.434782594442, 22.434782594442
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 40.173913054168, 50.173913054168
class_pparam_controller.set_property: [ value, 0.45652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.45652173925191 ]
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 54.521739162505, 64.521739162505
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.67391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67391304392368 ]
soul2
108, 88, 10, 98, 59.304347865283, 69.304347865283
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.70652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.70652173925191 ]
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
soul2
108, 88, 10, 98, 63.130434811115, 73.130434811115
class_pparam_controller.set_property: [ value, 0.72826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.72826086916029 ]
soul2
108, 88, 10, 98, 64.086956486106, 74.086956486106
class_pparam_controller.set_property: [ value, 0.75, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.75 ]
soul2
108, 88, 10, 98, 66, 76
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.78260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.78260869532824 ]
soul2
108, 88, 10, 98, 68.869565188885, 78.869565188885
class_pparam_controller.set_property: [ value, 0.77173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.77173913083971 ]
soul2
108, 88, 10, 98, 67.913043513894, 77.913043513894
class_pparam_controller.set_property: [ value, 0.76086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.76086956541985 ]
soul2
108, 88, 10, 98, 66.956521756947, 76.956521756947
class_pparam_controller.set_property: [ value, 0.73913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.73913043458015 ]
soul2
108, 88, 10, 98, 65.043478243053, 75.043478243053
class_pparam_controller.set_property: [ value, 0.71739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.71739130467176 ]
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
class_pparam_controller.set_property: [ value, 0.68478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68478260841221 ]
soul2
108, 88, 10, 98, 60.260869540274, 70.260869540274
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.65217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.65217391308397 ]
soul2
108, 88, 10, 98, 57.391304351389, 67.391304351389
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 54.521739162505, 64.521739162505
class_pparam_controller.set_property: [ value, 0.60869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.60869565233588 ]
soul2
108, 88, 10, 98, 53.565217405558, 63.565217405558
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
soul2
108, 88, 10, 98, 36.347826108336, 46.347826108336
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
soul2
108, 88, 10, 98, 32.521739162505, 42.521739162505
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
class_pparam_controller.set_property: [ value, 0.40217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.40217391308397 ]
soul2
108, 88, 10, 98, 35.391304351389, 45.391304351389
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 49.739130459726, 59.739130459726
class_pparam_controller.set_property: [ value, 0.56521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.56521739158779 ]
class_pparam_controller.set_property: [ value, 0.58695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.58695652149618 ]
soul2
108, 88, 10, 98, 51.652173891664, 61.652173891664
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
soul2
108, 88, 10, 98, 52.608695648611, 62.608695648611
class_pparam_controller.set_property: [ value, 0.61956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.61956521775573 ]
soul2
108, 88, 10, 98, 56.434782594442, 66.434782594442
class_pparam_controller.set_property: [ value, 0.64130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.64130434766412 ]
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.67391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.67391304392368 ]
soul2
108, 88, 10, 98, 59.304347865283, 69.304347865283
class_pparam_controller.set_property: [ value, 0.69565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.69565217383206 ]
soul2
108, 88, 10, 98, 61.217391297221, 71.217391297221
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.68478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.68478260841221 ]
soul2
108, 88, 10, 98, 60.260869540274, 70.260869540274
class_pparam_controller.set_property: [ value, 0.66304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.66304347850382 ]
soul2
108, 88, 10, 98, 58.347826108336, 68.347826108336
class_pparam_controller.set_property: [ value, 0.63043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.63043478224427 ]
soul2
108, 88, 10, 98, 55.478260837495, 65.478260837495
class_pparam_controller.set_property: [ value, 0.59782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.59782608691603 ]
class_pparam_controller.set_property: [ value, 0.57608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.57608695607632 ]
soul2
108, 88, 10, 98, 50.695652134717, 60.695652134717
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
class_pparam_controller.set_property: [ value, 0.47826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.47826086916029 ]
soul2
108, 88, 10, 98, 42.086956486106, 52.086956486106
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
soul2
108, 88, 10, 98, 36.347826108336, 46.347826108336
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
soul2
108, 88, 10, 98, 21.043478243053, 31.043478243053
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.34782608691603, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.34782608691603 ]
soul2
108, 88, 10, 98, 30.608695648611, 40.608695648611
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.42391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.42391304392368 ]
soul2
108, 88, 10, 98, 37.304347865283, 47.304347865283
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
class_pparam_controller.set_property: [ value, 0.5, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.5 ]
soul2
108, 88, 10, 98, 44, 54
class_pparam_controller.set_property: [ value, 0.51086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.51086956541985 ]
soul2
108, 88, 10, 98, 44.956521756947, 54.956521756947
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
class_pparam_controller.set_property: [ value, 0.55434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.55434782616794 ]
soul2
108, 88, 10, 98, 48.782608702779, 58.782608702779
class_pparam_controller.set_property: [ value, 0.54347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.54347826074809 ]
soul2
108, 88, 10, 98, 47.826086945832, 57.826086945832
class_pparam_controller.set_property: [ value, 0.53260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.53260869532824 ]
soul2
108, 88, 10, 98, 46.869565188885, 56.869565188885
class_pparam_controller.set_property: [ value, 0.52173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.52173913083971 ]
soul2
108, 88, 10, 98, 45.913043513894, 55.913043513894
class_pparam_controller.set_property: [ value, 0.48913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.48913043458015 ]
soul2
108, 88, 10, 98, 43.043478243053, 53.043478243053
class_pparam_controller.set_property: [ value, 0.46739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.46739130467176 ]
soul2
108, 88, 10, 98, 41.130434811115, 51.130434811115
class_pparam_controller.set_property: [ value, 0.44565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.44565217383206 ]
soul2
108, 88, 10, 98, 39.217391297221, 49.217391297221
class_pparam_controller.set_property: [ value, 0.43478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.43478260841221 ]
soul2
108, 88, 10, 98, 38.260869540274, 48.260869540274
class_pparam_controller.set_property: [ value, 0.41304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.41304347850382 ]
class_pparam_controller.set_property: [ value, 0.39130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.39130434766412 ]
soul2
108, 88, 10, 98, 34.434782594442, 44.434782594442
class_pparam_controller.set_property: [ value, 0.38043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.38043478224427 ]
soul2
108, 88, 10, 98, 33.478260837495, 43.478260837495
class_pparam_controller.set_property: [ value, 0.36956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.36956521775573 ]
class_pparam_controller.set_property: [ value, 0.35869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.35869565233588 ]
soul2
108, 88, 10, 98, 31.565217405558, 41.565217405558
class_pparam_controller.set_property: [ value, 0.33695652149618, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.33695652149618 ]
soul2
108, 88, 10, 98, 29.652173891664, 39.652173891664
class_pparam_controller.set_property: [ value, 0.32608695607632, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.32608695607632 ]
soul2
108, 88, 10, 98, 28.695652134717, 38.695652134717
class_pparam_controller.set_property: [ value, 0.31521739158779, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.31521739158779 ]
soul2
108, 88, 10, 98, 27.739130459726, 37.739130459726
class_pparam_controller.set_property: [ value, 0.30434782616794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.30434782616794 ]
soul2
108, 88, 10, 98, 26.782608702779, 36.782608702779
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
soul2
108, 88, 10, 98, 24.869565188885, 34.869565188885
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.22826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.22826086916029 ]
soul2
108, 88, 10, 98, 20.086956486106, 30.086956486106
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.16304347850382, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.16304347850382 ]
soul2
108, 88, 10, 98, 14.347826108336, 24.347826108336
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
soul2
108, 88, 10, 98, 12.434782594442, 22.434782594442
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
soul2
108, 88, 10, 98, 8.6086956486106, 18.608695648611
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.099999999627471, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.099999999627471 ]
soul2
108, 88, 10, 98, 8.7999999672174, 18.799999967217
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.10000000149012, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10000000149012 ]
soul2
108, 88, 10, 98, 8.8000001311302, 18.80000013113
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.054347826167941, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.054347826167941 ]
soul2
108, 88, 10, 98, 4.7826087027788, 14.782608702779
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 6.6956521347165, 16.695652134717
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.10869565233588, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.10869565233588 ]
soul2
108, 88, 10, 98, 9.5652174055576, 19.565217405558
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.28260869532824, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.28260869532824 ]
class_pparam_controller.set_property: [ value, 0.29347826074809, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.29347826074809 ]
soul2
108, 88, 10, 98, 25.826086945832, 35.826086945832
********************* releasing synth
###########----- making note
########### making synth
class_pparam_controller.set_property: [ value, 0.27173913083971, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.27173913083971 ]
soul2
108, 88, 10, 98, 23.913043513894, 33.913043513894
class_pparam_controller.set_property: [ value, 0.26086956541985, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.26086956541985 ]
soul2
108, 88, 10, 98, 22.956521756947, 32.956521756947
class_pparam_controller.set_property: [ value, 0.25, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.25 ]
soul2
108, 88, 10, 98, 22, 32
class_pparam_controller.set_property: [ value, 0.23913043458015, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.23913043458015 ]
soul2
108, 88, 10, 98, 21.043478243053, 31.043478243053
class_pparam_controller.set_property: [ value, 0.21739130467176, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.21739130467176 ]
soul2
108, 88, 10, 98, 19.130434811115, 29.130434811115
class_pparam_controller.set_property: [ value, 0.20652173925191, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.20652173925191 ]
soul2
108, 88, 10, 98, 18.173913054168, 28.173913054168
class_pparam_controller.set_property: [ value, 0.19565217383206, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.19565217383206 ]
soul2
108, 88, 10, 98, 17.217391297221, 27.217391297221
class_pparam_controller.set_property: [ value, 0.18478260841221, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.18478260841221 ]
soul2
108, 88, 10, 98, 16.260869540274, 26.260869540274
class_pparam_controller.set_property: [ value, 0.17391304392368, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.17391304392368 ]
soul2
108, 88, 10, 98, 15.304347865283, 25.304347865283
class_pparam_controller.set_property: [ value, 0.15217391308397, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.15217391308397 ]
soul2
108, 88, 10, 98, 13.391304351389, 23.391304351389
class_pparam_controller.set_property: [ value, 0.14130434766412, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.14130434766412 ]
soul2
108, 88, 10, 98, 12.434782594442, 22.434782594442
class_pparam_controller.set_property: [ value, 0.13043478224427, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.13043478224427 ]
soul2
108, 88, 10, 98, 11.478260837495, 21.478260837495
class_pparam_controller.set_property: [ value, 0.11956521775573, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.11956521775573 ]
soul2
108, 88, 10, 98, 10.521739162505, 20.521739162505
class_pparam_controller.set_property: [ value, 0.097826086916029, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.097826086916029 ]
class_pparam_controller.set_property: [ value, 0.086956521496177, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.086956521496177 ]
soul2
108, 88, 10, 98, 7.6521738916636, 17.652173891664
class_pparam_controller.set_property: [ value, 0.076086956076324, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.076086956076324 ]
soul2
108, 88, 10, 98, 5.7391304597259, 15.739130459726
class_pparam_controller.set_property: [ value, 0.065217391587794, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.065217391587794 ]
class_pparam_controller.set_property: [ value, 0.043478260748088, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.043478260748088 ]
soul2
108, 88, 10, 98, 3.8260869458318, 13.826086945832
********************* releasing synth
class_pparam_controller.set_property: [ value, 0.032608695328236, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.032608695328236 ]
soul2
108, 88, 10, 98, 2.8695651888847, 12.869565188885
class_pparam_controller.set_property: [ value, 0.021739130839705, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.021739130839705 ]
soul2
108, 88, 10, 98, 1.9130435138941, 11.913043513894
class_pparam_controller.set_property: [ value, 0.010869565419853, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0.010869565419853 ]
soul2
108, 88, 10, 98, 0.95652175694704, 10.956521756947
class_pparam_controller.set_property: [ value, 0, true ]
before final_val
ext: [ modulator1_glidefade, 0 ]
class_pparam_controller: update_val: modulator1_glidefade
pknob set_property: [ value, 0 ]
soul2
108, 88, 10, 98, 0, 10
###########----- making note
########### making synth
********************* releasing synth

a Main

/quit sent

Server
